Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["xTerior (provisional name)",
 FontSlant->"Italic",
 FontColor->RGBColor[1, 0, 0]]], "Title"],

Cell[TextData[{
 StyleBox["Exterior Calculus for ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["xAct",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]]
}], "Subtitle"],

Cell[TextData[{
 StyleBox["Alfonso Garc\[IAcute]a-Parrado G\[OAcute]mez-Lobo\n",
  FontSize->18],
 StyleBox["alfonso@math.uminho.pt",
  FontSize->14],
 "\n",
 StyleBox["Universidade do Minho, Portugal",
  FontSize->14],
 "\n\n",
 StyleBox["Leo C. Stein\n",
  FontSize->18],
 StyleBox["leo.stein@gmail.com\nCornell University, NY",
  FontSize->14],
 "\n\n",
 StyleBox["(c) 2006-2013, under GPL\n\nhttp://www.xAct.es/\n\
http://groups.google.com/group/xAct\n",
  FontSize->14],
 StyleBox["https://github.com/xAct-contrib",
  FontFamily->"Bitstream Vera Sans",
  FontSize->14]
}], "Subsubtitle"],

Cell[TextData[{
 StyleBox["xTerior",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 " is a package for exterior calculus in xAct.\n\n",
 StyleBox["xTerior",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 " is distributed under the GNU General Public License, and runs on top of ",
 StyleBox["xTensor",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 ", a free package for fast manipulation of abstract tensor expressions. Both \
can be downloaded from ",
 ButtonBox["http://www.xact.es/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.xact.es"], None},
  ButtonNote->"http://www.xact.es"]
}], "Text"],

Cell[TextData[StyleBox["Alfonso: is the version 0.8.5 OK ?",
 FontWeight->"Bold"]], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateList", "[", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2013", ",", "10", ",", "26", ",", "22", ",", "24", ",", 
   "40.452692`8.359522406097847"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5886452886129427`*^9, 3.589097161058838*^9, 3.5891311503762197`*^9, 
   3.589133055027255*^9, 3.589173445961647*^9, 3.589436965228517*^9, 
   3.5894389294648943`*^9, 3.5894402055848618`*^9, 3.589453507720121*^9, 
   3.589460466815509*^9, 3.589465739200204*^9, 3.589478046177367*^9, 
   3.589478555340446*^9, 3.58947872169517*^9, 3.589478801259448*^9, 
   3.5895601749612417`*^9, 3.589606177604434*^9, 3.5896233027840967`*^9, 
   3.589625102944717*^9, 3.589636683484232*^9, 3.5896379469476624`*^9, 
   3.589643134369792*^9, 3.5896432246356*^9, 3.58964450569165*^9, 
   3.589718947169668*^9, 3.589720935078327*^9, 3.589724660480283*^9, 
   3.5897248307141333`*^9, 3.5897361773277903`*^9, 3.589738872399968*^9, 
   3.589739093111567*^9, 3.5898051093864326`*^9, 3.589805395984097*^9, 
   3.5898057957620564`*^9, 3.5898092684726467`*^9, 3.5898094018954353`*^9, 
   3.5898100573025217`*^9, 3.589811683917288*^9, 3.5898832622042522`*^9, 
   3.589885825612598*^9, 3.589905831382224*^9, 3.589905985751981*^9, 
   3.589907472597983*^9, 3.589908847672922*^9, 3.589909122725567*^9, 
   3.590396318362896*^9, 3.59039897296027*^9, 3.590405889039723*^9, 
   3.5904060902153597`*^9, 3.5904749247314577`*^9, 3.5904843516921167`*^9, 
   3.590486255725704*^9, 3.590487010128964*^9, 3.590487297423168*^9, 
   3.5904877056373158`*^9, 3.5904879812338953`*^9, 3.590488358873253*^9, 
   3.590488544142139*^9, 3.590488736534482*^9, 3.5904897314745007`*^9, 
   3.590490069167001*^9, 3.590490626260859*^9, 3.590586499876857*^9, 
   3.590587442592598*^9, 3.590659875407134*^9, 3.590664455185028*^9, 
   3.590664604620008*^9, 3.5906647187330227`*^9, 3.590729702219634*^9, 
   3.590731706132511*^9, 3.590731987808722*^9, 3.590738148511573*^9, 
   3.590741860112172*^9, 3.590743286539627*^9, 3.590743597671432*^9, 
   3.590744195093932*^9, 3.590744476199188*^9, 3.590753919082337*^9, 
   3.590756585284711*^9, 3.590756628721336*^9, 3.590811447516872*^9, {
   3.59081970346633*^9, 3.590819719284441*^9}, 3.5909049295446863`*^9, 
   3.590910152252201*^9, 3.590910431125276*^9, 3.590910643089867*^9, 
   3.5909112596262503`*^9, 3.590912421439357*^9, 3.590919257704966*^9, 
   3.5910292036747093`*^9, 3.591072957362027*^9, 3.591177834059599*^9, 
   3.5915411063635406`*^9, 3.591807805302752*^9, {3.5918078536861477`*^9, 
   3.591807880456761*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xAct`xTerior`$xTensorVersionExpected", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<1.1.0\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"2013", ",", "9", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAct`xTerior`$Version", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<0.8.5\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"2013", ",", "7", ",", "1"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5898094174555807`*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 "1. ",
 StyleBox["Initialization",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell["1.0. TODO list", "Subsubsection"],

Cell[TextData[{
 "TODO : \n-Check conventions in the definition of the connection 1-form.\n\
-Check conventions in the definition of the curvature 2-form.\n-There are \
expressions in which ExtDiff has a second argument (a covariant derivative). \
I think that the best is just to remove the second argument. ",
 StyleBox["Alfonso: I think that this is now fixed.",
  FontWeight->"Bold"],
 "\n-In the definition of the connection forms there are no checks about the \
manifolds in which the covariant derivatives are defined and they may well be \
defined in different tangent bundles.\n-I think that the syntax of the \
connection form should be \n\
ConnectionForm[CovD,Sequence@@VBundlesOfCovD@CovD][a,-b]\n-Remove message \
\[OpenCurlyDoubleQuote]ManifoldOfCovD[PD] has been used\
\[CloseCurlyDoubleQuote].\n-ContractBasis and ToBasis commute with the \
exterior derivative. Implement it."
}], "Text",
 CellChangeTimes->{{3.58962434353786*^9, 3.5896243621435013`*^9}, {
   3.589625932564287*^9, 3.589625938467601*^9}, {3.589626007315003*^9, 
   3.589626062858141*^9}, {3.589736695940971*^9, 3.589736716828698*^9}, {
   3.589811350830736*^9, 3.589811351630862*^9}, {3.5898113833913393`*^9, 
   3.589811399830463*^9}, {3.590406806192675*^9, 3.59040686555721*^9}, {
   3.591864888543589*^9, 3.5918649282681093`*^9}, 3.5918649837078114`*^9, {
   3.5921199930501337`*^9, 3.592120065387992*^9}, {3.592243259961852*^9, 
   3.592243311148838*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.1. GPL", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"xTerior", ":", " ", 
    RowBox[{
    "exterior", " ", "calculus", " ", "in", " ", "Differential", " ", 
     "Geometry"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Copyright", " ", 
     RowBox[{"(", "C", ")"}], " ", "2013", " ", "Alfonso", " ", "Garcia"}], 
    "-", 
    RowBox[{"Parrado", " ", "Gomez"}], "-", 
    RowBox[{"Lobo", " ", "and", " ", "Leo", " ", 
     RowBox[{"C", ".", " ", "Stein"}]}]}], " ", "*)"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "This", " ", "program", " ", "is", " ", "free", " ", "software"}], ";", 
     " ", 
     RowBox[{"you", " ", "can", " ", "redistribute", " ", "it", " ", 
      RowBox[{"and", "/", "or"}], " ", "modify", " ", "it", " ", "under", " ",
       "the", " ", "terms", " ", "of", " ", "the", " ", "GNU", " ", "General",
       " ", "Public", " ", "License", " ", "as", " ", "published", " ", "by", 
      " ", "the", " ", "Free", " ", "Software", " ", "Foundation"}], ";", " ", 
     RowBox[{
     "either", " ", "version", " ", "2", " ", "of", " ", "the", " ", 
      "License"}]}], ",", 
    RowBox[{"or", " ", 
     RowBox[{"(", 
      RowBox[{"at", " ", "your", " ", "option"}], ")"}], " ", "any", " ", 
     "later", " ", 
     RowBox[{
     "version", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "This"}], 
     " ", "program", " ", "is", " ", "distributed", " ", "in", " ", "the", 
     " ", "hope", " ", "that", " ", "it", " ", "will", " ", "be", " ", 
     "useful"}], ",", " ", 
    RowBox[{
     RowBox[{"but", " ", "WITHOUT", " ", "ANY", " ", "WARRANTY"}], ";", " ", 
     RowBox[{
     "without", " ", "even", " ", "the", " ", "implied", " ", "warranty", " ",
       "of", "\[IndentingNewLine]", "MERCHANTABILITY", " ", "or", " ", 
      "FITNESS", " ", "FOR", " ", "A", " ", "PARTICULAR", " ", 
      RowBox[{"PURPOSE", ".", " ", "See"}], " ", "the", " ", "GNU", " ", 
      "General", " ", "Public", " ", "License", " ", "for", " ", "more", " ", 
      
      RowBox[{
      "details", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "You"}], 
      " ", "should", " ", "have", " ", "received", " ", "a", " ", "copy", " ",
       "of", " ", "the", " ", "GNU", " ", "General", " ", "Public", " ", 
      "License", " ", "along", " ", "with", " ", "this", " ", "program"}], 
     ";", " ", 
     RowBox[{"if", " ", "not"}]}], ",", " ", 
    RowBox[{
    "write", " ", "to", " ", "the", " ", "Free", " ", "Software", " ", 
     "Foundation"}], ",", " ", 
    RowBox[{"Inc", "."}], ",", " ", 
    RowBox[{
     RowBox[{"59", " ", "Temple", " ", "Place"}], "-", 
     RowBox[{"Suite", " ", "330"}]}], ",", " ", "Boston", ",", " ", 
    RowBox[{
     RowBox[{"MA", " ", "02111"}], "-", "1307"}], ",", " ", 
    RowBox[{"USA", "."}]}], " ", "\[IndentingNewLine]", "*)"}]}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["1.2. Info package", "Subsubsection"],

Cell["\<\
(* :Title: xTerior *)

(* :Author: Alfonso Garcia-Parrado Gomez-Lobo and Leo C. Stein *)

(* :Summary: exterior calculus in Differential Geometry *)

(* :Brief Discussion:
   - xTerior extends xAct to work with differentiable forms in general \
manifolds.
   - Introduces the exterior algebra, the exterior derivative, the Hodge \
dual, the connection and curvature forms for an arbitrary connection, the \
exterior covariant derivative.
   
*)
  
(* :Context: xAct`xTerior` *)

(* :Package Version: 0.8.5 *)

(* :Copyright: Alfonso Garcia-Parrado Gomez-Lobo and Leo C. Stein (2013) *)

(* :History: See xTerior.History *)

(* :Keywords: *)

(* :Source: xTerior.nb *)

(* :Warning: *)

(* :Mathematica Version: 9.0 and later *)

(* :Limitations:
\t- ?? *)\
\>", "Input",
 PageWidth->PaperWidth,
 CellMargins->{{60, -272}, {Inherited, Inherited}},
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["1.3. BeginPackage", "Subsubsection"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xAct`xTerior`Private`xTeriorSymbols", "=", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Names", "[", "\"\<xAct`xTerior`*\>\"", "]"}], ",", 
         RowBox[{"Names", "[", "\"\<xAct`xTerior`Private`*\>\"", "]"}]}], 
        "]"}], ",", 
       RowBox[{
       "\"\<$Version\>\"", "|", "\"\<xAct`xTerior`$Version\>\"", "|", 
        "\"\<$xTensorVersionExpected\>\"", "|", 
        "\"\<xAct`xTerior`$xTensorVersionExpected\>\""}]}], "]"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Unprotect", "/@", "xAct`xTerior`Private`xTeriorSymbols"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Clear", "/@", "xAct`xTerior`Private`xTeriorSymbols"}], ";"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Unevaluated", "[", "xAct`xCore`Private`$LastPackage", "]"}], "===",
      "xAct`xCore`Private`$LastPackage"}], ",", 
    RowBox[{
    "xAct`xCore`Private`$LastPackage", "=", "\"\<xAct`xTerior`\>\""}]}], 
   "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData["xAct`xCore`Private`$LastPackage"], "Input"],

Cell[BoxData["\<\"xAct`xTerior`\"\>"], "Output",
 CellChangeTimes->CompressedData["
1:eJwVzVtImgEcBXCzeih8qZnU6IIojsWolllUVH40WGOjMlhFJZGzGKxllIOR
E+qhC0UjIWrMEGqbmZMuWEGW2roSyGorWSFBK5D6MIgYCyZuO/+Hw4/zcDhC
laaiMYzD4TxAzr6tZHtWWCbqXbXP4mQZXnuCdgmu6vcbHFDwMv/2VxiIkGyX
uliGa8hYLoM7Mcm15TAtSe6rhKbdBHkN9KgV+3Vwz7/mVUHtsYv/DP6Lk8pI
gcd41U9daG8ch5/5cxtT0DLk/miFr0dFj2fhtZs9J01tqe12WDIW0pHa0HDi
PCyUel8dwsSQXXNEO2WT3Ad/fb+oIi9bi36eQGuzO/MUbsWHPyHFxqsBrptl
Ykezp8mc99ZjkifoMERAEX9hgqzuz7smHbWLzkjYwuPe3IXrVseiFKoCVTuk
0WbrzoJ5usp0GTRtdCjIH3EXuaJVlnluk3SJYUCvO70D35i7/5BNt85HHkH1
C8f9UuiyF6SUQX9Whp60PPwyTkZvhx+Qb/0zv0nnQa6kHB711BeQhlDmUzK5
r8dLlkR/CpKd6kFGAWOlQzGd8N6YuZfUJIX5P0CvMig0w0LupIw8a1EWkzah
8+8m/YmDN1vwP/7MKq0=
  "]]
}, Open  ]],

Cell[TextData[{
 "Explicit (not hidden) import of ",
 StyleBox["xTensor",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 ", ",
 StyleBox["xPerm",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["xCore",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 ": ",
 StyleBox["Alfonso: do we need xCoba ?",
  FontWeight->"Bold"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BeginPackage", "[", 
  RowBox[{"\"\<xAct`xTerior`\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<xAct`xCoba`\>\"", ",", "\"\<xAct`xTensor`\>\"", ",", 
     "\"\<xAct`xPerm`\>\"", ",", "\"\<xAct`xCore`\>\""}], "}"}]}], 
  "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.592120086338678*^9, 3.5921200969198513`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.590406100409088*^9, 3.59047493551198*^9, 3.590484366019272*^9, 
   3.5904862661452007`*^9, 3.5904870176987886`*^9, 3.590487310200943*^9, 
   3.590487712314541*^9, 3.5904879897186823`*^9, 3.590488370001816*^9, 
   3.590488555185161*^9, 3.590488745798998*^9, 3.590489772390584*^9, 
   3.59049007735356*^9, 3.590490636604189*^9, 3.590586508790732*^9, 
   3.590587453395632*^9, 3.5906598883374662`*^9, 3.59066446406539*^9, 
   3.590664621423517*^9, 3.590664731174547*^9, 3.5907297181994667`*^9, 
   3.5907317120007677`*^9, 3.590731986129162*^9, 3.590738146515717*^9, 
   3.590741858186586*^9, 3.590743284318555*^9, 3.5907435942115793`*^9, 
   3.590744193605983*^9, 3.590744473460293*^9, 3.5907539176432343`*^9, 
   3.59075658306961*^9, 3.590756627205327*^9, 3.59081144523601*^9, 
   3.590819717817648*^9, 3.5909049275061607`*^9, 3.590910149934141*^9, 
   3.590910429225058*^9, 3.590910640789668*^9, 3.5909112574257*^9, 
   3.5909124156355247`*^9, 3.590919255666567*^9, 3.591029200945794*^9, 
   3.59107295571959*^9, 3.591177831892791*^9, 3.591541104943244*^9, 
   3.591807801833239*^9, {3.591807851510127*^9, 3.5918078783576937`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xPerm`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.2.1\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2013", ",", "7", ",", "1"}], "}"}]}],
  SequenceForm["Package xAct`xPerm`  version ", "1.2.1", ", ", {2013, 7, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.590406100409088*^9, 3.59047493551198*^9, 3.590484366019272*^9, 
   3.5904862661452007`*^9, 3.5904870176987886`*^9, 3.590487310200943*^9, 
   3.590487712314541*^9, 3.5904879897186823`*^9, 3.590488370001816*^9, 
   3.590488555185161*^9, 3.590488745798998*^9, 3.590489772390584*^9, 
   3.59049007735356*^9, 3.590490636604189*^9, 3.590586508790732*^9, 
   3.590587453395632*^9, 3.5906598883374662`*^9, 3.59066446406539*^9, 
   3.590664621423517*^9, 3.590664731174547*^9, 3.5907297181994667`*^9, 
   3.5907317120007677`*^9, 3.590731986129162*^9, 3.590738146515717*^9, 
   3.590741858186586*^9, 3.590743284318555*^9, 3.5907435942115793`*^9, 
   3.590744193605983*^9, 3.590744473460293*^9, 3.5907539176432343`*^9, 
   3.59075658306961*^9, 3.590756627205327*^9, 3.59081144523601*^9, 
   3.590819717817648*^9, 3.5909049275061607`*^9, 3.590910149934141*^9, 
   3.590910429225058*^9, 3.590910640789668*^9, 3.5909112574257*^9, 
   3.5909124156355247`*^9, 3.590919255666567*^9, 3.591029200945794*^9, 
   3.59107295571959*^9, 3.591177831892791*^9, 3.591541104943244*^9, 
   3.591807801833239*^9, {3.591807851510127*^9, 3.591807878359345*^9}}],

Cell[BoxData["\<\"CopyRight (C) 2003-2013, Jose M. Martin-Garcia, under the \
General Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.590406100409088*^9, 3.59047493551198*^9, 3.590484366019272*^9, 
   3.5904862661452007`*^9, 3.5904870176987886`*^9, 3.590487310200943*^9, 
   3.590487712314541*^9, 3.5904879897186823`*^9, 3.590488370001816*^9, 
   3.590488555185161*^9, 3.590488745798998*^9, 3.590489772390584*^9, 
   3.59049007735356*^9, 3.590490636604189*^9, 3.590586508790732*^9, 
   3.590587453395632*^9, 3.5906598883374662`*^9, 3.59066446406539*^9, 
   3.590664621423517*^9, 3.590664731174547*^9, 3.5907297181994667`*^9, 
   3.5907317120007677`*^9, 3.590731986129162*^9, 3.590738146515717*^9, 
   3.590741858186586*^9, 3.590743284318555*^9, 3.5907435942115793`*^9, 
   3.590744193605983*^9, 3.590744473460293*^9, 3.5907539176432343`*^9, 
   3.59075658306961*^9, 3.590756627205327*^9, 3.59081144523601*^9, 
   3.590819717817648*^9, 3.5909049275061607`*^9, 3.590910149934141*^9, 
   3.590910429225058*^9, 3.590910640789668*^9, 3.5909112574257*^9, 
   3.5909124156355247`*^9, 3.590919255666567*^9, 3.591029200945794*^9, 
   3.59107295571959*^9, 3.591177831892791*^9, 3.591541104943244*^9, 
   3.591807801833239*^9, {3.591807851510127*^9, 3.591807878360456*^9}}],

Cell[BoxData["\<\"Connecting to external linux executable...\"\>"], "Print",
 CellChangeTimes->{
  3.590406100409088*^9, 3.59047493551198*^9, 3.590484366019272*^9, 
   3.5904862661452007`*^9, 3.5904870176987886`*^9, 3.590487310200943*^9, 
   3.590487712314541*^9, 3.5904879897186823`*^9, 3.590488370001816*^9, 
   3.590488555185161*^9, 3.590488745798998*^9, 3.590489772390584*^9, 
   3.59049007735356*^9, 3.590490636604189*^9, 3.590586508790732*^9, 
   3.590587453395632*^9, 3.5906598883374662`*^9, 3.59066446406539*^9, 
   3.590664621423517*^9, 3.590664731174547*^9, 3.5907297181994667`*^9, 
   3.5907317120007677`*^9, 3.590731986129162*^9, 3.590738146515717*^9, 
   3.590741858186586*^9, 3.590743284318555*^9, 3.5907435942115793`*^9, 
   3.590744193605983*^9, 3.590744473460293*^9, 3.5907539176432343`*^9, 
   3.59075658306961*^9, 3.590756627205327*^9, 3.59081144523601*^9, 
   3.590819717817648*^9, 3.5909049275061607`*^9, 3.590910149934141*^9, 
   3.590910429225058*^9, 3.590910640789668*^9, 3.5909112574257*^9, 
   3.5909124156355247`*^9, 3.590919255666567*^9, 3.591029200945794*^9, 
   3.59107295571959*^9, 3.591177831892791*^9, 3.591541104943244*^9, 
   3.591807801833239*^9, {3.591807851510127*^9, 3.591807878396377*^9}}],

Cell[BoxData["\<\"Connection established.\"\>"], "Print",
 CellChangeTimes->{
  3.590406100409088*^9, 3.59047493551198*^9, 3.590484366019272*^9, 
   3.5904862661452007`*^9, 3.5904870176987886`*^9, 3.590487310200943*^9, 
   3.590487712314541*^9, 3.5904879897186823`*^9, 3.590488370001816*^9, 
   3.590488555185161*^9, 3.590488745798998*^9, 3.590489772390584*^9, 
   3.59049007735356*^9, 3.590490636604189*^9, 3.590586508790732*^9, 
   3.590587453395632*^9, 3.5906598883374662`*^9, 3.59066446406539*^9, 
   3.590664621423517*^9, 3.590664731174547*^9, 3.5907297181994667`*^9, 
   3.5907317120007677`*^9, 3.590731986129162*^9, 3.590738146515717*^9, 
   3.590741858186586*^9, 3.590743284318555*^9, 3.5907435942115793`*^9, 
   3.590744193605983*^9, 3.590744473460293*^9, 3.5907539176432343`*^9, 
   3.59075658306961*^9, 3.590756627205327*^9, 3.59081144523601*^9, 
   3.590819717817648*^9, 3.5909049275061607`*^9, 3.590910149934141*^9, 
   3.590910429225058*^9, 3.590910640789668*^9, 3.5909112574257*^9, 
   3.5909124156355247`*^9, 3.590919255666567*^9, 3.591029200945794*^9, 
   3.59107295571959*^9, 3.591177831892791*^9, 3.591541104943244*^9, 
   3.591807801833239*^9, {3.591807851510127*^9, 3.591807878417836*^9}}],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.590406100409088*^9, 3.59047493551198*^9, 3.590484366019272*^9, 
   3.5904862661452007`*^9, 3.5904870176987886`*^9, 3.590487310200943*^9, 
   3.590487712314541*^9, 3.5904879897186823`*^9, 3.590488370001816*^9, 
   3.590488555185161*^9, 3.590488745798998*^9, 3.590489772390584*^9, 
   3.59049007735356*^9, 3.590490636604189*^9, 3.590586508790732*^9, 
   3.590587453395632*^9, 3.5906598883374662`*^9, 3.59066446406539*^9, 
   3.590664621423517*^9, 3.590664731174547*^9, 3.5907297181994667`*^9, 
   3.5907317120007677`*^9, 3.590731986129162*^9, 3.590738146515717*^9, 
   3.590741858186586*^9, 3.590743284318555*^9, 3.5907435942115793`*^9, 
   3.590744193605983*^9, 3.590744473460293*^9, 3.5907539176432343`*^9, 
   3.59075658306961*^9, 3.590756627205327*^9, 3.59081144523601*^9, 
   3.590819717817648*^9, 3.5909049275061607`*^9, 3.590910149934141*^9, 
   3.590910429225058*^9, 3.590910640789668*^9, 3.5909112574257*^9, 
   3.5909124156355247`*^9, 3.590919255666567*^9, 3.591029200945794*^9, 
   3.59107295571959*^9, 3.591177831892791*^9, 3.591541104943244*^9, 
   3.591807801833239*^9, {3.591807851510127*^9, 3.591807878418996*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTensor`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.1.0\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2013", ",", "9", ",", "1"}], "}"}]}],
  SequenceForm["Package xAct`xTensor`  version ", "1.1.0", ", ", {2013, 9, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.590406100409088*^9, 3.59047493551198*^9, 3.590484366019272*^9, 
   3.5904862661452007`*^9, 3.5904870176987886`*^9, 3.590487310200943*^9, 
   3.590487712314541*^9, 3.5904879897186823`*^9, 3.590488370001816*^9, 
   3.590488555185161*^9, 3.590488745798998*^9, 3.590489772390584*^9, 
   3.59049007735356*^9, 3.590490636604189*^9, 3.590586508790732*^9, 
   3.590587453395632*^9, 3.5906598883374662`*^9, 3.59066446406539*^9, 
   3.590664621423517*^9, 3.590664731174547*^9, 3.5907297181994667`*^9, 
   3.5907317120007677`*^9, 3.590731986129162*^9, 3.590738146515717*^9, 
   3.590741858186586*^9, 3.590743284318555*^9, 3.5907435942115793`*^9, 
   3.590744193605983*^9, 3.590744473460293*^9, 3.5907539176432343`*^9, 
   3.59075658306961*^9, 3.590756627205327*^9, 3.59081144523601*^9, 
   3.590819717817648*^9, 3.5909049275061607`*^9, 3.590910149934141*^9, 
   3.590910429225058*^9, 3.590910640789668*^9, 3.5909112574257*^9, 
   3.5909124156355247`*^9, 3.590919255666567*^9, 3.591029200945794*^9, 
   3.59107295571959*^9, 3.591177831892791*^9, 3.591541104943244*^9, 
   3.591807801833239*^9, {3.591807851510127*^9, 3.591807878420085*^9}}],

Cell[BoxData["\<\"CopyRight (C) 2002-2013, Jose M. Martin-Garcia, under the \
General Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.590406100409088*^9, 3.59047493551198*^9, 3.590484366019272*^9, 
   3.5904862661452007`*^9, 3.5904870176987886`*^9, 3.590487310200943*^9, 
   3.590487712314541*^9, 3.5904879897186823`*^9, 3.590488370001816*^9, 
   3.590488555185161*^9, 3.590488745798998*^9, 3.590489772390584*^9, 
   3.59049007735356*^9, 3.590490636604189*^9, 3.590586508790732*^9, 
   3.590587453395632*^9, 3.5906598883374662`*^9, 3.59066446406539*^9, 
   3.590664621423517*^9, 3.590664731174547*^9, 3.5907297181994667`*^9, 
   3.5907317120007677`*^9, 3.590731986129162*^9, 3.590738146515717*^9, 
   3.590741858186586*^9, 3.590743284318555*^9, 3.5907435942115793`*^9, 
   3.590744193605983*^9, 3.590744473460293*^9, 3.5907539176432343`*^9, 
   3.59075658306961*^9, 3.590756627205327*^9, 3.59081144523601*^9, 
   3.590819717817648*^9, 3.5909049275061607`*^9, 3.590910149934141*^9, 
   3.590910429225058*^9, 3.590910640789668*^9, 3.5909112574257*^9, 
   3.5909124156355247`*^9, 3.590919255666567*^9, 3.591029200945794*^9, 
   3.59107295571959*^9, 3.591177831892791*^9, 3.591541104943244*^9, 
   3.591807801833239*^9, {3.591807851510127*^9, 3.591807878421039*^9}}]
}, Open  ]],

Cell[BoxData["\<\"xAct`xTerior`\"\>"], "Output",
 CellChangeTimes->{
  3.588645302382279*^9, 3.589097179323765*^9, 3.589131169733478*^9, 
   3.5891330710924673`*^9, 3.589173458605641*^9, 3.5894369856230516`*^9, 
   3.589438937998209*^9, 3.589440217421101*^9, 3.589453530731049*^9, 
   3.589460481299337*^9, 3.589465755000492*^9, 3.589478062747017*^9, 
   3.589478566390502*^9, 3.58947882603815*^9, 3.589560197534297*^9, 
   3.589606190458251*^9, 3.589623334118594*^9, 3.5896251264402*^9, 
   3.5896366979460163`*^9, 3.589637959787664*^9, 3.589643161366012*^9, 
   3.589643232366049*^9, 3.589644517124847*^9, 3.58971895910842*^9, 
   3.5897209580654287`*^9, 3.589724675633136*^9, 3.5897248637465267`*^9, 
   3.5897362029292917`*^9, 3.589738902444456*^9, 3.589739104552655*^9, 
   3.5898051533094683`*^9, 3.589805426213585*^9, 3.589805805778051*^9, 
   3.589809292248868*^9, 3.5898094300802917`*^9, 3.5898100662607107`*^9, 
   3.589811694110393*^9, 3.5898858804822702`*^9, 3.5899058492342033`*^9, 
   3.58990599528528*^9, 3.5899075018507633`*^9, 3.589908859167321*^9, 
   3.589909132278123*^9, 3.590396368034416*^9, 3.590398985653594*^9, 
   3.590405907890772*^9, 3.590406100679422*^9, 3.5904749361081457`*^9, 
   3.590484366274609*^9, 3.5904862664429073`*^9, 3.590487017952133*^9, 
   3.590487310452243*^9, 3.590487712568459*^9, 3.590487990001422*^9, 
   3.590488370269258*^9, 3.590488555591529*^9, 3.590488746083826*^9, 
   3.5904897726386623`*^9, 3.5904900776035013`*^9, 3.590490636863552*^9, 
   3.590586509217684*^9, 3.590587453653417*^9, 3.590659888898753*^9, 
   3.5906644643391953`*^9, 3.5906646216811934`*^9, 3.590664731450584*^9, 
   3.590729718749446*^9, 3.59073171225613*^9, 3.590731986381505*^9, 
   3.590738147095893*^9, 3.5907418587563972`*^9, 3.590743284578904*^9, 
   3.5907435945666122`*^9, 3.590744194162014*^9, 3.590744473729885*^9, 
   3.5907539180913973`*^9, 3.590756583345257*^9, 3.590756627457034*^9, 
   3.590811445676214*^9, 3.590819718066782*^9, 3.590904927937904*^9, 
   3.590910150189207*^9, 3.59091042978721*^9, 3.590910641358849*^9, 
   3.590911257973275*^9, 3.590912416002137*^9, 3.5909192559637337`*^9, 
   3.591029201421566*^9, 3.5910729561531353`*^9, 3.5911778323344793`*^9, 
   3.591541105306232*^9, 3.5918078022986937`*^9, {3.5918078522144737`*^9, 
   3.5918078790598917`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"Not", "@", 
    RowBox[{"OrderedQ", "@", 
     RowBox[{"Map", "[", 
      RowBox[{"Last", ",", 
       RowBox[{"{", 
        RowBox[{
        "xAct`xTerior`$xTensorVersionExpected", ",", 
         "xAct`xTensor`$Version"}], "}"}]}], "]"}]}]}], ",", 
   RowBox[{"Throw", "@", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"General", "::", "versions"}], ",", "\"\<xTensor\>\"", ",", 
      "xAct`xTensor`$Version", ",", "xAct`xTerior`$xTensorVersionExpected"}], 
     "]"}]}]}], "]"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", "xAct`xCore`Private`bars", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Package xAct`xTerior`  version \>\"", ",", 
    RowBox[{"xAct`xTerior`$Version", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<, \>\"", ",", 
    RowBox[{"xAct`xTerior`$Version", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<CopyRight (C) 2013, Alfonso Garcia-Parrado Gomez-Lobo and Leo C. \
Stein, under the General Public License.\>\"", "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.588645302441256*^9, 3.5890971802855797`*^9, 3.5891311698728533`*^9, 
   3.589133071143716*^9, 3.589173458648286*^9, 3.589436985664484*^9, 
   3.589438938049123*^9, 3.589440217464796*^9, 3.5894535308491087`*^9, 
   3.58946048134796*^9, 3.5894657550388727`*^9, 3.589478062787183*^9, 
   3.5894785664289*^9, 3.589478826076516*^9, 3.589560197573525*^9, 
   3.589606190496649*^9, 3.5896233341506643`*^9, 3.589625126469387*^9, 
   3.589636697983198*^9, 3.589637959834282*^9, 3.589643161415662*^9, 
   3.589643232401576*^9, 3.589644517166691*^9, 3.589718959136848*^9, 
   3.589720958097685*^9, 3.5897246756634703`*^9, 3.5897248637776537`*^9, 
   3.589736203035555*^9, 3.589738902481676*^9, 3.589739104586808*^9, 
   3.589805153589074*^9, 3.589805426374658*^9, 3.5898058058096647`*^9, 
   3.5898092922941236`*^9, 3.589809430133189*^9, 3.589810066289613*^9, 
   3.589811694215066*^9, 3.589885880597795*^9, 3.589905849589076*^9, 
   3.5899059953175097`*^9, 3.5899075018829727`*^9, 3.589908859205986*^9, 
   3.589909132311098*^9, 3.590396368068899*^9, 3.5903989856930513`*^9, 
   3.590405907946241*^9, 3.590406100723666*^9, 3.590474936241243*^9, 
   3.5904843663084307`*^9, 3.59048626647869*^9, 3.590487017982648*^9, 
   3.590487310483204*^9, 3.590487712600123*^9, 3.59048799004712*^9, 
   3.590488370306789*^9, 3.5904885556307507`*^9, 3.590488746123967*^9, 
   3.590489772666869*^9, 3.5904900776334047`*^9, 3.5904906369130163`*^9, 
   3.590586509248209*^9, 3.59058745369136*^9, 3.5906598890592127`*^9, 
   3.5906644643842487`*^9, 3.590664621731131*^9, 3.59066473149422*^9, 
   3.5907297188994017`*^9, 3.59073171228619*^9, 3.590731986414019*^9, 
   3.590738147128551*^9, 3.590741858789617*^9, 3.590743284635069*^9, 
   3.590743594846547*^9, 3.59074419418963*^9, 3.590744473869789*^9, 
   3.5907539181201477`*^9, 3.590756583380443*^9, 3.5907566274978313`*^9, 
   3.590811445717125*^9, 3.5908197181008997`*^9, 3.590904927974133*^9, 
   3.590910150234024*^9, 3.590910429819643*^9, 3.590910641397573*^9, 
   3.590911258015326*^9, 3.590912416415613*^9, 3.590919256031783*^9, 
   3.591029201467918*^9, 3.591072956185184*^9, 3.5911778323720818`*^9, 
   3.591541105330639*^9, 3.591807802327506*^9, {3.591807852254537*^9, 
   3.5918078790867357`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTerior`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.8.5\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2013", ",", "7", ",", "1"}], "}"}]}],
  SequenceForm["Package xAct`xTerior`  version ", "0.8.5", ", ", {2013, 7, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.588645302441256*^9, 3.5890971802855797`*^9, 3.5891311698728533`*^9, 
   3.589133071143716*^9, 3.589173458648286*^9, 3.589436985664484*^9, 
   3.589438938049123*^9, 3.589440217464796*^9, 3.5894535308491087`*^9, 
   3.58946048134796*^9, 3.5894657550388727`*^9, 3.589478062787183*^9, 
   3.5894785664289*^9, 3.589478826076516*^9, 3.589560197573525*^9, 
   3.589606190496649*^9, 3.5896233341506643`*^9, 3.589625126469387*^9, 
   3.589636697983198*^9, 3.589637959834282*^9, 3.589643161415662*^9, 
   3.589643232401576*^9, 3.589644517166691*^9, 3.589718959136848*^9, 
   3.589720958097685*^9, 3.5897246756634703`*^9, 3.5897248637776537`*^9, 
   3.589736203035555*^9, 3.589738902481676*^9, 3.589739104586808*^9, 
   3.589805153589074*^9, 3.589805426374658*^9, 3.5898058058096647`*^9, 
   3.5898092922941236`*^9, 3.589809430133189*^9, 3.589810066289613*^9, 
   3.589811694215066*^9, 3.589885880597795*^9, 3.589905849589076*^9, 
   3.5899059953175097`*^9, 3.5899075018829727`*^9, 3.589908859205986*^9, 
   3.589909132311098*^9, 3.590396368068899*^9, 3.5903989856930513`*^9, 
   3.590405907946241*^9, 3.590406100723666*^9, 3.590474936241243*^9, 
   3.5904843663084307`*^9, 3.59048626647869*^9, 3.590487017982648*^9, 
   3.590487310483204*^9, 3.590487712600123*^9, 3.59048799004712*^9, 
   3.590488370306789*^9, 3.5904885556307507`*^9, 3.590488746123967*^9, 
   3.590489772666869*^9, 3.5904900776334047`*^9, 3.5904906369130163`*^9, 
   3.590586509248209*^9, 3.59058745369136*^9, 3.5906598890592127`*^9, 
   3.5906644643842487`*^9, 3.590664621731131*^9, 3.59066473149422*^9, 
   3.5907297188994017`*^9, 3.59073171228619*^9, 3.590731986414019*^9, 
   3.590738147128551*^9, 3.590741858789617*^9, 3.590743284635069*^9, 
   3.590743594846547*^9, 3.59074419418963*^9, 3.590744473869789*^9, 
   3.5907539181201477`*^9, 3.590756583380443*^9, 3.5907566274978313`*^9, 
   3.590811445717125*^9, 3.5908197181008997`*^9, 3.590904927974133*^9, 
   3.590910150234024*^9, 3.590910429819643*^9, 3.590910641397573*^9, 
   3.590911258015326*^9, 3.590912416415613*^9, 3.590919256031783*^9, 
   3.591029201467918*^9, 3.591072956185184*^9, 3.5911778323720818`*^9, 
   3.591541105330639*^9, 3.591807802327506*^9, {3.591807852254537*^9, 
   3.591807879087963*^9}}],

Cell[BoxData["\<\"CopyRight (C) 2013, Alfonso Garcia-Parrado Gomez-Lobo and \
Leo C. Stein, under the General Public License.\"\>"], "Print",
 CellChangeTimes->{
  3.588645302441256*^9, 3.5890971802855797`*^9, 3.5891311698728533`*^9, 
   3.589133071143716*^9, 3.589173458648286*^9, 3.589436985664484*^9, 
   3.589438938049123*^9, 3.589440217464796*^9, 3.5894535308491087`*^9, 
   3.58946048134796*^9, 3.5894657550388727`*^9, 3.589478062787183*^9, 
   3.5894785664289*^9, 3.589478826076516*^9, 3.589560197573525*^9, 
   3.589606190496649*^9, 3.5896233341506643`*^9, 3.589625126469387*^9, 
   3.589636697983198*^9, 3.589637959834282*^9, 3.589643161415662*^9, 
   3.589643232401576*^9, 3.589644517166691*^9, 3.589718959136848*^9, 
   3.589720958097685*^9, 3.5897246756634703`*^9, 3.5897248637776537`*^9, 
   3.589736203035555*^9, 3.589738902481676*^9, 3.589739104586808*^9, 
   3.589805153589074*^9, 3.589805426374658*^9, 3.5898058058096647`*^9, 
   3.5898092922941236`*^9, 3.589809430133189*^9, 3.589810066289613*^9, 
   3.589811694215066*^9, 3.589885880597795*^9, 3.589905849589076*^9, 
   3.5899059953175097`*^9, 3.5899075018829727`*^9, 3.589908859205986*^9, 
   3.589909132311098*^9, 3.590396368068899*^9, 3.5903989856930513`*^9, 
   3.590405907946241*^9, 3.590406100723666*^9, 3.590474936241243*^9, 
   3.5904843663084307`*^9, 3.59048626647869*^9, 3.590487017982648*^9, 
   3.590487310483204*^9, 3.590487712600123*^9, 3.59048799004712*^9, 
   3.590488370306789*^9, 3.5904885556307507`*^9, 3.590488746123967*^9, 
   3.590489772666869*^9, 3.5904900776334047`*^9, 3.5904906369130163`*^9, 
   3.590586509248209*^9, 3.59058745369136*^9, 3.5906598890592127`*^9, 
   3.5906644643842487`*^9, 3.590664621731131*^9, 3.59066473149422*^9, 
   3.5907297188994017`*^9, 3.59073171228619*^9, 3.590731986414019*^9, 
   3.590738147128551*^9, 3.590741858789617*^9, 3.590743284635069*^9, 
   3.590743594846547*^9, 3.59074419418963*^9, 3.590744473869789*^9, 
   3.5907539181201477`*^9, 3.590756583380443*^9, 3.5907566274978313`*^9, 
   3.590811445717125*^9, 3.5908197181008997`*^9, 3.590904927974133*^9, 
   3.590910150234024*^9, 3.590910429819643*^9, 3.590910641397573*^9, 
   3.590911258015326*^9, 3.590912416415613*^9, 3.590919256031783*^9, 
   3.591029201467918*^9, 3.591072956185184*^9, 3.5911778323720818`*^9, 
   3.591541105330639*^9, 3.591807802327506*^9, {3.591807852254537*^9, 
   3.5918078790891037`*^9}}]
}, Open  ]]
}, Open  ]],

Cell["\<\
We specify the context xAct`xTerior` to avoid overriding the Disclaimer of \
the other packages. However we need to turn off the message General:shdw \
temporarily:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{"Off", "[", 
  RowBox[{"General", "::", "shdw"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAct`xTerior`Disclaimer", "[", "]"}], ":=", 
  RowBox[{
  "Print", "[", 
   "\"\<These are points 11 and 12 of the General Public \
License:\\n\\nBECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO \
WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT \
WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES \
PROVIDE THE PROGRAM `AS IS\.b4 WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED \
OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO \
THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM \
PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR \
CORRECTION.\\n\\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO \
IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY \
AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR \
DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES \
ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT \
LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED \
BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER \
PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE \
POSSIBILITY OF SUCH DAMAGES.\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"On", "[", 
  RowBox[{"General", "::", "shdw"}], "]"}]}], "Input",
 InitializationCell->True],

Cell[TextData[{
 "If ",
 StyleBox["xTerior",
  FontSlant->"Italic"],
 " is not being called from other package then write this GPL short \
disclaimer:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
   "xAct`xCore`Private`$LastPackage", "===", "\"\<xAct`xTerior`\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Unset", "[", "xAct`xCore`Private`$LastPackage", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "xAct`xCore`Private`bars", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
    "Print", "[", 
     "\"\<These packages come with ABSOLUTELY NO WARRANTY; for details type \
Disclaimer[]. This is free software, and you are welcome to redistribute it \
under certain conditions. See the General Public License for details.\>\"", 
     "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "xAct`xCore`Private`bars", "]"}]}]}], 
  "]"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.588645302519147*^9, 3.589097180329443*^9, 3.5891311702923517`*^9, 
   3.589133071240787*^9, 3.589173458716753*^9, 3.589436985718417*^9, 
   3.589438938143887*^9, 3.589440217535843*^9, 3.5894535309231987`*^9, 
   3.589460481460751*^9, 3.5894657551003437`*^9, 3.589478062826416*^9, 
   3.589478566473424*^9, 3.589478826116498*^9, 3.589560197614098*^9, 
   3.589606190617735*^9, 3.589623334208662*^9, 3.589625126519812*^9, 
   3.5896366981075687`*^9, 3.5896379598905277`*^9, 3.5896431614663467`*^9, 
   3.5896432324466*^9, 3.58964451723573*^9, 3.5897189591892776`*^9, 
   3.589720958147131*^9, 3.589724675721594*^9, 3.5897248638258533`*^9, 
   3.589736203073901*^9, 3.589738902557919*^9, 3.589739104624476*^9, 
   3.589805153638055*^9, 3.589805426423423*^9, 3.589805805868211*^9, 
   3.589809292339802*^9, 3.5898094302232113`*^9, 3.589810066343508*^9, 
   3.5898116942663727`*^9, 3.589885880810051*^9, 3.589905849687557*^9, 
   3.589905995352187*^9, 3.5899075019189587`*^9, 3.589908859290468*^9, 
   3.589909132355055*^9, 3.5903963681107197`*^9, 3.5903989857384567`*^9, 
   3.590405907986184*^9, 3.590406100792533*^9, 3.59047493629596*^9, 
   3.590484366346566*^9, 3.590486266515676*^9, 3.5904870180276546`*^9, 
   3.5904873105197067`*^9, 3.590487712636201*^9, 3.590487990136311*^9, 
   3.5904883703771763`*^9, 3.590488555722185*^9, 3.590488746219405*^9, 
   3.5904897727084312`*^9, 3.59049007767247*^9, 3.5904906370202*^9, 
   3.590586509288265*^9, 3.590587453757792*^9, 3.590659889121046*^9, 
   3.590664464462212*^9, 3.5906646217949867`*^9, 3.59066473156513*^9, 
   3.590729718996702*^9, 3.5907317123529177`*^9, 3.590731986466868*^9, 
   3.5907381472095623`*^9, 3.590741858875342*^9, 3.590743284711665*^9, 
   3.590743594968689*^9, 3.590744194229463*^9, 3.5907444739774942`*^9, 
   3.5907539181677523`*^9, 3.5907565834424763`*^9, 3.590756627544615*^9, 
   3.590811445791481*^9, 3.590819718146735*^9, 3.5909049280261374`*^9, 
   3.590910150308937*^9, 3.5909104298636513`*^9, 3.590910641490247*^9, 
   3.590911258057485*^9, 3.590912416634687*^9, 3.590919256086028*^9, 
   3.591029201585627*^9, 3.591072956231592*^9, 3.591177832444358*^9, 
   3.591541105369686*^9, 3.591807802368986*^9, {3.591807852296536*^9, 
   3.591807879118641*^9}}],

Cell[BoxData["\<\"These packages come with ABSOLUTELY NO WARRANTY; for \
details type Disclaimer[]. This is free software, and you are welcome to \
redistribute it under certain conditions. See the General Public License for \
details.\"\>"], "Print",
 CellChangeTimes->{
  3.588645302519147*^9, 3.589097180329443*^9, 3.5891311702923517`*^9, 
   3.589133071240787*^9, 3.589173458716753*^9, 3.589436985718417*^9, 
   3.589438938143887*^9, 3.589440217535843*^9, 3.5894535309231987`*^9, 
   3.589460481460751*^9, 3.5894657551003437`*^9, 3.589478062826416*^9, 
   3.589478566473424*^9, 3.589478826116498*^9, 3.589560197614098*^9, 
   3.589606190617735*^9, 3.589623334208662*^9, 3.589625126519812*^9, 
   3.5896366981075687`*^9, 3.5896379598905277`*^9, 3.5896431614663467`*^9, 
   3.5896432324466*^9, 3.58964451723573*^9, 3.5897189591892776`*^9, 
   3.589720958147131*^9, 3.589724675721594*^9, 3.5897248638258533`*^9, 
   3.589736203073901*^9, 3.589738902557919*^9, 3.589739104624476*^9, 
   3.589805153638055*^9, 3.589805426423423*^9, 3.589805805868211*^9, 
   3.589809292339802*^9, 3.5898094302232113`*^9, 3.589810066343508*^9, 
   3.5898116942663727`*^9, 3.589885880810051*^9, 3.589905849687557*^9, 
   3.589905995352187*^9, 3.5899075019189587`*^9, 3.589908859290468*^9, 
   3.589909132355055*^9, 3.5903963681107197`*^9, 3.5903989857384567`*^9, 
   3.590405907986184*^9, 3.590406100792533*^9, 3.59047493629596*^9, 
   3.590484366346566*^9, 3.590486266515676*^9, 3.5904870180276546`*^9, 
   3.5904873105197067`*^9, 3.590487712636201*^9, 3.590487990136311*^9, 
   3.5904883703771763`*^9, 3.590488555722185*^9, 3.590488746219405*^9, 
   3.5904897727084312`*^9, 3.59049007767247*^9, 3.5904906370202*^9, 
   3.590586509288265*^9, 3.590587453757792*^9, 3.590659889121046*^9, 
   3.590664464462212*^9, 3.5906646217949867`*^9, 3.59066473156513*^9, 
   3.590729718996702*^9, 3.5907317123529177`*^9, 3.590731986466868*^9, 
   3.5907381472095623`*^9, 3.590741858875342*^9, 3.590743284711665*^9, 
   3.590743594968689*^9, 3.590744194229463*^9, 3.5907444739774942`*^9, 
   3.5907539181677523`*^9, 3.5907565834424763`*^9, 3.590756627544615*^9, 
   3.590811445791481*^9, 3.590819718146735*^9, 3.5909049280261374`*^9, 
   3.590910150308937*^9, 3.5909104298636513`*^9, 3.590910641490247*^9, 
   3.590911258057485*^9, 3.590912416634687*^9, 3.590919256086028*^9, 
   3.591029201585627*^9, 3.591072956231592*^9, 3.591177832444358*^9, 
   3.591541105369686*^9, 3.591807802368986*^9, {3.591807852296536*^9, 
   3.591807879119673*^9}}],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{
  3.588645302519147*^9, 3.589097180329443*^9, 3.5891311702923517`*^9, 
   3.589133071240787*^9, 3.589173458716753*^9, 3.589436985718417*^9, 
   3.589438938143887*^9, 3.589440217535843*^9, 3.5894535309231987`*^9, 
   3.589460481460751*^9, 3.5894657551003437`*^9, 3.589478062826416*^9, 
   3.589478566473424*^9, 3.589478826116498*^9, 3.589560197614098*^9, 
   3.589606190617735*^9, 3.589623334208662*^9, 3.589625126519812*^9, 
   3.5896366981075687`*^9, 3.5896379598905277`*^9, 3.5896431614663467`*^9, 
   3.5896432324466*^9, 3.58964451723573*^9, 3.5897189591892776`*^9, 
   3.589720958147131*^9, 3.589724675721594*^9, 3.5897248638258533`*^9, 
   3.589736203073901*^9, 3.589738902557919*^9, 3.589739104624476*^9, 
   3.589805153638055*^9, 3.589805426423423*^9, 3.589805805868211*^9, 
   3.589809292339802*^9, 3.5898094302232113`*^9, 3.589810066343508*^9, 
   3.5898116942663727`*^9, 3.589885880810051*^9, 3.589905849687557*^9, 
   3.589905995352187*^9, 3.5899075019189587`*^9, 3.589908859290468*^9, 
   3.589909132355055*^9, 3.5903963681107197`*^9, 3.5903989857384567`*^9, 
   3.590405907986184*^9, 3.590406100792533*^9, 3.59047493629596*^9, 
   3.590484366346566*^9, 3.590486266515676*^9, 3.5904870180276546`*^9, 
   3.5904873105197067`*^9, 3.590487712636201*^9, 3.590487990136311*^9, 
   3.5904883703771763`*^9, 3.590488555722185*^9, 3.590488746219405*^9, 
   3.5904897727084312`*^9, 3.59049007767247*^9, 3.5904906370202*^9, 
   3.590586509288265*^9, 3.590587453757792*^9, 3.590659889121046*^9, 
   3.590664464462212*^9, 3.5906646217949867`*^9, 3.59066473156513*^9, 
   3.590729718996702*^9, 3.5907317123529177`*^9, 3.590731986466868*^9, 
   3.5907381472095623`*^9, 3.590741858875342*^9, 3.590743284711665*^9, 
   3.590743594968689*^9, 3.590744194229463*^9, 3.5907444739774942`*^9, 
   3.5907539181677523`*^9, 3.5907565834424763`*^9, 3.590756627544615*^9, 
   3.590811445791481*^9, 3.590819718146735*^9, 3.5909049280261374`*^9, 
   3.590910150308937*^9, 3.5909104298636513`*^9, 3.590910641490247*^9, 
   3.590911258057485*^9, 3.590912416634687*^9, 3.590919256086028*^9, 
   3.591029201585627*^9, 3.591072956231592*^9, 3.591177832444358*^9, 
   3.591541105369686*^9, 3.591807802368986*^9, {3.591807852296536*^9, 
   3.591807879120514*^9}}]
}, Open  ]]
}, Open  ]],

Cell["\<\
Note that symbols in the Global` context cannot be accessed right now.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"xAct`xTerior`\"\>", ",", "\<\"xAct`xTensor`\"\>", 
   ",", "\<\"xAct`xPerm`\"\>", ",", "\<\"xAct`xCore`\"\>", 
   ",", "\<\"System`\"\>"}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBwAWJmtUtmZ/a8cnTK7L29Yu8rxznLvEp2Amk9n5eJu4D0
m5sRUueAdJe1xXG/fa8cD7113e0PpBdFG0cHAOmf8gm3w4D06ikGDlFAWj8g
5XIMkOaquH01CUjXeV4QSQbSSWddTEH0tx1bPnQBaZfLV1IXAmkrgxNHVgJp
tvkXl6wC0jalLt4bgPTt3H8vQHTUC4PizUDaaDZfDYhe3bpSZguQdlj4vPQG
kP588mj+TSD9o6rC4TaQttf+HQ6iAzySHz4A0js4Lhs9ApnzUcQHRN95adrD
tB/ojkd+60B0s/jeuyDabXL3RBYgLZdyYhGInibg8wlEJ7Gf2ssKpNXypL9r
AunTQubbjYH0IqOckyD6ZPq+VhMgXaOVrW8KpK/49wSC6Lg2FivlA8Dw2mrR
qAKkV3U3PlIH0jFHZv0C0V/8uKd7AukNgmcM/YD0iZpAeX8g3XnYsRZEz5O6
tBBE95qIXgHRkquPfAPR3dt81QKAtPHmclsQHdfgEQqiA0qmXwXRCenbfoPo
sv0LHQNB9gmsEmwA0hn3d7aD6GOq6s8Wg+TF+JWWAWkH9d2mILqiptgZRE/y
efDvKJCuW8D94xiQBgDHuyik
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$Context"], "Input"],

Cell[BoxData["\<\"xAct`xTerior`\"\>"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBwAeKTNy+bndnzyjFEu//2ir2vHI23+pTsBNILlr1J3AWk
WZbHSZ0D0l7xlsf99r1ybNjmvdsfSMstN40OANIFmQm3w4D0Kh4Thygg/Sw6
9XIMkM7YcPtqEpB+nnRRJBlI3+Z0NQXRW99v+dAFpL+9u5q6EEj/+3ziyEog
bRd+ackqIJ1U6eq9AUiXRjG8BNHBSobFm4G0SiN/DYjep7ZaZguQ1kp4UXoD
SC+rP5Z/E0g77qh0uA2kGTv/hINotmMpDx8A6cjXV4weAWmBl6I+INrJ3LyH
aT/Q/TEB60C0xuW9d0G00IWeiSxAukTq5CIQ3XbT5xOILko+vZcVSM/eLfNd
E0hPW2Gx3RikTyH3JIj+ELe/1QRIt//M0TcF0nq+vYEgWr+a1Ur5wCvHF6cs
G1WAtEde8yN1IP3o+JxfILrNnne6J5B2Zjxr6AekeROD5P1B6tc61YLoWx8u
LQTRUhxiV0D0ytbj30C03Ap/tQAg7XC+whZEL8/wCgXR25JmXAXRt2O3/wbR
/8sXOwYCad9vqwQbgPT9e7vbQTRbhvqzxSD7ZQWUlgHpxL97TEG0x/lSZxDd
9OTBv6NAujKd58cxIA0AlG4q0A==
  "]]
}, Open  ]],

Cell["Established connection to external executable?", "Text"],

Cell[CellGroupData[{

Cell[BoxData["$xpermQ"], "Input"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->CompressedData["
1:eJwVzltIkwEcBfAZU3oRNaaEiaXFZAjL1mY6tPw2FaU5vykpLANdbg/GVNRA
ZJEfEqJOUV+iF1HT4ZQkupj37cFLrjXIZVvMYIoIGz6kiJpT6fwfDr+nczhJ
uroSfRiPx8tFLBOedOd8kPEe9vrGFoLM1xNV0wwU7+9VzUL/y8p4F9Ry8lX1
YpCJcKnmiuFe1b3HLJxV6HxlMFyRnaOFp0aDuwKOfd7c0MFE47rgKYwV5ctI
j2DqbycsEXr0QzCtzLFkpd1h98g4VHXkP3xPvSf8AMnnJI0fobk52kReTn2X
8AnWbAaee+Fu2mrdb3hW35Ljg/Loi3Jyzqrf8tOPlV+SbZh+FKci81ozzJds
6FVrJkn2mu0P+YDr7uNDRb9jmBzJUB+QQqlzIRzez008FsHMqcwvd+GHc+Ma
KRXbX0lhP1t/Wwbny3s0pONZhPymPchY/HLuFpT9aNtOgVbnwClpSo16XQiz
Qt/vqGGoqPR6MVQ2KV+Q/7zuIdK/E/eTdHHfjkizuFTIQoO9JZvsqSl6RF4V
vNkgWcl0iEwuGGU0sDMwEdMKrxhs7WTSDdHuW1h9HJNsgdr1RRk5uGRSkrWT
WxfLsKEr8mQF/gcXyCk2
  "]]
}, Open  ]],

Cell[TextData[{
 "Private functions of ",
 StyleBox["xTensor",
  FontSlant->"Italic"],
 " used here :\n      ??"
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["1.4. Non-standard setup", "Subsubsection"],

Cell["Screen all dollar indices:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$PrePrint", "=", "ScreenDollarIndices"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"$DefInfoQ", "=", "False"}], ";"}]], "Input",
 InitializationCell->True],

Cell["\<\
Timings will be shown if they are above 1 Second (Only for this notebook; \
this is not included in the package):\
\>", "Text"],

Cell[BoxData[
 RowBox[{"<<", "xAct/ShowTime1.m"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData["$ShowTimeThreshold"], "Input"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->CompressedData["
1:eJwVzn0o3AEcx/GzzobV1l3UJW03RFu0PJyko/vZRWL8bO5iU8txYas7Yq2E
oTQu2227sIjykNyUmYd52hnzFDbq+JVzJ/xktavtZIUo7fP949OrPn+9b2n0
D7RuAoFAiS2bbVE/vjqZtj6TvdfiZBJy2dJxyL85zJmAX6R5vqvwyBS7mDrl
ZJ54qSbT4IvauMcsfCrV2tXQXReveATjhAXr2TDFvMNp4BXPDe9ceGc5UUZm
v7YcGqC636btgMeD/JwZZnZy3R/hVlRS8gAsHLv2myw/l5cMQY/r4nJytv2T
3zDU/fn7fBO6jEt6G7xRVqGwQ7HQLZNcPCjY26WORFs4D0cMkhRyvVHecOkb
/meqfjJD+n2bfO8wvhPC+9KfnWRWAHtEjg2tWdyhNT745DbsMStGI2D7YNES
WdQ0UxsJW/8V35XB6MK36aQi52pMwLST8a6TVwdCh97AB0Ov/YEz0tQgak6C
eflrYamw3ppxMw1aeWUFKZFxHaSjSrJBlk1zx2TgtjqIhRc7NbHkqJJVkTpX
C0eGuMbPyVVDL5MOjQ8/i6rgZdHKK3JGE/qrC/aF+fj3wPCVeRn5ofLlPdJP
cnAxD4enxKcL8D9VmCsg
  "]]
}, Open  ]],

Cell[TextData[{
 "We also read the package (this is not automatic in ",
 StyleBox["xCore",
  FontSlant->"Italic"],
 " anymore since its version 0.6.2). This is not included in the package."
}], "Text"],

Cell[BoxData[
 RowBox[{"<<", "xAct/ExpressionManipulation.m"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["1.5. Usage messages", "Subsubsection"],

Cell[TextData[StyleBox["Alfonso: we need to agree on the names and syntax of \
the commands introduced here",
 FontWeight->"Bold"]], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Definition", " ", "and", " ", "undefinition", " ", "of", " ", "a", " ", 
    "differential", " ", "form", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
      "just", " ", "a", " ", "wrapper", " ", "for", " ", "DefTensor", " ", 
       "with", " ", "the", " ", "option", " ", "GradeOfTensor"}], "\[Rule]", 
      RowBox[{"{", "Wedge", "}"}]}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DefDifferentialForm", "::", "usage"}], "=", 
     "\"\<DefDifferentialForm[form[inds], mani, Deg->deg] defines a tensor \
valued differential form of degree deg on the manifold mani\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UndefDifferentialForm", "::", "usage"}], "=", 
     "\"\<UndefDifferentialForm[form] undefines the differential form \
form\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Grade", " ", "of", " ", "a", " ", "differential", " ", "form"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Deg", "::", "usage"}], "=", 
     "\"\<Deg[form] returns the grade of a differential form\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Exterior", " ", "derivative"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtDiff", "::", "usage"}], "=", 
     "\"\<ExtDiff[form] computes the exterior derivative of the differential \
form form\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Exterior", " ", "covariant", " ", "derivative"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExtCovDiff", "::", "usage"}], "=", 
     "\"\<ExtCovDiff[form,covd] represents the exterior covariant derivative \
of the differential form form with respect to the covariant derivative covd\>\
\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Computation", " ", "of", " ", "the", " ", "exterior", " ", "covariant", 
     " ", "derivative"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ChangeExtCovDiff", "::", "usage"}], "=", 
     "\"\<ChangeExtCovDiff[expr,cd1,cd2] expresses the exterior covariant \
derivative taken with respect to the connection defined by the covariant \
derivative cd1 in terms of the exterior covariant derivative taken with \
respect to the connection defined by the covariant derivative cd2\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Hodge", " ", "dual"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hodge", "::", "usage"}], "=", 
     "\"\<Hodge[metric][expr] is the Hodge dual of expr defined with respect \
to metric\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExpandHodgeDual", "::", "usage"}], "=", 
     "\"\<ExpandHodgeDual[expr,Coframe[mani],g] expands out all the Hodge \
duals defined with respect to the metric g of the exterior powers of \
Coframe[mani]. If the manifold tag mani is dropped, then all the instances of \
Coframe are expanded.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Co", "-", "differential"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CoDiff", "::", "usage"}], "=", 
     "\"\<CoDiff[metric][form] is the co-differential of form computed with \
respect to metric\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Expansion", " ", "of", " ", "the", " ", "co"}], "-", 
     "differential"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CoDiffToExtDiff", "::", "usage"}], "=", 
     "\"\<CoDiffToExtDiff[expr] replaces all the instances of the \
co-differential in expr by their expansion in terms of the exterior \
derivative.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Interior", " ", "contraction"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Int", "::", "usage"}], "=", 
     "\"\<Int[v][form] is the interior contraction of form with the vector \
(rank 1-tensor) v\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Lie", " ", "derivative", " ", "on", " ", "forms"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Lie", "::", "usage"}], "=", 
     "\"\<Lie[v][form] is the Lie derivative of form with respect to the \
vector (rank 1-tensor) v.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Cartan", " ", "formula", " ", "for", " ", "Lie", " ", "derivatives"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"LieToExtDiff", "::", "usage"}], "=", 
     "\"\<LieToExtDiff[expr] replaces the Lie derivative of all the \
differential forms in expr by their expansion obtained by means of the Cartan \
formula\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Put", " ", "derivations", " ", "into", " ", "canonical", " ", "order"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SortDerivations", "::", "usage"}], "=", 
     "\"\<SortDerivations[expr] brings expr into a new expression where all \
the derivations (exterior derivative, Lie derivative and interior \
contraction) are written in a canonical order. The default left-to-right \
order is defined by the variable $DerivationSortOrder\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"$DerivationSortOrder", "::", "usage"}], "=", 
     "\"\<$DerivationSortOrder is a global variable which encodes the default \
ordering of the three derivatives Int, LieD and ExtDiff. The default is \
{LieD,Int,ExtDiff}\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Variational", " ", "derivative", " ", "on", " ", "forms"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FormVarD", "::", "usage"}], "=", "\"\<..\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Canonical", " ", "forms", " ", "on", " ", "the", " ", "frame", " ", 
     "bundle"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Coframe", "::", "usage"}], "=", 
     "\"\<Coframe[mani] is the set of canonical 1-forms defined in the frame \
bundle arising from the manifold mani\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dx", "::", "usage"}], "=", 
     "\"\<dx[mani] represents a holonomic co-frame in the manifold \
mani.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"The", " ", "connection", " ", "1"}], "-", "form"}], " ", "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ConnectionForm", "::", "usage"}], "=", 
     "\"\<ConnectionForm[cd1,cd2,vbundle] represents the difference between \
the connection 1-forms associated to the covariant derivatives cd1 and cd2, \
both defined in the bundle vbundle. If vbundle is the tangent bundle of a \
differentiable manifold then ConnectionForm is automatically replaced by \
ChristoffelForm. Also ConnectionForm[cd1,vbundle] is automatically replaced \
by ConnectionForm[cd1,PD,vbundle]\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"The", " ", "curvature", " ", "2"}], "-", "form"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CurvatureForm", "::", "usage"}], "=", 
     "\"\<CurvatureForm[cd,vbundle] represents the curvature 2-form \
associated to the covariant derivative cd. If vbundle is the tangent bundle \
of a differentiable manifold then CurvatureForm is replaced by \
RiemannForm\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Connection", " ", "2"}], "-", 
     RowBox[{
     "form", " ", "for", " ", "a", " ", "connection", " ", "in", " ", "a", 
      " ", "frame", " ", "bundle"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ChristoffelForm", "::", "usage"}], "=", 
     "\"\<ChristoffelForm[cd1,cd2] is the difference between the connection \
1-forms associated to cd1 and cd2 which are both covariant derivatives in the \
tangent bundle of a manifold\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Curvature", " ", "2"}], "-", 
     RowBox[{
     "form", " ", "for", " ", "a", " ", "connection", " ", "in", " ", "a", 
      " ", "frame", " ", "bundle"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RiemannForm", "::", "usage"}], "=", 
     "\"\<RiemannForm[cd] is the curvature 2-form associated to the covariant \
derivative cd which is a covariant derivative in the frame bundle of a \
manifold\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Transformation", " ", "of", " ", "the", " ", "connection", " ", "for", 
     " ", "to", " ", "the", " ", "connection", " ", "tensor"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ConnectionFormToTensor", "::", "usage"}], "=", 
     "\"\<ConnectionFormToTensor[expr,covd,frame] transforms all instances of \
the connection form into the (A)Christoffel tensor which relates the \
covariant derivative defining the connection form and covd. The variable \
frame can take the value of either Coframe or dx. If the (A)Christoffel \
tensor does not exist it is created automatically.\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CurvatureFormToTensor", "::", "usage"}], "=", 
     "\"\<CurvatureFormToTensor[expr,frame] transforms all the instances of \
the curvature form into the related Riemann or FRiemann tensor, inserting the \
corresponding frame (either Coframe or dx).\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ChangeCurvatureForm", "::", "usage"}], "=", 
     "\"\<ChangeCurvatureForm[curvature,cd1,cd2] writes the curvature 2-form \
curvature[cd1,vbundle] in terms of the curvature 2-form \
curvature[cd2,vbundle]\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"The", " ", "torsion", " ", "2"}], "-", "form"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TorsionForm", "::", "usage"}], "=", 
     "\"\<TorsionForm[cd] represents the torsion 2-form arising from the \
covariant derivative cd (cd must be defined on the tangent bundle of a \
manifold)\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Cartan", " ", "structure", " ", "equations"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExpandExtDiff", "::", "usage"}], "=", 
     "\"\<ExpandExtDiff[expr,covd] expands all the instances of the ExtDiff \
using the Cartan structure equations for the connection arising from covd. In \
this way it is possible to expand the exterior derivative of a co-frame, a \
torsion 2-form and the curvature 2-form. If covd is the Levi-Civita \
connection of a metric, then the exterior derivatives of that metric and its \
volume element are expanded too. ExpandExtDiff[expr,PD,mani] expands all \
instances of the exterior derivative in terms of partial derivatives defined \
in the manifold mani.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Alfonso", ":", " ", 
     RowBox[{
     "I", " ", "would", " ", "call", " ", "this", " ", "ZeroDegreeFormQ"}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ZeroFormQ", "::", "usage"}], "=", 
     "\"\<ZeroFormQ[expr] returns True if the degree of expr is zero\>\""}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5886472894803123`*^9, 3.588647312812182*^9}, {
   3.588647437657065*^9, 3.5886474470767183`*^9}, {3.589097915712742*^9, 
   3.589097942655676*^9}, {3.589098045385181*^9, 3.589098069000883*^9}, {
   3.5890983352694483`*^9, 3.589098336875264*^9}, 3.589098392040764*^9, {
   3.589098429598866*^9, 3.589098445902789*^9}, {3.589098555654537*^9, 
   3.5890985583440113`*^9}, {3.589172640809093*^9, 3.589172709173194*^9}, {
   3.589193432339171*^9, 3.589193543393825*^9}, {3.589477744264064*^9, 
   3.58947780372314*^9}, {3.5894779733918467`*^9, 3.589477986234166*^9}, {
   3.5896250005211687`*^9, 3.589625000996476*^9}, {3.589625239479754*^9, 
   3.5896252399679956`*^9}, {3.5896278599036827`*^9, 3.589627900396237*^9}, {
   3.589628016565713*^9, 3.589628116365797*^9}, {3.5897219180118103`*^9, 
   3.589722047539974*^9}, {3.5897221523391027`*^9, 3.589722279175913*^9}, {
   3.5897226113799267`*^9, 3.589722667428423*^9}, {3.590756071159204*^9, 
   3.590756093977977*^9}, {3.5909102398253727`*^9, 3.590910317758397*^9}, {
   3.590910395460455*^9, 3.590910401696148*^9}, {3.592160643604466*^9, 
   3.592160954977991*^9}, {3.592936213700653*^9, 3.5929362491045218`*^9}, {
   3.59293628494031*^9, 3.592936290740075*^9}, {3.5929364266596527`*^9, 
   3.592936451510304*^9}, {3.5929365518392973`*^9, 3.592936552046164*^9}, {
   3.592936600886606*^9, 3.5929366395077753`*^9}, {3.5929378203301897`*^9, 
   3.592937840210558*^9}, {3.593091553361124*^9, 3.593091659064828*^9}, {
   3.593091874025323*^9, 3.593091971143461*^9}, {3.593092086015252*^9, 
   3.593092134056528*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["1.6. Begin private", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData["\<\"xAct`xTerior`Private`\"\>"], "Output",
 CellChangeTimes->{
  3.588645308380678*^9, 3.589097185797358*^9, 3.589131170612308*^9, 
   3.5891330717994833`*^9, 3.589173459220294*^9, 3.589436986050622*^9, 
   3.58943893874511*^9, 3.589440218055625*^9, 3.5894535312907143`*^9, 
   3.58946048221345*^9, 3.5894657553295603`*^9, 3.589478063158764*^9, 
   3.589478566704701*^9, 3.589478826325116*^9, 3.589560198048113*^9, 
   3.5896061908936853`*^9, 3.589623342758409*^9, 3.589625142126871*^9, 
   3.589636698375252*^9, 3.589637960520727*^9, 3.589643163155397*^9, 
   3.589643232633847*^9, 3.5896445177767963`*^9, 3.589718959694208*^9, 
   3.589720958365906*^9, 3.589724676011722*^9, 3.589724864146689*^9, 
   3.589736203366967*^9, 3.589738902883232*^9, 3.589739104842845*^9, 
   3.589805154008946*^9, 3.5898054267894297`*^9, 3.589805806169413*^9, 
   3.589809292555229*^9, 3.589809430520492*^9, 3.589810066597662*^9, 
   3.589811694736856*^9, 3.5898858812964773`*^9, 3.589905850118832*^9, 
   3.5899059956905127`*^9, 3.589907502123732*^9, 3.5899088598291693`*^9, 
   3.589909132595299*^9, 3.590396368435795*^9, 3.590398985980842*^9, 
   3.59040590997478*^9, 3.590406101614532*^9, 3.590474936727685*^9, 
   3.590484366556396*^9, 3.590486266727147*^9, 3.5904870182341633`*^9, 
   3.5904873108188677`*^9, 3.590487712840921*^9, 3.590487990866653*^9, 
   3.590488370924684*^9, 3.590488556186755*^9, 3.590488746686192*^9, 
   3.590489772916648*^9, 3.59049007788626*^9, 3.590490637541338*^9, 
   3.590586509633466*^9, 3.590587454478362*^9, 3.590659889511983*^9, 
   3.590664464960128*^9, 3.590664622274094*^9, 3.590664732070792*^9, 
   3.590729719298519*^9, 3.59073171269123*^9, 3.5907319865373917`*^9, 
   3.590738147293231*^9, 3.590741859032411*^9, 3.590743285439548*^9, 
   3.590743595045804*^9, 3.590744194277821*^9, 3.5907444740797167`*^9, 
   3.590753918220326*^9, 3.5907565834923973`*^9, 3.590756627600553*^9, 
   3.590811446045349*^9, 3.590819718200955*^9, 3.5909049280845737`*^9, 
   3.590910150500607*^9, 3.590910429916854*^9, 3.590910641715849*^9, 
   3.590911258110353*^9, 3.590912416976119*^9, 3.590919256258646*^9, 
   3.591029201810804*^9, 3.591072956292671*^9, 3.5911778326243258`*^9, 
   3.591541105410205*^9, 3.591807802435396*^9, {3.5918078524413433`*^9, 
   3.591807879240275*^9}}]
}, Open  ]],

Cell["There are ?? reserved words in version 0.8.5 :", "Text",
 CellChangeTimes->{{3.588645324477947*^9, 3.588645325621612*^9}, {
  3.58864537996303*^9, 3.588645383098967*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<xAct`xTerior`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.588645199055669*^9, 3.588645203022752*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ChangeCurvatureForm\"\>", ",", "\<\"ChangeExtCovDiff\"\>", 
   ",", "\<\"ChristoffelForm\"\>", ",", "\<\"CoDiff\"\>", 
   ",", "\<\"CoDiffToExtDiff\"\>", ",", "\<\"Coframe\"\>", 
   ",", "\<\"ConnectionForm\"\>", ",", "\<\"CurvatureForm\"\>", 
   ",", "\<\"DefDifferentialForm\"\>", ",", "\<\"Deg\"\>", 
   ",", "\<\"Disclaimer\"\>", ",", "\<\"ExpandExtDiff\"\>", 
   ",", "\<\"ExpandHodgeDual\"\>", ",", "\<\"ExtCovDiff\"\>", 
   ",", "\<\"ExtDiff\"\>", ",", "\<\"FormVarD\"\>", ",", "\<\"Hodge\"\>", 
   ",", "\<\"Int\"\>", ",", "\<\"LieToExtDiff\"\>", 
   ",", "\<\"RiemannForm\"\>", ",", "\<\"SortDerivations\"\>", 
   ",", "\<\"TorsionForm\"\>", ",", "\<\"UndefDifferentialForm\"\>", 
   ",", "\<\"ZeroFormQ\"\>", ",", "\<\"$DerivationSortOrder\"\>", 
   ",", "\<\"$Version\"\>", ",", "\<\"$xTensorVersionExpected\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVzVtIUwEcx/GTGIEkObAHx3KUYihGbLaSdLijixTnFRdrG+IFhZgopFMh
XU4mSvhiBFakosbQIRLVHF7mBZlaiDPLTrkcNmroeVAxaPOC9fs//PjA7+V7
uaymsOIMwzBK7JKZu7U8xbPJtuofQ06e1ceo68ah9fxx6QQ8KX4gXIHB3fTF
3GmeHUrRTuZBm1ipy4cJ4wbPPRjrz1JoYaTX8FkPKxv962VQz3OR5ZCfyZaR
RX3z+08g82uzoh++6PG4hqHOvWi1QWVJTvYb6A0Kdsjtk8rad9CaeLGJNDkm
RO/hanfA+A1O7i3XfIdhj80KD3Ul5zSk9LTq5xaMeOSV+iCXJlKROQK2M2SG
Z1VpulHymnthk1QHnnaFQscqN0Bq94sOSLd8w3kWRi0lBOJhffsdRxJk7jZ8
IDOFrrYbcKrHdF1Gf+qzAjJRfOF2zCzPjvgU5lgYfTjnuwpff7Ifka/kwu4s
2PRvTZIL40wacR4M3clsJu+znn6yqk/0hfzt8P4lX6pK4/LhH2OHnGy1aNTk
Q0PvOrlkcR6TJca3bAF8Xm0XtMBd+1o7GR4v9Q/Cm9viK1b41fdRRh6kWzJI
roE/dcGxEGFwAf4HYGUvIw==
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Length"}]], "Input"],

Cell[BoxData["27"], "Output",
 CellChangeTimes->CompressedData["
1:eJwdzltIUwEcx/EZU4JISVZkTbwdPEsib2eRSunJIczrDDuMky9TJMPbg/Uy
vM5CnL5UykRENFEyVMILy7ZZD1u1OX3IhNVMbJTRoUANUiaJv78PXz6v37iK
hltVITKZTIPsk1PXvHaJv2G3rD93SPxJQbi/AFW6A8Nr+KT/3oUVGMnmvi9e
lHjRJNpKoNeguaOD3E6NX4C/4/JzRFh/sXa1HJYtbK1VQA3jU1RCJqRQTSq6
XdtmuMhsVI3Anp/rrgl40+gefwFrB4oKXsKw1shfZNRudeMsTKw/20R6Qm3K
Oahy7j3wwaLh5YbP8H+KKccPaypP68nsjLpvm3AlNZAWgPJ2ZSHJZvM9J95I
fIelfJrUxix/JdnRp4/lsPGv7xnZ7xV2Se673xEKxwou712C5/vyrOlQ9Bnd
JKd3PeLguT8tyWoYbuwtPVaMyEx4K/FBlm9noOKUM8BCJssaJDmZ2qKFr7JW
U4vhjk0fUwI9Vm0z2WTyj5BDm8pPZPj+xj9SMBsSddA83HWd/OHU3ybvTgyt
kdwHxwGpss/wpbBucv5MG0wPfuwkr1SnbY3CL0mx8eNw8HBJTV5te5hLbs9J
hy76lUfvv4NHqeAl9w==
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"xAct`xTerior`\"\>", ",", "\<\"xAct`xTensor`\"\>", 
   ",", "\<\"xAct`xPerm`\"\>", ",", "\<\"xAct`xCore`\"\>", 
   ",", "\<\"System`\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.58909719275426*^9, 3.589131170707575*^9, 3.5891330719015703`*^9, 
   3.5891734593460073`*^9, 3.589436986130547*^9, 3.589438938864934*^9, 
   3.589440218177497*^9, 3.589453531411599*^9, 3.589460482370928*^9, 
   3.589465755409442*^9, 3.589478063240671*^9, 3.589478566788629*^9, 
   3.589478826406806*^9, 3.589560198209484*^9, 3.589606190974452*^9, 
   3.589623342929681*^9, 3.589625142341639*^9, 3.5896366984561863`*^9, 
   3.5896379606226673`*^9, 3.589643163337873*^9, 3.58964323268836*^9, 
   3.5896445178987427`*^9, 3.5897189598458147`*^9, 3.589720958464242*^9, 
   3.5897246761134253`*^9, 3.589724864537932*^9, 3.5897362034419403`*^9, 
   3.589738903126306*^9, 3.5897391049190702`*^9, 3.5898051540801077`*^9, 
   3.5898054269492807`*^9, 3.589805806468506*^9, 3.5898092926603947`*^9, 
   3.5898094309130297`*^9, 3.589810066963739*^9, 3.5898116949100103`*^9, 
   3.589885881390401*^9, 3.58990585026475*^9, 3.589905995865556*^9, 
   3.589907502199669*^9, 3.589908860075481*^9, 3.5899091326668367`*^9, 
   3.590396368507416*^9, 3.590398986069315*^9, 3.5904059102008657`*^9, 
   3.59040610173561*^9, 3.590474938523478*^9, 3.590484366629488*^9, 
   3.5904862668007193`*^9, 3.5904870183111687`*^9, 3.590487310884454*^9, 
   3.590487712927443*^9, 3.5904879910055733`*^9, 3.59048837114427*^9, 
   3.590488556309401*^9, 3.590488746813118*^9, 3.590489772980743*^9, 
   3.5904900779546547`*^9, 3.5904906376405983`*^9, 3.590586509701756*^9, 
   3.59058745464627*^9, 3.5906598896120462`*^9, 3.590664465059553*^9, 
   3.590664622384416*^9, 3.590664732197147*^9, 3.5907297193682756`*^9, 
   3.5907317129479218`*^9, 3.590731986679139*^9, 3.5907381474380083`*^9, 
   3.590741859072721*^9, 3.5907432854749813`*^9, 3.590743595113378*^9, 
   3.590744194302953*^9, 3.59074447415434*^9, 3.590753918230258*^9, 
   3.5907565835134993`*^9, 3.590756627625888*^9, 3.590811446090358*^9, 
   3.590819718228236*^9, 3.590904928112578*^9, 3.590910150546685*^9, 
   3.590910429944436*^9, 3.590910641724861*^9, 3.590911258138987*^9, 
   3.590912417107106*^9, 3.590919256285903*^9, 3.591029201821208*^9, 
   3.591072956317712*^9, 3.5911778326333103`*^9, 3.591541105431129*^9, 
   3.591807802459918*^9, {3.59180785247029*^9, 3.591807879264886*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$Context"], "Input"],

Cell[BoxData["\<\"xAct`xTerior`Private`\"\>"], "Output",
 CellChangeTimes->CompressedData["
1:eJwVz09IkwEcxvFZWh28SDJFZeY7sTqYlL3MhsbWCtFkcwOnTEk3s8MwZ/4B
sRQLqpcU/HNwJ8tpqHWwSJm12Ixky/wzRbesxnK+YNhLSaikqYjP7/DwOT58
k0wWXUWYSCRSYU9fscEhp6CMnSmseweZuQOjA2qO3Y7zwjPya5/ULkHZOnjj
vQY+28wuzod8oSWgh0JQrTBA++WqxRJoXlrzm2BWwffocvibUbPkm6HJv0+g
oixUYYOPmGX3C/hxZHrgJax2a66/hpw95hdZM1hZOwLXn4vvkWK7K2EU6vX7
9V9hsnHe8g321XCKAGSWThaRnMyyEoItq6sXeKirl+SRJ45ebTsyLiiHQ2XD
ZG3XfJC8xXV3hsPM9uU+0rxVukGec/1wRsCIidTtszCyN28sHQb+3/1M8j2e
hxdhiuNBGgsXmq1aMuNSlFz6Ab0y1f1keGdzmj8NG0edu6Q8VmfNgd7j/vNq
aOsyJGqg4M1tIt9KgzbS0yzxkW1i/h9pXLmZkg/jHa1Z5KSvuIDMzun1k1Pl
43vkKZNdqaXf3LGoFqht+PKYrLayP/uhyyllBqBiZ5YlIw2cirwS9+fADUUd
iTseeAicoCkB
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["%"], "Input",
 CellChangeTimes->{3.5891326601027327`*^9}],

Cell[BoxData["\<\"xAct`xTerior`Private`\"\>"], "Output",
 CellChangeTimes->CompressedData["
1:eJwVxWlIkwEcB+BNtFAUDyaiFPNK6ZNpDiEQfRNJ2XB7bZplTJwofvL1SFBb
kOSKhgOHghVEaDK8GIKCziMPMlHKcyPndE471Bc1WaCyaPr7f3h4otRcbqlQ
IBDcBU/A9YTRCZ6JDb0opoP9uYhF7HFnzeV84plDp2pMjqPKpYUKvPmn2p6P
3WHy9Ed4NZtbe4yzNg6sauystItKcLeZldAPuhZOdLi/21nagYdzt2d7sCvt
m7EX23wV0gF85Ao/oC19FTWDeJ8J09Bt9TPXhnCn8H/tOq4MWeFsWP/0dbod
D5yICujyOm7HiYOm95J28YcXYhmt0Wc2e03yDNuqNtFK1coWrWt8b/DGrcU7
nfRXVu2i/S4cEz44UnHr7CZ+55AN36ZXNfP0lao5bTIWjTclSLA55S1Le0lD
7sRM8QyvvdcYi/2ubu/GY9nmjJv+3qBsz8bLf62JObilrlAsx0aD9Bn9y9/R
QT+Riy30j88/T+kWYVmcAgtM+lTa5FOUR98/67LSnoqpf3QgN8KwWFUzEvwc
9wfaXtHHD1N+f8RNhhvRRpxkXZLQ2je6DPql5cgzi5UZ8edf8CV29Sci
  "]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Basic structures", "Subsection",
 CellChangeTimes->{{3.5890989045773783`*^9, 3.589098916977103*^9}, {
  3.589099319590476*^9, 3.589099334774352*^9}, {3.5892034190391827`*^9, 
  3.589203424686392*^9}, {3.589454342408371*^9, 3.589454348447538*^9}},
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell["2.1 Definition of the wedge product", "Subsubsection",
 CellChangeTimes->{{3.589099368646703*^9, 3.589099369270463*^9}, {
  3.5892034270468082`*^9, 3.589203433418014*^9}}],

Cell["\<\
The wedge product is an associative, anticommutative (actually \
supercommutative) graded product with identity 1. The scalars are those \
objects of grade 0, including the identity 1, so that the scalars are \
actually in this case true elements of the algebra. The product by scalar and \
the product of scalars are both Times, so we do not need to specify them.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefProduct", "[", 
   RowBox[{"Wedge", ",", "\[IndentingNewLine]", 
    RowBox[{"AssociativeProductQ", "\[Rule]", "True"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"CommutativityOfProduct", "\[Rule]", "\"\<SuperCommutative\>\""}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"GradedProductQ", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"IdentityElementOfProduct", "\[Rule]", "1"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ScalarsOfProduct", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"SameQ", "[", 
        RowBox[{
         RowBox[{"Grade", "[", 
          RowBox[{"#", ",", "Wedge"}], "]"}], ",", "0"}], "]"}], "&"}], 
      ")"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589099388158029*^9, 3.589099454653388*^9}, {
  3.5891335346969748`*^9, 3.58913360342419*^9}}],

Cell[TextData[{
 "When working with the exterior algebra the grade is typically called ",
 StyleBox["degree",
  FontSlant->"Italic"],
 ":"
}], "Text",
 CellChangeTimes->{{3.5891319728445*^9, 3.589131973284607*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Deg", "[", "expr_", "]"}], ":=", 
   RowBox[{"Grade", "[", 
    RowBox[{"expr", ",", "Wedge"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589104999802883*^9, 3.589105011052911*^9}, {
  3.589133913761486*^9, 3.589133915630344*^9}}],

Cell[TextData[StyleBox["Alfonso: maybe this should be called ZeroDegreeForm ?",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.589193078935915*^9, 3.589193086455559*^9}, {
  3.5891931699429283`*^9, 3.589193172966546*^9}, {3.5891932926538067`*^9, 
  3.589193337301952*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ZeroFormQ", "[", "expr_", "]"}], ":=", 
  RowBox[{"SameQ", "[", 
   RowBox[{
    RowBox[{"Grade", "[", 
     RowBox[{"expr", ",", "Wedge"}], "]"}], ",", "0"}], "]"}]}]], "Input"],

Cell["Scalars have zero degree:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Deg", "[", "2", "]"}]], "Input"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->CompressedData["
1:eJwVxUtI2gEcB3CL6pZEh9ZD2WySPQ61leJoFJoQYytNKmwJC4c1ejikMBZ/
q3XoRZR23KkVLCrjXxRlhblDWkSMZW38c2GPUaAEFbFVW2Df3+HDR2R4rzVG
8Hi8ImhrGpxyuEKKuFaGpblt59YyLr/rEHzD2vVPG6WrIcXzhgqXGhs9a9Ua
7LwcOKjEvbN65Wtck/nhhx7/iev2G7BIFJ/wFjNvimU0Jwhc9uOWQkvtZ7zf
ceWdwDPT1vFJPCJgXs1gw/VIkFa6h1rm8A5rY2ijySScx6fVklYOezKPzHvY
IdUU/cKDVWc6unIofHSIE/cOco9x28f0Etp24rZFukOKJ0wkS58kdwVoS1b6
cBROelgzRvu4mCtakGxejcbyGPNNBp7v0TtzsdCu36TFK7ruPKyxh7OlWJX4
QEvnudT5j7+GFPWSqC4xNuQ0/5bgAVvKf1rmLVl4gb97G5+W4nP+u0dqfPvX
Z6V1S7Wj9LCY26VNrPWa9tv/pWmwRygpoNPa/RX01pzsJx0dMN/ROfKXyjJ8
FqyL78SL0p0+2sLPDo5hOXuR+gU3xNbJ6FHHMxV9sTgR9uBU1dqNF98DvyMl
0Q==
  "]]
}, Open  ]],

Cell["\<\
A product of scalars is automatically converted into a scalar:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "\[Wedge]", "2", "\[Wedge]", "3"}]], "Input"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBwAGJuk0aZc3tfOc6LmXPCb98rx4SdYXv9gbRgz7HoACC9
f2ff/TAgXSEW7xQFpCftqboaA6SXtrTfSgLS3/YJiyUD6WlsnmYg2mfL/Y9d
QHpHRXnaQiBtVPj12EogLcbWsHwVkLbcVuuzAUh7Cy1+CaLvzZ5WshlI88hP
qgHRHAcKZLcAaRM9jfIbQLok5WHhTSAdtjzQ+TaQ3uz/PgJEz5FifPQASDtI
PDB+BKTDHbR8QbTCk4MTmPa/cmTwYlkPoi8dbLkHovkma05iAdK3GhIXg+iU
t+yfQfSu5KJ9rEC6iqfohyaQNp0eu8MYSN/7H3cKRC9zjmozAdJWYowGpkD6
vppEEIhOOxVgrXzglSPXAdYmFSD9R7P0sTqQ7jst8xtEC8sEbPME0iG8eUZ+
QHpicqaCP5DeGnilFkQvVMhYBKIlVty8AqLX5NZ/B9FqVn/UAoC0GI+mHYiW
tL4TCqJfZFhcA9EHsor/gOg4b1+nQCDd7J8p1ACk+fyudILo4ycMXi4G0pcE
PyktA9ljk2EGop21rF1AdObcVf+PAun51kd/HAPSAFDfDgc=
  "]]
}, Open  ]],

Cell["\<\
The wedge product is eliminated when found with only one argument:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Wedge", "[", "a", "]"}], "//", "FullForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox["a",
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->CompressedData["
1:eJwdyn0o3AEcx/Fz4ZC/ZJKQp2jH5LnZ0M4tT3HHjeUpcbLClTaXxyOHXUjX
jaZkYs48F4t06jyUxyR/yGlc3d1Okd9m2ajTCJ+vPz69/vi8vcUVohIrFov1
Cgs2tbjvLjK8zp3+LcESw9t8lrMohJK1rbx06CD+ZHwLM0eK4nOhkS/T5cM5
pu1IDA0xT1yKYU1hShS5cmv62wF3e2vffYVebpaNcaiJk49O0H/SmDoDvbu/
nZGCoC/SWcgv7pbNPvaVHnPUhXKrf8DhAvP7Q5jS/4avh/VVF9mkVs42m+Cv
xJ/hZuraA9PIobpVFXuZ4TlLbafJP/8/GkjNP26XNbyyiNVk66T9JVmvkC7Z
QM7vD9dP4d5YgSYcdrkWbpOS4TxFBOyTs0Mi4dGCm4hs1mW89F1heEprTrMf
5A5WHwfA8wXPG/JztGg+GZ4mVIQJoPl7mZcQSgZ0DaRWUTpEXjjq98kao9xC
dk7e+adDgWdgHOmnNGSRfaoXB2SLWnpLyhKE8Rmwh1Pu1ASfJx20k9qdsDM1
tNNf+oxAlUtZFKmMjn1NbqdN3a/DQ7vN6w34AOSGGy8=
  "]]
}, Open  ]],

Cell["Note that parentheses are needed sometimes. Compare", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Hold", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a", "\[Wedge]", "3"}], ")"}], "b"}], "]"}], ",", 
   RowBox[{"Hold", "[", 
    RowBox[{"a", "\[Wedge]", 
     RowBox[{"(", 
      RowBox[{"3", "b"}], ")"}]}], "]"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Hold", "[", 
    RowBox[{
     RowBox[{"a", "\[Wedge]", "3"}], " ", "b"}], "]"}], ",", 
   RowBox[{"Hold", "[", 
    RowBox[{"a", "\[Wedge]", 
     RowBox[{"(", 
      RowBox[{"3", " ", "b"}], ")"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBwAOL3/G0y5/a+cvz7ct4Jv32vHL+fjNrrD6Rf9J+KDgDS
q1ZOvh8GpHu5Up2igPSd2tqrMUDa6lPnrSQgzRYpJpYMpPXavM1AdLz4o49d
QFrgWmXaQiBtmvfj2Eog7fGncfkqIL1Cp8FnA5DuSl/+EkSLH19QshlIJ6VP
qQHRp9OKZbcA6ZxE7fIbQPrQm8eFN4G0y+sQ59tAumrZxwgQXbac+dEDIH2g
5rHxIyD9a4aOL4j+wnF0AtP+V46LbdjXg+izN9rugWi3TdqTWIC0Rk/KYhBt
r839GUTXXSjdxwqkpdNKfmgC6RN34ncYA2kx1cRTILpvdUybCZC+MonZwBRI
b82RCQLRDSzB1soHgParcTSpAOkNfZWP1YG0GJv8bxBdMTdomyeQ/mJQYOQH
pH0uZiv4A2mRw9dqQbTjzqxFIPoT750rILpjW/N3EL3mFIN6AJBOddO1A9Fz
tj4IBdHrMm2ugeh5m0v/gGg+40CnQCB97keOUAOQZlh+rRNEc2mbvlwMpE0v
fVVaBqSfhWWZgehbgfYuIJpjz9r/R4F0TfeJH8eANADHlBjK
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "FullForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"Hold", "[", 
      RowBox[{"Times", "[", 
       RowBox[{
        RowBox[{"Wedge", "[", 
         RowBox[{"a", ",", "3"}], "]"}], ",", "b"}], "]"}], "]"}], ",", 
     RowBox[{"Hold", "[", 
      RowBox[{"Wedge", "[", 
       RowBox[{"a", ",", 
        RowBox[{"Times", "[", 
         RowBox[{"3", ",", "b"}], "]"}]}], "]"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBwAGKla+0y5/a+ctTgXnDCb98rxwszY/b6A2m13jPRAUB6
Hue0+2FA+l1LmlMUkFZpr7saA6Rr/nXdSgLSOnniYslA+soqHzMQLW31+GMX
kM55U5W2EEjb7/x5bCWQ/ubYtHwVyNy8Rp8NQHpHxsqXIFopf3XJZiC9pnpq
DYje86JEdguQvjdFu/wGkNaa97TwJpC+NjfU+TaQdsn7FAGif5xnefQASHd4
PzV+BKSjLun6gmjm7GMTmPa/csxj5VwPor+Ud9wD0Zs5dCexAOl9pmmLQfSr
pTyfQTTHrLJ9rED6g0rpD00gncaSuMMYSP8xSzoFopv2xLaZAOmAeSwGpiD6
uFwQiN7IGWKtfOCVo587Z5MKkE7cUv1YHUh3MCn+BtF35oZs8wTSFeqFRn5A
2uhMjoI/kE7beb0WRJcdzF4EoheI3L0Cotl/tX4H0YdeM6kHAOlLhfp2IJpn
96NQEM31yu4aiK45WfYHRG9VDXYKBNI9KvlCDSBz2G50gui5qeYvFwPpfdY/
lJYBaZvmHDMQ/WueowuIjgpa//8okI6XPPXjGJAGAAcqFlE=
  "]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["2.1 Definition and undefinition of differential forms", "Subsubsection",
 
 CellChangeTimes->{{3.589098948033102*^9, 3.589098953507546*^9}, {
  3.589203449701297*^9, 3.589203458436758*^9}, {3.58920362656215*^9, 
  3.5892036316501703`*^9}, {3.589478836292495*^9, 3.5894788376931763`*^9}}],

Cell["\<\
Definition and undefinition of differential forms. This is simply DefTensor \
with the appropriate options\
\>", "Text",
 CellChangeTimes->{{3.589204533889152*^9, 3.589204542179943*^9}, {
  3.589430274441111*^9, 3.5894302946742764`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "DefDifferentialForm"}]], "Input",
 CellChangeTimes->{{3.589098998663472*^9, 3.589099007804367*^9}}],

Cell[BoxData[
 StyleBox["\<\"DefDifferentialForm[form[inds], mani, Deg->deg] defines a \
tensor valued differential form of degree deg on the manifold mani\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.590731718558737*^9},
 CellTags->"Info3590738918-4748043"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DefDifferentialForm", "[", 
    RowBox[{"form_", ",", "mani_", ",", 
     RowBox[{"Deg", "\[Rule]", "deg_"}], ",", 
     RowBox[{"options___", "?", "OptionQ"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"DefTensor", "[", 
    RowBox[{"form", ",", "mani", ",", 
     RowBox[{"GradeOfTensor", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Wedge", "\[Rule]", "deg"}], "}"}]}], ",", "options"}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589099258293347*^9, 3.5890992659851503`*^9}, {
   3.5891315717809963`*^9, 3.5891316114063673`*^9}, {3.589132300866478*^9, 
   3.589132354064775*^9}, {3.5891735055697603`*^9, 3.589173526546214*^9}, {
   3.589173618667411*^9, 3.589173650219454*^9}, {3.589173700036257*^9, 
   3.589173713125928*^9}, {3.589173783446959*^9, 3.5891737914599047`*^9}, 
   3.5891811212953997`*^9, {3.589182374938897*^9, 3.589182377337985*^9}, {
   3.5891937854982243`*^9, 3.58919379567213*^9}, 3.589203362511383*^9, {
   3.5892038393925*^9, 3.589203844034437*^9}, {3.589203984811324*^9, 
   3.589203995089698*^9}, {3.58920403804397*^9, 3.589204053802775*^9}, {
   3.589204178851028*^9, 3.5892041898317623`*^9}, {3.5892047083912086`*^9, 
   3.5892047419008093`*^9}, {3.589207508831583*^9, 3.589207543970571*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DefDifferentialForm", "[", 
    RowBox[{"form_", ",", "mani_", ",", "sym_", ",", 
     RowBox[{"Deg", "\[Rule]", "deg_"}], ",", 
     RowBox[{"options___", "?", "OptionQ"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"DefTensor", "[", 
    RowBox[{"form", ",", "mani", ",", "sym", ",", 
     RowBox[{"GradeOfTensor", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Wedge", "\[Rule]", "deg"}], "}"}]}], ",", "options"}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589099258293347*^9, 3.5890992659851503`*^9}, {
   3.5891315717809963`*^9, 3.5891316114063673`*^9}, {3.589132300866478*^9, 
   3.589132354064775*^9}, {3.5891735055697603`*^9, 3.589173526546214*^9}, {
   3.589173618667411*^9, 3.589173650219454*^9}, {3.589173700036257*^9, 
   3.589173713125928*^9}, {3.589173783446959*^9, 3.5891737914599047`*^9}, 
   3.5891811212953997`*^9, {3.589182374938897*^9, 3.589182377337985*^9}, {
   3.5891937854982243`*^9, 3.58919379567213*^9}, 3.589203362511383*^9, {
   3.5892038393925*^9, 3.589203844034437*^9}, {3.589203984811324*^9, 
   3.589203995089698*^9}, {3.58920403804397*^9, 3.589204053802775*^9}, {
   3.589204178851028*^9, 3.5892041898317623`*^9}, {3.589204571978149*^9, 
   3.589204590390603*^9}, {3.5892047548882513`*^9, 3.589204777041875*^9}, 
   3.589207552518898*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"UndefDifferentialForm", ":=", "UndefTensor"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5891942156536627`*^9, 3.5891942384757442`*^9}, {
  3.589194321199317*^9, 3.58919433055477*^9}, {3.589203276284397*^9, 
  3.58920328177807*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Protect", "[", 
   RowBox[{"DefDifferentialForm", ",", "UndefDifferentialForm"}], "]"}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5892032893739758`*^9, 3.589203309019417*^9}, {
  3.5892036715154037`*^9, 3.589203687692007*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["2.3 Graded derivations", "Subsubsection",
 CellChangeTimes->{{3.589430363831032*^9, 3.589430371724904*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "@", "DefInertHead"}]], "Input",
 CellChangeTimes->{{3.589644212212549*^9, 3.589644217904936*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"LinearQ", "\[Rule]", "False"}], ",", 
   RowBox[{"ContractThrough", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Master", "\[Rule]", "Null"}], ",", 
   RowBox[{"PrintAs", "\[Rule]", "Identity"}], ",", 
   RowBox[{"ProtectNewSymbol", "\[RuleDelayed]", "$ProtectNewSymbols"}], ",", 
   
   RowBox[{"DefInfo", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"inert head\"\>", ",", "\<\"\"\>"}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQB+I/HQnfN+975bgmdarcFiD9+olp+Q0g/ULgQ+FNIG0W
meB8G0in6P+JANFPGoQfPQDS/HmfjB8B6VmOFr4geor+hQlM+185lr0VXA+i
wz5OvAeiWT6bTmIB0g9sCxaD6BNRYp9B9Db3pn2sQLokpu6HJpDeyJ61wxhI
ex3NPQWiNTgz20yAdN5dfgNTIL3qgk4QiG7Ym2StfOCVo9x5kSYVIM10Y+Jj
dSDNLm78G0SzfUzd5gmkUzxqjPyA9IMv5Qr+QLqm4FEtiI7RLV8Eoh0UXlwB
0QzVE7+DaLXr/OoBQPrbb3s7EM12630oiP400+saiE650fgHRCdMinUKBNLT
4uuEGoB0ROSzThAt1uz2cjGQ/jKTVXkZkE6sqzQD0ccWe7uA6Kqmff+PAukT
m6//OAakAfJQzM4=
  "]]
}, Open  ]],

Cell["\<\
This function will be used to declare the three derivations we need, namely \
diff, Int[v] and lie[v]. 
Alfonso: Question: should this function be public ? Do we need \
\[OpenCurlyDoubleQuote]UndefGradedDerivation ? I guess the answer is no.\
\>", "Text",
 CellChangeTimes->{{3.5894331144102783`*^9, 3.589433128941683*^9}, {
  3.5894332640756474`*^9, 3.589433269375305*^9}, {3.589437249843162*^9, 
  3.589437274348301*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "DefGradedDerivation", "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"PrintAs", "\[Rule]", "Identity"}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GradeOfDerivation", "[", 
    RowBox[{
     RowBox[{"head_", "[", 
      RowBox[{"v_", ",", "rest___"}], "]"}], ",", "prod_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"GradeOfDerivation", "[", 
     RowBox[{"head", ",", "prod"}], "]"}], "+", 
    RowBox[{"Grade", "[", 
     RowBox[{"v", ",", "prod"}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DefGradedDerivation", "[", 
    RowBox[{"der_", ",", 
     RowBox[{"prod_", "?", "ProductQ"}], ",", 
     RowBox[{"dergrade_:", "0"}], ",", 
     RowBox[{"options", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"head", "=", 
       RowBox[{"SubHead", "[", "der", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "pa", "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "pa", "}"}], "=", 
         RowBox[{"OptionValue", "[", 
          RowBox[{"{", "PrintAs", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "DefInertHead", " ", "will", " ", "take", " ", "care", " ", "of", 
           " ", "scalar"}], "-", 
          RowBox[{"homogeneity", " ", "and", " ", "linearity"}]}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"DefInertHead", "[", 
         RowBox[{"der", ",", "\[IndentingNewLine]", 
          RowBox[{"LinearQ", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
          
          RowBox[{"ContractThrough", "\[Rule]", 
           RowBox[{"{", "delta", "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"PrintAs", "\[Rule]", "pa"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Other", " ", "properties", " ", "of", " ", "a", " ", "derivation"}],
          " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"MakeDerivation", "[", 
         RowBox[{"head", ",", "der", ",", 
          RowBox[{"NoPattern", "[", "der", "]"}], ",", "prod", ",", 
          "dergrade"}], "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Nonatomic", " ", "derivation"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"der", "=!=", "head"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "additivity", " ", "in", " ", "the", " ", "vector", " ", "slot", 
            " ", 
            RowBox[{"(", 
             RowBox[{"but", " ", "not", " ", 
              RowBox[{"homogeneity", "!"}]}], ")"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"head", "[", "0", "]"}], "[", "__", "]"}], ":=", "0"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"head", "[", "v_Plus", "]"}], "[", "args__", "]"}], ":=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"head", "[", "#", "]"}], "[", "args", "]"}], "&"}], "/@",
              "v"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "Subscript", " ", "vector", " ", "argument", " ", "for", " ", 
             "formatting"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"pa", "===", "Identity"}], ",", 
             RowBox[{"pa", "=", 
              RowBox[{"PrintAs", "[", "head", "]"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"head", "/:", 
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"head", "[", "v_", "]"}], "[", "form_", "]"}], ",", 
              "StandardForm"}], "]"}], ":=", 
            RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"head", "[", "v", "]"}], "[", "form", "]"}], ",", 
              RowBox[{"RowBox", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"SubscriptBox", "[", 
                  RowBox[{"pa", ",", 
                   RowBox[{"MakeBoxes", "[", 
                    RowBox[{
                    RowBox[{"Short", "@", "v"}], ",", "StandardForm"}], 
                    "]"}]}], "]"}], ",", "\"\<[\>\"", ",", 
                 RowBox[{"MakeBoxes", "[", 
                  RowBox[{"form", ",", "StandardForm"}], "]"}], ",", 
                 "\"\<]\>\""}], "}"}], "]"}]}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.58943565171058*^9, 3.589435684147704*^9}, {
   3.589644243329378*^9, 3.589644259329287*^9}, {3.589644305965269*^9, 
   3.5896443096059437`*^9}, {3.589644750023106*^9, 3.589644757024488*^9}, 
   3.589720826925188*^9}],

Cell["\<\
This part is separated in order to avoid renaming confusion between derL and \
derR:\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MakeDerivation", "[", 
    RowBox[{
    "head_", ",", "derL_", ",", "derR_", ",", "prod_", ",", "dergrade_"}], 
    "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"grade", "=", 
       RowBox[{"GradeOfDerivation", "[", 
        RowBox[{"derR", ",", "prod"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Addition", " ", "of", " ", "grades", " ", "in", " ", "algebra"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"head", "/:", 
       RowBox[{"GradeOfDerivation", "[", 
        RowBox[{"head", ",", "prod"}], "]"}], ":=", "dergrade"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"head", "/:", 
       RowBox[{"Grade", "[", 
        RowBox[{
         RowBox[{"derL", "[", 
          RowBox[{"expr_", ",", "___"}], "]"}], ",", "prod"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"Grade", "[", 
         RowBox[{"expr", ",", "prod"}], "]"}], "+", "grade"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"The", " ", 
        RowBox[{"(", "graded", ")"}], " ", "Leibniz", " ", "rule"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"derL", "[", 
        RowBox[{"expr_prod", ",", "rest___"}], "]"}], ":=", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sumgrades", "=", 
           RowBox[{"FoldList", "[", 
            RowBox[{"Plus", ",", "0", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Grade", "[", 
                RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
              RowBox[{"List", "@@", "expr"}]}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Sum", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"grade", " ", "*", " ", 
               RowBox[{"sumgrades", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], " ", ")"}]}], 
            "\[IndentingNewLine]", 
            RowBox[{"MapAt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"derR", "[", 
                RowBox[{"#", ",", "rest"}], "]"}], "&"}], ",", "expr", ",", 
              "i"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "expr", "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"QUESTION", ":", " ", 
        RowBox[{
        "Agreement", " ", "with", " ", "a", " ", "regular", " ", "derivative",
          " ", "when", " ", "acting", " ", "on", " ", "scalar", " ", 
         "functions", "??"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"derL", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"func_", "?", "ScalarFunctionQ"}], "[", "args__", "]"}], 
         ",", "rest___"}], "]"}], ":=", 
       RowBox[{"xAct`xTensor`Private`multiD", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"derR", "[", 
           RowBox[{"#", ",", "rest"}], "]"}], "&"}], ",", 
         RowBox[{"func", "[", "args", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "Dependencies", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"AtomQ", "[", "derR", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"head", "/:", 
         RowBox[{"DependenciesOfInertHead", "[", "derL", "]"}], ":=", 
         RowBox[{"DependenciesOf", "[", 
          RowBox[{"First", "[", "derR", "]"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell["\<\
Jose: Leo, I don\[CloseCurlyQuote]t understand that QUESTION there.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.4 Exterior differentiation", "Subsubsection",
 CellChangeTimes->{{3.589436915937592*^9, 3.589436916909436*^9}}],

Cell["\<\
The second key ingredient for exterior algebra is the differential operator. \
This a concept defined per manifold, or equivalently per tangent-bundle, \
though in this notebook we create only one differential operator.\
\>", "Text"],

Cell["\<\
[Jose: The user can define separated structures with different names, but \
perhaps some predefined objects should be defined in DefTensor/DefVBundle, \
perhaps with a dedicated command/option DefFormStructure.]\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ExtDiff"}]], "Input",
 CellChangeTimes->{{3.589437009176536*^9, 3.5894370125815287`*^9}}],

Cell[BoxData[
 StyleBox["\<\"ExtDiff[form] computes the exterior derivative of the \
differential form form\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.59073171902468*^9},
 CellTags->"Info3590738918-4748043"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefGradedDerivation", "[", 
   RowBox[{"ExtDiff", ",", "Wedge", ",", 
    RowBox[{"+", "1"}], ",", 
    RowBox[{"PrintAs", "\[Rule]", "\"\<d\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589436938906526*^9, 3.589436945741436*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtDiff", "[", 
    RowBox[{
     RowBox[{"x_", "?", "ConstantQ"}], ",", "rest___"}], "]"}], ":=", "0"}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589437638551504*^9, 3.589437640932865*^9}}],

Cell["We still need definition when acting on Times", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "produces", " ", "expanded", " ", "expressions", " ", "and", 
    " ", "is", " ", "much", " ", "faster", " ", "when", " ", "there", " ", 
    "are", " ", "many", " ", "scalars"}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ExtDiff", "[", 
      RowBox[{"expr_Times", ",", "rest___"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"grades", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Grade", "[", 
             RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
           RowBox[{"List", "@@", "expr"}]}]}], ",", "pos", ",", "scalar", ",",
          "form"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pos", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"grades", ",", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "=!=", "0"}], "&"}], ")"}]}], ",", "1", ",", 
           RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Which", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], ">", "1"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"Throw", "[", 
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"ExtDiff", "::", "error1"}], ",", 
             "\"\<Found Times product of nonscalar forms: \>\"", ",", 
             "expr"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], "===", "1"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"pos", "=", 
            RowBox[{"pos", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"scalar", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"expr", ",", 
              RowBox[{"{", "pos", "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"form", "=", 
            RowBox[{"expr", "[", 
             RowBox[{"[", "pos", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\t", 
           RowBox[{
            RowBox[{"scalar", " ", 
             RowBox[{"ExtDiff", "[", 
              RowBox[{"form", ",", "rest"}], "]"}]}], "+", 
            RowBox[{"diff0", "[", 
             RowBox[{"scalar", ",", "form"}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], "===", "0"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"diff0", "[", "expr", "]"}]}], "\[IndentingNewLine]", 
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diff0", "[", "expr_Times", "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"MapAt", "[", 
        RowBox[{"ExtDiff", ",", "expr", ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "expr", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diff0", "[", 
      RowBox[{"expr_Times", ",", "form_"}], "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"MapAt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ExtDiff", "[", 
           RowBox[{"#", ",", "form"}], "]"}], "&"}], ",", "expr", ",", "i"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "expr", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diff0", "[", 
      RowBox[{"expr_", ",", "form_"}], "]"}], ":=", 
     RowBox[{"Wedge", "[", 
      RowBox[{
       RowBox[{"ExtDiff", "[", "expr", "]"}], ",", "form"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diff0", "[", "expr_", "]"}], ":=", 
     RowBox[{"ExtDiff", "[", "expr", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589437723337833*^9, 3.589437750291328*^9}, {
  3.589437933463608*^9, 3.589437960840479*^9}, {3.5894401672279*^9, 
  3.589440169806541*^9}}],

Cell["\<\
Alfonso: There\[CloseCurlyQuote]s a problem with the code above if you \
compute the exterior derivative of Cos[\[CapitalTheta]] d[\[CurlyPhi]] Sin[\
\[CapitalTheta]]. The problem appears to be solved by adding the line\
\>", "Text",
 CellChangeTimes->{{3.592238923081835*^9, 3.592238987551518*^9}, {
  3.5922391311112223`*^9, 3.592239190875093*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtDiff", "[", 
    RowBox[{"expr_", ",", "rest_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"ExtDiff", "[", "expr", "]"}], "\[Wedge]", "rest"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.592238919044271*^9, 3.5922389190458612`*^9}}],

Cell["The exterior derivative applied twice is zero:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExtDiff", "[", 
   RowBox[{"ExtDiff", "[", "expr_", "]"}], "]"}], ":=", "0"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589438121134224*^9, 3.58943812940057*^9}}],

Cell["\<\
Automatic contraction of products of basis objects and the exterior \
derivative. These kind of expressions arise after the application of ToBasis \
to an expression containing the exterior derivative.\
\>", "Text",
 CellChangeTimes->{{3.5927461083092003`*^9, 3.592746120158114*^9}, {
  3.592747255772661*^9, 3.5927473074600058`*^9}, {3.592747359523057*^9, 
  3.5927473753882847`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExtDiff", "/:", 
   RowBox[{"basis_Basis", " ", 
    RowBox[{"ExtDiff", "[", "expr_", "]"}]}], ":=", 
   RowBox[{"ExtDiff", "[", 
    RowBox[{"ContractBasis", "[", 
     RowBox[{
      RowBox[{"basis", " ", "expr"}], ",", "AIndex"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.592746153446164*^9, 3.5927461560397863`*^9}, {
   3.592746216519528*^9, 3.592746338711318*^9}, {3.592746485093725*^9, 
   3.592746510875966*^9}, {3.592746855941771*^9, 3.592746861181068*^9}, 
   3.5927474040639877`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["2.5 Introduction of co-frame", "Subsubsection",
 CellChangeTimes->{{3.589440613286744*^9, 3.589440626477994*^9}, {
  3.589441326379534*^9, 3.589441331689352*^9}}],

Cell[TextData[{
 "We create the non-atomic tensor ",
 StyleBox["\[Theta][M]", "InlineFormula"],
 " representing a co-frame. Note that the formatting does not contain the \
manifold as this information is already visible in the abstract index. The \
abstract index may belong to the tangent space of the manifold \
\[OpenCurlyDoubleQuote]M\[CloseCurlyDoubleQuote] or to any other vector \
bundle with base M. In the case of the abstract index belonging to TangentM \
we can think of \[Theta][M] as the set of \[OpenCurlyDoubleQuote]canonical \
1-forms\[CloseCurlyDoubleQuote]. "
}], "Text",
 CellChangeTimes->{{3.589441692139565*^9, 3.589441702351482*^9}, {
  3.589454405560668*^9, 3.589454507725404*^9}, {3.5894592775473747`*^9, 
  3.5894593185566797`*^9}, {3.589459385667136*^9, 3.589459457710853*^9}, {
  3.589459517999463*^9, 3.589459542762823*^9}, {3.5894595808946047`*^9, 
  3.5894596270799313`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "@", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}]}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{"Tangent", "@", "mani"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coframe", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"Coframe", "[", 
      RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], ",", "Wedge"}], "]"}], "=", 
   "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SymmetryGroupOfTensor", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"StrongGenSet", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<General co-frame\>\"", ",", "\"\<\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", "mani", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HostsOf", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorID", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   "\"\<\[Theta]\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589440690689538*^9, 3.589440728517706*^9}, 
   3.589440830457492*^9, {3.589440994379703*^9, 3.589440995066345*^9}, {
   3.5894410601217613`*^9, 3.5894411104985657`*^9}, {3.589441156600052*^9, 
   3.5894412348613653`*^9}, {3.5894412882260303`*^9, 3.589441310065565*^9}, {
   3.589441389988873*^9, 3.589441431268034*^9}, 3.589441576060895*^9, {
   3.589441619733219*^9, 3.5894416769823227`*^9}, {3.589441759085438*^9, 
   3.589441804543063*^9}, {3.589441947071391*^9, 3.589441991485034*^9}, {
   3.589459259076036*^9, 3.589459268814228*^9}, {3.589459510329274*^9, 
   3.58945951209595*^9}}],

Cell["Holonomic Co-frame", "Text",
 CellChangeTimes->{{3.590909292709303*^9, 3.590909299967722*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "@", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}]}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{"Tangent", "@", "mani"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dx", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"dx", "[", 
      RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], ",", "Wedge"}], "]"}], "=", 
   "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SymmetryGroupOfTensor", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"StrongGenSet", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<General co-frame\>\"", ",", "\"\<\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", "mani", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HostsOf", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorID", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", "\"\<dx\>\""}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589440690689538*^9, 3.589440728517706*^9}, 
   3.589440830457492*^9, {3.589440994379703*^9, 3.589440995066345*^9}, {
   3.5894410601217613`*^9, 3.5894411104985657`*^9}, {3.589441156600052*^9, 
   3.5894412348613653`*^9}, {3.5894412882260303`*^9, 3.589441310065565*^9}, {
   3.589441389988873*^9, 3.589441431268034*^9}, 3.589441576060895*^9, {
   3.589441619733219*^9, 3.5894416769823227`*^9}, {3.589441759085438*^9, 
   3.589441804543063*^9}, {3.589441947071391*^9, 3.589441991485034*^9}, {
   3.589459259076036*^9, 3.589459268814228*^9}, {3.589459510329274*^9, 
   3.58945951209595*^9}, {3.5909093162131243`*^9, 3.590909317622817*^9}, {
   3.5909098207218857`*^9, 3.5909099184926863`*^9}}],

Cell["Condition of the co-frame being holonomic.", "Text",
 CellChangeTimes->{{3.590910009151041*^9, 3.590910018647719*^9}, 
   3.590910112841114*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtDiff", "[", 
    RowBox[{
     RowBox[{"dx", "[", 
      RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "[", "ind_", "]"}], "]"}], ":=",
    "0"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5909099699664516`*^9, 3.590909994181649*^9}, {
  3.590910615652629*^9, 3.590910618383485*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["2.6 The Hodge dual", "Subsubsection",
 CellChangeTimes->{{3.589454355867941*^9, 3.589454360520129*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Hodge"}]], "Input",
 CellChangeTimes->{{3.589454385156706*^9, 3.589454387077373*^9}}],

Cell[BoxData[
 StyleBox["\<\"Hodge[metric][expr] is the Hodge dual of expr defined with \
respect to metric\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.590731719568925*^9},
 CellTags->"Info3590738919-4748043"]
}, Open  ]],

Cell["\<\
The third basic ingredient of exterior algebra is Hodge duality, which \
requires the presence of a metric.\
\>", "Text"],

Cell["\<\
[Jose: The metric needs to be a pattern. That\[CloseCurlyQuote]s essential. \
Otherwise Hodge[metric] would work only for the specified metric.]\
\>", "Text"],

Cell[BoxData[
 RowBox[{"DefInertHead", "[", 
  RowBox[{
   RowBox[{"Hodge", "[", "metric_", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"LinearQ", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ContractThrough", "\[Rule]", 
    RowBox[{"{", "delta", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PrintAs", "\[Rule]", 
    RowBox[{"Hold", "[", 
     StyleBox[
      RowBox[{"\"\<\\!\\(\\*SubscriptBox[\\(*\\), \\(\>\"", "<>", 
       RowBox[{"PrintAs", "[", "metric", "]"}], "<>", "\"\<\\)]\\)\>\""}],
      ShowSpecialCharacters->False,
      ShowStringCharacters->True,
      NumberMarks->True], "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.58945966668611*^9, 3.5894602196180067`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Hodge", "[", "metric_", "]"}], "[", 
   RowBox[{"x_", " ", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"x", " ", 
    RowBox[{
     RowBox[{"Hodge", "[", "metric", "]"}], "[", "y", "]"}]}], "/;", 
   RowBox[{
    RowBox[{"Grade", "[", 
     RowBox[{"x", ",", "Wedge"}], "]"}], "===", "0"}]}]}]], "Input",
 InitializationCell->True],

Cell["\<\
[Jose: This previous definition overlaps with LinearQ->True, so we might want \
to rethink that option in relation with the products and ScalarsOfProduct.]\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DimOfMetric", "[", "metric_", "]"}], ":=", 
  RowBox[{"DimOfVBundle", "[", 
   RowBox[{"VBundleOfMetric", "[", "metric", "]"}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"Hodge", "/:", 
  RowBox[{"Grade", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Hodge", "[", "metric_", "]"}], "[", "expr_", "]"}], ",", 
    "Wedge"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"DimOfMetric", "[", "metric", "]"}], "-", 
   RowBox[{"Grade", "[", 
    RowBox[{"expr", ",", "Wedge"}], "]"}]}]}]], "Input",
 InitializationCell->True],

Cell["\<\
Leo: Question: Is the following correct? Why is it only \
SignatureOfMetric[metric][[2]]? Shouldn\[CloseCurlyQuote]t it depend on the \
difference between the number of plus and minus?
Jose: Yes, I think it is correct. Only the number of minus signs matter. I \
was originally confused as well.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Hodge", "[", "metric_", "]"}], "@", 
   RowBox[{
    RowBox[{"Hodge", "[", "metric_", "]"}], "[", "expr_", "]"}]}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Grade", "[", 
        RowBox[{"expr", ",", "Wedge"}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"DimOfMetric", "[", "metric", "]"}], "-", "1"}], ")"}]}], 
      "+", 
      RowBox[{
       RowBox[{"SignatureOfMetric", "[", "metric", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "expr"}]}]], "Input",
 InitializationCell->True],

Cell["\<\
This function converts Hodge duals of product of the coframe basis (either \
holonomic or non-holonomic):\
\>", "Text",
 CellChangeTimes->{{3.591073420469098*^9, 3.5910734320273743`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ExpandHodgeDual"}]], "Input",
 CellChangeTimes->{{3.589459927436356*^9, 3.589459931231207*^9}}],

Cell[BoxData[
 StyleBox["\<\"ExpandHodgeDual[expr,Coframe[mani],g] expands out all the \
Hodge duals defined with respect to the metric g of the exterior powers of \
Coframe[mani]. If the manifold tag mani is dropped, then all the instances of \
Coframe are expanded.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.590731720164281*^9},
 CellTags->"Info3590738919-4748043"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpandHodgeDual", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"coframe", ":", 
        RowBox[{"(", 
         RowBox[{"Coframe", "|", "dx"}], ")"}]}], ")"}], "[", 
      RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], ",", "met_"}], "]"}], ":=", 
   
   RowBox[{"expr", "/.", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Hodge", "[", "met", "]"}], "[", 
        RowBox[{"form", ":", 
         RowBox[{"Wedge", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"coframe", "[", "mani", "]"}], "[", "_", "]"}], ".."}], 
          "]"}]}], "]"}], "|", 
       RowBox[{"form", ":", 
        RowBox[{
         RowBox[{"Hodge", "[", "met", "]"}], "[", 
         RowBox[{
          RowBox[{"coframe", "[", "mani", "]"}], "[", "_", "]"}], "]"}]}]}], 
      "]"}], "\[RuleDelayed]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dim", "=", 
          RowBox[{"DimOfMetric", "[", "met", "]"}]}], ",", 
         RowBox[{"n", "=", 
          RowBox[{"Length", "[", "form", "]"}]}], ",", 
         RowBox[{"inds", "=", 
          RowBox[{"Sequence", "@@@", 
           RowBox[{"List", "@@", "form"}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"dummies", "=", 
           RowBox[{"DummyIn", "/@", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{"VBundleOfMetric", "[", "met", "]"}], ",", 
              RowBox[{"dim", "-", "n"}]}], "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"dim", "-", "n"}], ")"}], "!"}]}], 
          RowBox[{
           RowBox[{"epsilon", "[", "met", "]"}], "@@", 
           RowBox[{"Join", "[", 
            RowBox[{"inds", ",", 
             RowBox[{"ChangeIndex", "/@", "dummies"}]}], "]"}]}], 
          RowBox[{"Wedge", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"coframe", "[", "mani", "]"}], "/@", "dummies"}], 
            ")"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589459916519758*^9, 3.5894599194871607`*^9}, {
  3.589459956418312*^9, 3.589460014068304*^9}, {3.589460113253824*^9, 
  3.5894601607843027`*^9}, {3.589461151422645*^9, 3.589461180942487*^9}, {
  3.589461357243723*^9, 3.589461379418013*^9}, {3.589466248063819*^9, 
  3.589466249309272*^9}, {3.5909108856823997`*^9, 3.59091092646902*^9}, {
  3.590910992543577*^9, 3.590911018074051*^9}, {3.591033400943157*^9, 
  3.59103340530977*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpandHodgeDual", "[", 
    RowBox[{"expr_", ",", "Coframe", ",", "met_"}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ExpandHodgeDual", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"Coframe", "[", "#2", "]"}], ",", "met"}], "]"}], "&"}], ",", 
     "expr", ",", "$Manifolds"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5894667515170527`*^9, 3.5894667597452927`*^9}, {
  3.589466844857044*^9, 3.589466881178529*^9}, {3.589473989901963*^9, 
  3.589474027808803*^9}, {3.589478440218074*^9, 3.589478443123004*^9}, {
  3.589478697540822*^9, 3.589478699991153*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpandHodgeDual", "[", 
    RowBox[{"expr_", ",", "dx", ",", "met_"}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ExpandHodgeDual", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"dx", "[", "#2", "]"}], ",", "met"}], "]"}], "&"}], ",", 
     "expr", ",", "$Manifolds"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5894667515170527`*^9, 3.5894667597452927`*^9}, {
  3.589466844857044*^9, 3.589466881178529*^9}, {3.589473989901963*^9, 
  3.589474027808803*^9}, {3.589478440218074*^9, 3.589478443123004*^9}, {
  3.589478697540822*^9, 3.589478699991153*^9}, {3.590918684267809*^9, 
  3.590918695337201*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["2.7 The co-differential", "Subsubsection",
 CellChangeTimes->{{3.5894795695326223`*^9, 3.589479577208715*^9}}],

Cell["\<\
We introduce the co-differential. Alfonso: I have dropped the dependency on a \
covariant derivative, because the co-differential does not require a \
covariant derivative to be defined.\
\>", "Text",
 CellChangeTimes->{{3.589479618331686*^9, 3.589479626511785*^9}, {
  3.591539547052228*^9, 3.5915395811961412`*^9}}],

Cell[BoxData[
 RowBox[{"DefInertHead", "[", 
  RowBox[{
   RowBox[{"CoDiff", "[", "metric_", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"LinearQ", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ContractThrough", "\[Rule]", "delta"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PrintAs", "\[Rule]", 
    RowBox[{"Hold", "[", 
     StyleBox[
      RowBox[{"\"\<\\!\\(\\*SubscriptBox[\\(\\[Delta]\\), \\(\>\"", "<>", 
       RowBox[{"PrintAs", "[", "metric", "]"}], "<>", "\"\<\\)]\\)\>\""}],
      ShowSpecialCharacters->False,
      ShowStringCharacters->True,
      NumberMarks->True], "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589479674317107*^9, 3.589479677619236*^9}}],

Cell[BoxData[
 RowBox[{"CoDiff", "/:", 
  RowBox[{"Grade", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"CoDiff", "[", "metric_", "]"}], "[", 
     RowBox[{"expr_", ",", "___"}], "]"}], ",", "Wedge"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"Grade", "[", 
    RowBox[{"expr", ",", "Wedge"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5894797546268873`*^9, 3.589479757266851*^9}, {
  3.589479794343585*^9, 3.589479797356291*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CoDiff", "/:", 
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CoDiff", "[", "metric_", "]"}], "[", 
      RowBox[{"form_", ",", 
       RowBox[{"PD", "?", "CovDQ"}]}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
   RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CoDiff", "[", "metric", "]"}], "[", 
      RowBox[{"form", ",", "PD"}], "]"}], ",", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PrintAs", "[", 
         RowBox[{"CoDiff", "[", "metric", "]"}], "]"}], ",", "\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}], ",", "\"\<]\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoDiff", "/:", 
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CoDiff", "[", "metric_", "]"}], "[", 
      RowBox[{"form_", ",", 
       RowBox[{"cd_", "?", "CovDQ"}]}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
   RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CoDiff", "[", "metric", "]"}], "[", 
      RowBox[{"form", ",", "cd"}], "]"}], ",", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SuperscriptBox", "[", 
         RowBox[{
          RowBox[{"PrintAs", "[", 
           RowBox[{"CoDiff", "[", "metric", "]"}], "]"}], ",", 
          RowBox[{"Last", "@", 
           RowBox[{"SymbolOfCovD", "[", "cd", "]"}]}]}], "]"}], ",", 
        "\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}], ",", "\"\<]\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5894797604978333`*^9, 3.589479762875141*^9}, {
  3.589479802553808*^9, 3.589479804720516*^9}, {3.589479853729293*^9, 
  3.589479874792657*^9}, {3.589479959137774*^9, 3.589480011597859*^9}}],

Cell["\<\
The co-differential is defined in terms of the exterior derivative and the \
Hodge dual:
Leo: Question: Same as before, why is it only SignatureOfMetric[metric][[2]]? \
Shouldn\[CloseCurlyQuote]t it depend on the difference between the number of \
plus and minus?
Jose: I think it is correct.
Leo: Ok, I agree now. Also, ReplaceRepeated in case of nested codiff.
Alfonso: dropped dependency on a covariant derivative.\
\>", "Text",
 CellChangeTimes->{{3.591540114049758*^9, 3.591540127553624*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CoDiffToExtDiff", "[", "expr_", "]"}], ":=", 
  RowBox[{"expr", "//.", 
   RowBox[{
    RowBox[{
     RowBox[{"CoDiff", "[", "met_", "]"}], "[", "expr1_", "]"}], 
    "\[RuleDelayed]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"DimOfMetric", "[", "met", "]"}], 
         RowBox[{"Grade", "[", 
          RowBox[{"expr1", ",", "Wedge"}], "]"}]}], "+", 
        RowBox[{"DimOfMetric", "[", "met", "]"}], "+", "1", "+", 
        RowBox[{
         RowBox[{"SignatureOfMetric", "[", "met", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"Hodge", "[", "met", "]"}], "@", 
      RowBox[{"ExtDiff", "[", 
       RowBox[{
        RowBox[{"Hodge", "[", "met", "]"}], "@", "expr1"}], 
       "]"}]}]}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.58948032887227*^9, 3.589480330688146*^9}, {
  3.589480362369117*^9, 3.58948039112057*^9}, {3.591540208426409*^9, 
  3.591540217328412*^9}}],

Cell["Leo: For convenience we program this identity:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CoDiff", "[", "metric_", "]"}], "@", 
   RowBox[{
    RowBox[{"CoDiff", "[", "metric_", "]"}], "@", "expr_"}]}], ":=", 
  "0"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589480433105638*^9, 3.589480439595385*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Graded derivations", "Subsection",
 CellChangeTimes->{{3.5890989045773783`*^9, 3.589098916977103*^9}, {
  3.589099319590476*^9, 3.589099334774352*^9}, {3.5892034190391827`*^9, 
  3.589203424686392*^9}, {3.589454342408371*^9, 3.589454348447538*^9}, {
  3.589559875792428*^9, 3.589559889045223*^9}, {3.590895366549391*^9, 
  3.59089537046688*^9}},
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell["3.1 Covariant exterior derivative", "Subsubsection",
 CellChangeTimes->{{3.5895599072901983`*^9, 3.58955990842346*^9}, 
   3.589723672650683*^9}],

Cell["\<\
For the moment we use a head for the exterior covariant derivative which is \
different to that of the exterior derivative. \
\>", "Text",
 CellChangeTimes->{{3.589561261363476*^9, 3.5895613227335043`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ExtCovDiff"}]], "Input",
 CellChangeTimes->{{3.589437009176536*^9, 3.5894370125815287`*^9}, {
  3.5895616009138002`*^9, 3.589561615138361*^9}}],

Cell[BoxData[
 StyleBox["\<\"ExtCovDiff[form,covd] represents the exterior covariant \
derivative of the differential form form with respect to the covariant \
derivative covd\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.590731727920969*^9},
 CellTags->"Info3590738927-4748043"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefGradedDerivation", "[", 
   RowBox[{"ExtCovDiff", ",", "Wedge", ",", 
    RowBox[{"+", "1"}], ",", 
    RowBox[{"PrintAs", "\[Rule]", "\"\<d\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589436938906526*^9, 3.589436945741436*^9}, {
  3.589561634829616*^9, 3.5895616352737637`*^9}}],

Cell["Superscript formatting for covariant exterior derivatives", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ExtCovDiff", "/:", 
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{"ExtCovDiff", "[", 
      RowBox[{"form_", ",", 
       RowBox[{"PD", "?", "CovDQ"}]}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
   RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
    RowBox[{
     RowBox[{"ExtCovDiff", "[", 
      RowBox[{"form", ",", "PD"}], "]"}], ",", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PrintAs", "[", "ExtDiff", "]"}], ",", "\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}], ",", "\"\<]\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtCovDiff", "/:", 
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{"ExtCovDiff", "[", 
      RowBox[{"form_", ",", 
       RowBox[{"cd_", "?", "CovDQ"}]}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
   RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
    RowBox[{
     RowBox[{"ExtCovDiff", "[", 
      RowBox[{"form", ",", "cd"}], "]"}], ",", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SuperscriptBox", "[", 
         RowBox[{
          RowBox[{"PrintAs", "[", "ExtDiff", "]"}], ",", 
          RowBox[{"Last", "@", 
           RowBox[{"SymbolOfCovD", "[", "cd", "]"}]}]}], "]"}], ",", 
        "\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}], ",", "\"\<]\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5895601533862953`*^9, 3.589560158458243*^9}, {
  3.589560232428495*^9, 3.589560240743485*^9}, {3.589560318526002*^9, 
  3.589560323436755*^9}, {3.5895606187174997`*^9, 3.5895606857342*^9}}],

Cell["We still need definition when acting on Times", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "produces", " ", "expanded", " ", "expressions", " ", "and", 
    " ", "is", " ", "much", " ", "faster", " ", "when", " ", "there", " ", 
    "are", " ", "many", " ", "scalars"}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ExtCovDiff", "[", 
      RowBox[{"expr_Times", ",", "rest___"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"grades", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Grade", "[", 
             RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
           RowBox[{"List", "@@", "expr"}]}]}], ",", "pos", ",", "scalar", ",",
          "form"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pos", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"grades", ",", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "=!=", "0"}], "&"}], ")"}]}], ",", "1", ",", 
           RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Which", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], ">", "1"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"Throw", "[", 
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"ExtCovDiff", "::", "error1"}], ",", 
             "\"\<Found Times product of nonscalar forms: \>\"", ",", 
             "expr"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], "===", "1"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"pos", "=", 
            RowBox[{"pos", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"scalar", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"expr", ",", 
              RowBox[{"{", "pos", "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"form", "=", 
            RowBox[{"expr", "[", 
             RowBox[{"[", "pos", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\t", 
           RowBox[{
            RowBox[{"scalar", " ", 
             RowBox[{"ExtCovDiff", "[", 
              RowBox[{"form", ",", "rest"}], "]"}]}], "+", 
            RowBox[{"extcovdiff0", "[", 
             RowBox[{"scalar", ",", "form"}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], "===", "0"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"extcovdiff0", "[", "expr", "]"}]}], "\[IndentingNewLine]", 
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"extcovdiff0", "[", "expr_Times", "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"MapAt", "[", 
        RowBox[{"ExtDiff", ",", "expr", ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "expr", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"extcovdiff0", "[", 
      RowBox[{"expr_Times", ",", "form_"}], "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"MapAt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ExtDiff", "[", 
           RowBox[{"#", ",", "form"}], "]"}], "&"}], ",", "expr", ",", "i"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "expr", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"extcovdiff0", "[", 
      RowBox[{"expr_", ",", "form_"}], "]"}], ":=", 
     RowBox[{"Wedge", "[", 
      RowBox[{
       RowBox[{"ExtDiff", "[", "expr", "]"}], ",", "form"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"extcovdiff0", "[", "expr_", "]"}], ":=", 
     RowBox[{"ExtDiff", "[", "expr", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589437723337833*^9, 3.589437750291328*^9}, {
  3.589437933463608*^9, 3.589437960840479*^9}, {3.5894401672279*^9, 
  3.589440169806541*^9}, {3.5895667319086847`*^9, 3.589566732456567*^9}, {
  3.589566844865939*^9, 3.589566851857582*^9}, {3.589566903617169*^9, 
  3.5895669040967827`*^9}, {3.589605282349491*^9, 3.589605289119005*^9}, {
  3.5896053802302933`*^9, 3.589605382842067*^9}, {3.589605424691628*^9, 
  3.589605428501021*^9}, {3.589605484287567*^9, 3.589605487898275*^9}, {
  3.589605992389326*^9, 3.589606013227162*^9}}],

Cell["\<\
Automatically add PD (this is the origin of the affine space of connections).
QUESTION: Is it better to use diff[expr] or diff[expr,PD]? The latter has the \
advantage of making the code only deal with one case, not two. But now all of \
the above code should be specialized for PD?
Alfonso: this problem does not arise if one uses ExtCovDiff for the exterior \
covariant derivative.\
\>", "Text",
 CellChangeTimes->{{3.589565559848936*^9, 3.589565621608445*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExtCovDiff", "[", "expr_", "]"}], ":=", 
  RowBox[{"ExtCovDiff", "[", 
   RowBox[{"expr", ",", "PD"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589561416384301*^9, 3.589561422755351*^9}, {
  3.589561478874119*^9, 3.589561482451448*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["3.2 Connection forms ", "Subsubsection",
 CellChangeTimes->{{3.589723600763858*^9, 3.589723618164233*^9}}],

Cell["\<\
There are two objects we need for covariant exterior derivatives. First, \
1-forms taking values in VB\[CircleTimes]-VB which represent the tensorial \
difference between two connections. Second, 2-forms taking values in VB\
\[CircleTimes]-VB which represent the curvature of an individual connection. \
We\[CloseCurlyQuote]ll use nonatomic heads for both of these. The notation \
will be
  ConnectionForm[CD1,CD2,VB][A,-B]
  CurvatureForm[CD,VB][A,-B]\
\>", "Text",
 CellChangeTimes->{{3.589884634753808*^9, 3.589884647105563*^9}}],

Cell[TextData[{
 StyleBox["Alfonso: ",
  FontWeight->"Bold"],
 "from a mathematical point of view the connection form should not be \
regarded as the tensorial difference between two connections. The reason for \
this is that the connection form is defined as a 1-form in the frame bundle \
regarded as a differentiable manifold and in this sense it is truly \
tensorial. One loses the tensorial character when one does a splitting of the \
frame bundle into the base manifold and the fibres. For this reason I suggest \
the following notation for the connection form:\n\n\
ConnectionForm[CD,VB][A,-B]\n\nThis notation has been implemented in this \
notebook."
}], "Text",
 CellChangeTimes->{{3.5898926928893843`*^9, 3.5898926966094027`*^9}, {
  3.58989275999251*^9, 3.589892850063596*^9}, {3.58989290545537*^9, 
  3.5898929660623093`*^9}, {3.589893060333386*^9, 3.589893108541044*^9}, {
  3.589893191324848*^9, 3.589893258482449*^9}, {3.5898932989699593`*^9, 
  3.589893408664312*^9}, {3.589907728233527*^9, 3.5899077628381844`*^9}}],

Cell["\<\
First, making these nonatomic-head tensors. We start by the general \
connection form. \
\>", "Text",
 CellChangeTimes->{{3.589721783131432*^9, 3.5897217925239487`*^9}, {
   3.589811242944412*^9, 3.589811292647434*^9}, 3.589884681449279*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"_", ",", 
      RowBox[{"vb_", "?", "VBundleQ"}]}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{"vb", ",", 
     RowBox[{"-", "vb"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConnectionForm", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"_", ",", "_"}], "]"}], ",", "Wedge"}], "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SymmetryGroupOfTensor", "[", 
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", 
    RowBox[{"StrongGenSet", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dagger", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"cd1_", ",", "vb_"}], "]"}], "]"}], "^:=", 
   RowBox[{"ConnectionForm", "[", 
    RowBox[{"cd1", ",", 
     RowBox[{"Dagger", "@", "vb"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<nonsymmetric Connection 1-form\>\"", ",", "\"\<\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"cd1_", ",", "_"}], "]"}], "]"}], "^:=", 
   RowBox[{"Union", "@@", 
    RowBox[{"DependenciesOfCovD", "/@", 
     RowBox[{"{", "cd1", "}"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HostsOf", "[", 
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"cd1_", ",", "vb_"}], "]"}], "]"}], "^:=", 
    RowBox[{"Union", "@@", 
     RowBox[{"HostsOf", "/@", 
      RowBox[{"{", 
       RowBox[{"cd1", ",", "vb"}], "}"}]}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Should", " ", "we", " ", "put", " ", 
    RowBox[{"Union", "@@", 
     RowBox[{"HostsOf", "/@", 
      RowBox[{"{", 
       RowBox[{"cd1", ",", "vb"}], "}"}]}]}], " ", 
    RowBox[{"here", "?", " ", "I"}], " ", "think", " ", "so"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TensorID", "[", 
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", "ConnectionForm", "]"}], "^=", "\"\<A\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"cd1_", ",", "_"}], "]"}], "]"}], "^:=", 
   RowBox[{
    RowBox[{"PrintAs", "[", "ConnectionForm", "]"}], "<>", "\"\<[\>\"", "<>", 
    
    RowBox[{"Last", "@", 
     RowBox[{"SymbolOfCovD", "[", "cd1", "]"}]}], "<>", "\"\<]\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"PD", ",", "_"}], "]"}], "]"}], "^:=", 
   RowBox[{"PrintAs", "[", "ConnectionForm", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5896085224339447`*^9, 3.589608575572795*^9}, {
   3.589608605918415*^9, 3.5896087488047533`*^9}, {3.58960979089089*^9, 
   3.589609831444982*^9}, {3.589894294187579*^9, 3.5898943391775827`*^9}, {
   3.5898943782615013`*^9, 3.58989445129736*^9}, 3.589894511945507*^9, {
   3.589895137606661*^9, 3.5898951388257933`*^9}, {3.590731638536449*^9, 
   3.590731641254376*^9}}],

Cell[TextData[{
 "Automatic ordering. Put PD second, else order lexicographically. ",
 StyleBox["Alfonso: ",
  FontWeight->"Bold"],
 "this is no longer needed."
}], "Text",
 CellChangeTimes->{{3.5898946803695307`*^9, 3.58989470148765*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ConnectionForm", "[", 
   RowBox[{"cd_", ",", "cd_", ",", "_"}], "]"}], ":=", 
  "Zero"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ConnectionForm", "[", 
    RowBox[{"PD", ",", "cd_", ",", "vb_"}], "]"}], "[", 
   RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"-", 
   RowBox[{
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"cd", ",", "PD", ",", "vb"}], "]"}], "[", 
    RowBox[{"a", ",", "b"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ConnectionForm", "[", 
    RowBox[{"cd1_", ",", "cd2_", ",", "vb_"}], "]"}], "[", 
   RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"cd2", ",", "cd1", ",", "vb"}], "]"}], "[", 
     RowBox[{"a", ",", "b"}], "]"}]}], "/;", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"cd2", "=!=", "PD"}], "&&", 
     RowBox[{"!", 
      RowBox[{"OrderedQ", "[", 
       RowBox[{"{", 
        RowBox[{"cd1", ",", "cd2"}], "}"}], "]"}]}]}], ")"}]}]}]}], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.589608814484247*^9, 3.5896088506271143`*^9}, {
  3.589723507597096*^9, 3.5897235547235317`*^9}, {3.589810553146101*^9, 
  3.58981060325805*^9}}],

Cell["\<\
We introduce now the ChristoffelForm (connection form for a connection in the \
frame bundle). \
\>", "Text",
 CellChangeTimes->{{3.5897218214831448`*^9, 3.589721852994493*^9}, {
   3.589724289003468*^9, 3.589724356242646*^9}, {3.58981069076791*^9, 
   3.589810692647328*^9}, {3.589810757358461*^9, 3.589810825109305*^9}, {
   3.5898108872370033`*^9, 3.589810918476178*^9}, {3.5898109834915123`*^9, 
   3.5898110455944653`*^9}, {3.589811075746037*^9, 3.5898111045537663`*^9}, {
   3.589885266914503*^9, 3.5898852772178497`*^9}, 3.589894865549118*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "[", 
    RowBox[{"ChristoffelForm", "[", "_", "]"}], "]"}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"ChristoffelForm", "[", 
     RowBox[{"cd1_", "?", "CovDQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tangent", "@", 
      RowBox[{"ManifoldOfCovD", "@", "cd1"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Tangent", "@", 
       RowBox[{"ManifoldOfCovD", "@", "cd1"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ChristoffelForm", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"ChristoffelForm", "[", "_", "]"}], ",", "Wedge"}], "]"}], "=", 
   "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SymmetryGroupOfTensor", "[", 
     RowBox[{"ChristoffelForm", "[", "_", "]"}], "]"}], "^=", 
    RowBox[{"StrongGenSet", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dagger", "[", 
    RowBox[{"ChristoffelForm", "[", "cd1_", "]"}], "]"}], "^:=", 
   RowBox[{"ChristoffelForm", "[", "cd1", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"ChristoffelForm", "[", "_", "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<nonsymmetric frame bundle Connection 1-form\>\"", ",", "\"\<\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"ChristoffelForm", "[", "cd1_", "]"}], "]"}], "^:=", 
   RowBox[{"Union", "@@", 
    RowBox[{"DependenciesOfCovD", "/@", 
     RowBox[{"{", "cd1", "}"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HostsOf", "[", 
     RowBox[{"ChristoffelForm", "[", "cd1_", "]"}], "]"}], "^:=", 
    RowBox[{"Union", "@@", 
     RowBox[{"HostsOf", "/@", 
      RowBox[{"{", "cd1", "}"}]}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Should", " ", "we", " ", "put", " ", 
    RowBox[{"Union", "@@", 
     RowBox[{"HostsOf", "/@", 
      RowBox[{"{", 
       RowBox[{"cd1", ",", "cd2", ",", "vb"}], "}"}]}]}], " ", 
    RowBox[{"here", "?", " ", "I"}], " ", "think", " ", "so"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TensorID", "[", 
     RowBox[{"ChristoffelForm", "[", "_", "]"}], "]"}], "^=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", "ChristoffelForm", "]"}], "^=", 
   "\"\<\[CapitalGamma]\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"ChristoffelForm", "[", "cd1_", "]"}], "]"}], "^:=", 
   RowBox[{
    RowBox[{"PrintAs", "[", "ChristoffelForm", "]"}], "<>", "\"\<[\>\"", "<>", 
    RowBox[{"Last", "@", 
     RowBox[{"SymbolOfCovD", "[", "cd1", "]"}]}], "<>", "\"\<]\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"ChristoffelForm", "[", "PD", "]"}], "]"}], "^:=", 
   RowBox[{"PrintAs", "[", "ChristoffelForm", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5896085224339447`*^9, 3.589608575572795*^9}, {
   3.589608605918415*^9, 3.5896087488047533`*^9}, {3.58960979089089*^9, 
   3.589609831444982*^9}, {3.589721858482535*^9, 3.5897218906955957`*^9}, {
   3.58972283174128*^9, 3.589722992960107*^9}, {3.5897231446646347`*^9, 
   3.5897232319413*^9}, {3.589723274591301*^9, 3.589723283631176*^9}, {
   3.589723335061768*^9, 3.589723348662228*^9}, {3.589723392422009*^9, 
   3.589723498373794*^9}, {3.589724790014031*^9, 3.589724790962819*^9}, {
   3.589885348905834*^9, 3.589885373930718*^9}, {3.589894888451933*^9, 
   3.58989491586409*^9}, {3.5898950011446238`*^9, 3.589895105447413*^9}, 
   3.5898951510864477`*^9, 3.591856243515263*^9}],

Cell[TextData[{
 "It will be convenient shorthand to be able to write ChristoffelForm[cd] for \
ChristoffelForm[cd,PD]. ",
 StyleBox["Alfonso: ",
  FontWeight->"Bold"],
 " this is no longer needed."
}], "Text",
 CellChangeTimes->{{3.589723844896627*^9, 3.58972386430437*^9}, {
  3.589895215856848*^9, 3.589895227176937*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChristoffelForm", "[", "cd_", "]"}], ":=", 
  RowBox[{"ChristoffelForm", "[", 
   RowBox[{"cd", ",", "PD"}], "]"}]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{{3.589608867743187*^9, 3.5896088732758303`*^9}, {
  3.589723813493464*^9, 3.589723837362753*^9}}],

Cell["\<\
Automatic replacement of the connection form by the Christoffel form when the \
connection corresponds to a connection in a frame bundle.\
\>", "Text",
 CellChangeTimes->{{3.589724242507251*^9, 3.589724271915395*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ConnectionForm", "[", 
    RowBox[{"cd1_", ",", "vb_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"ChristoffelForm", "[", "cd1", "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Tangent", "@", 
       RowBox[{"ManifoldOfCovD", "@", "cd1"}]}], "\[Equal]", "vb"}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChristoffelForm", "[", 
    RowBox[{"cd_", ",", "tangentbundle_"}], "]"}], ":=", 
   RowBox[{"ChristoffelForm", "[", "cd", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589724034831846*^9, 3.589724087233554*^9}, {
  3.589724135370466*^9, 3.5897242352880507`*^9}, {3.589809932406103*^9, 
  3.589809953806123*^9}, {3.5898952407258997`*^9, 3.589895262715728*^9}, {
  3.590483656305423*^9, 3.590483693689299*^9}, {3.590483938331802*^9, 
  3.590483944509338*^9}, {3.590486131596779*^9, 3.590486135566317*^9}, {
  3.590486936039913*^9, 3.590486952475772*^9}}],

Cell["\<\
PD is regarded as the trivial connection in a principal bundle. Hence\
\>", "Text",
 CellChangeTimes->{{3.5899078745727882`*^9, 3.589907886997259*^9}, {
  3.589908563786191*^9, 3.589908592681241*^9}, {3.589908656983718*^9, 
  3.5899086654093647`*^9}, {3.592760569124309*^9, 3.592760570090828*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ConnectionForm", "[", 
    RowBox[{"PD", ",", "vb_"}], "]"}], ":=", "Zero"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChristoffelForm", "[", "PD", "]"}], ":=", "Zero"}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589908677998024*^9, 3.589908693194957*^9}, {
  3.589909007536978*^9, 3.589909012697495*^9}}],

Cell["\<\
Transformation of the connection form into the connection tensor plus \
co-frame.\
\>", "Text",
 CellChangeTimes->{{3.5927605878461523`*^9, 3.59276065636799*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ConnectionFormToTensor", "[", 
    RowBox[{"expr_", ",", "covd_", ",", 
     RowBox[{"frame", ":", 
      RowBox[{"(", 
       RowBox[{"Coframe", "|", "dx"}], ")"}]}]}], "]"}], ":=", 
   RowBox[{"expr", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ChristoffelForm", "[", "cd1_", "]"}], "[", "inds__", "]"}], ":>", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", "=", 
            RowBox[{"DummyIn", "@", 
             RowBox[{"First", "@", 
              RowBox[{"VBundlesOfCovD", "@", "covd"}]}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"xTensorQ", "@", 
               RowBox[{"GiveSymbol", "[", 
                RowBox[{"Christoffel", ",", "cd1", ",", "covd"}], "]"}]}], "===",
               "False"}], ",", 
             RowBox[{"DefTensor", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"GiveSymbol", "[", 
                 RowBox[{"Christoffel", ",", "cd1", ",", "covd"}], "]"}], "[", 
                RowBox[{"inds", ",", 
                 RowBox[{"-", "a"}]}], "]"}], ",", 
               RowBox[{"ManifoldOfCovD", "@", "covd"}]}], "]"}]}], "]"}], ";",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"GiveSymbol", "[", 
              RowBox[{"Christoffel", ",", "cd1", ",", "covd"}], "]"}], "[", 
             RowBox[{"inds", ",", 
              RowBox[{"-", "a"}]}], "]"}], 
            RowBox[{
             RowBox[{"frame", "[", 
              RowBox[{"ManifoldOfCovD", "@", "covd"}], "]"}], "[", "a", 
             "]"}]}]}]}], "]"}], "/;", 
        RowBox[{"covd", "=!=", "PD"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"ConnectionForm", "[", 
         RowBox[{"cd1_", ",", "vbundle_"}], "]"}], "[", "inds__", "]"}], 
       "\[RuleDelayed]", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", "=", 
            RowBox[{"DummyIn", "@", 
             RowBox[{"Tangent", "@", 
              RowBox[{"BaseOfVBundle", "@", "vbundle"}]}]}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"xTensorQ", "@", 
               RowBox[{"GiveSymbol", "[", 
                RowBox[{"AChristoffel", ",", "covd", ",", "cd1"}], "]"}]}], "===",
               "False"}], ",", 
             RowBox[{"DefTensor", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"GiveSymbol", "[", 
                 RowBox[{"AChristoffel", ",", "covd", ",", "cd1"}], "]"}], 
                "[", 
                RowBox[{"inds", ",", 
                 RowBox[{"-", "a"}]}], "]"}], ",", 
               RowBox[{"BaseOfVBundle", "@", "vbundle"}]}], "]"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"GiveSymbol", "[", 
              RowBox[{"AChristoffel", ",", "covd", ",", "cd1"}], "]"}], "[", 
             RowBox[{"inds", ",", 
              RowBox[{"-", "a"}]}], "]"}], 
            RowBox[{
             RowBox[{"frame", "[", 
              RowBox[{"BaseOfVBundle", "@", "vbundle"}], "]"}], "[", "a", 
             "]"}]}]}]}], "]"}], "/;", 
        RowBox[{"covd", "=!=", "PD"}]}]}]}], "}"}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.592760659989112*^9, 3.592760731478651*^9}, 
   3.592760773451819*^9, {3.592760820512384*^9, 3.592760833115171*^9}, {
   3.592760948845265*^9, 3.592760986102234*^9}, 3.592761155817731*^9, {
   3.592761473303218*^9, 3.5927616127682343`*^9}, {3.592761734641519*^9, 
   3.592761898588339*^9}, {3.5927621498075657`*^9, 3.5927621898189507`*^9}, {
   3.592762231912314*^9, 3.592762279500581*^9}, {3.592762311304256*^9, 
   3.592762396833746*^9}, {3.5927624347754498`*^9, 3.5927625013036537`*^9}, {
   3.5927631304351187`*^9, 3.5927631446430492`*^9}, {3.592763251364019*^9, 
   3.592763347808134*^9}, {3.592938429370121*^9, 3.592938430890705*^9}, {
   3.592938630125942*^9, 3.592938631235485*^9}, {3.59308699261056*^9, 
   3.593087135298931*^9}, {3.593087188408725*^9, 3.593087193826581*^9}, {
   3.5930872519618073`*^9, 3.5930872568904343`*^9}, {3.5930873132106237`*^9, 
   3.593087363577084*^9}, {3.5930874121534243`*^9, 3.593087506975738*^9}, {
   3.59308753942402*^9, 3.593087576435972*^9}}],

Cell["\<\
If the covariant derivative is PD then the code takes the following simpler \
form:\
\>", "Text",
 CellChangeTimes->{{3.593153962751338*^9, 3.593153986998577*^9}, {
  3.5931540181268873`*^9, 3.5931540187103453`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConnectionFormToTensor", "[", 
   RowBox[{"expr_", ",", "PD", ",", 
    RowBox[{"frame", ":", 
     RowBox[{"(", 
      RowBox[{"Coframe", "|", "dx"}], ")"}]}]}], "]"}], ":=", 
  RowBox[{"expr", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ChristoffelForm", "[", "cd1_", "]"}], "[", "inds__", "]"}], ":>", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", "=", 
          RowBox[{"DummyIn", "@", 
           RowBox[{"First", "@", 
            RowBox[{"VBundlesOfCovD", "@", "cd1"}]}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"GiveSymbol", "[", 
           RowBox[{"Christoffel", ",", "cd1"}], "]"}], "[", 
          RowBox[{"inds", ",", 
           RowBox[{"-", "a"}]}], "]"}], 
         RowBox[{
          RowBox[{"frame", "[", 
           RowBox[{"ManifoldOfCovD", "@", "cd1"}], "]"}], "[", "a", "]"}]}]}],
        "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"ConnectionForm", "[", "cd1_", "]"}], "[", "inds__", "]"}], ":>", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", "=", 
          RowBox[{"DummyIn", "@", 
           RowBox[{"First", "@", 
            RowBox[{"VBundlesOfCovD", "@", "cd1"}]}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"GiveSymbol", "[", 
           RowBox[{"AChristoffel", ",", "cd1"}], "]"}], "[", 
          RowBox[{"inds", ",", 
           RowBox[{"-", "a"}]}], "]"}], 
         RowBox[{
          RowBox[{"frame", "[", 
           RowBox[{"ManifoldOfCovD", "@", "cd1"}], "]"}], "[", "a", "]"}]}]}],
        "]"}]}]}], "}"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.593153213146277*^9, 3.5931532250931873`*^9}, {
   3.593153278138609*^9, 3.593153278538636*^9}, 3.593153580449086*^9, {
   3.5931536609712877`*^9, 3.593153713842132*^9}, {3.593153895539278*^9, 
   3.593153933421541*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["3.3 Curvature forms ", "Subsubsection",
 CellChangeTimes->{{3.5897236526430187`*^9, 3.589723663299118*^9}}],

Cell["Now for the curvature form:", "Text",
 CellChangeTimes->{{3.589885614741473*^9, 3.5898856192130423`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "[", 
    RowBox[{"CurvatureForm", "[", 
     RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"CurvatureForm", "[", 
     RowBox[{"_", ",", 
      RowBox[{"vb_", "?", "VBundleQ"}]}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{"vb", ",", 
     RowBox[{"-", "vb"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CurvatureForm", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"CurvatureForm", "[", 
      RowBox[{"_", ",", "_"}], "]"}], ",", "Wedge"}], "]"}], "=", "2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SymmetryGroupOfTensor", "[", 
     RowBox[{"CurvatureForm", "[", 
      RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", 
    RowBox[{"StrongGenSet", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dagger", "[", 
    RowBox[{"CurvatureForm", "[", 
     RowBox[{"cd_", ",", "vb_"}], "]"}], "]"}], "^:=", 
   RowBox[{"CurvatureForm", "[", 
    RowBox[{"cd", ",", 
     RowBox[{"Dagger", "@", "vb"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"CurvatureForm", "[", 
     RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<Curvature 2-form\>\"", ",", "\"\<\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"CurvatureForm", "[", 
     RowBox[{"cd_", ",", "_"}], "]"}], "]"}], "^:=", 
   RowBox[{"DependenciesOfCovD", "[", "cd", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HostsOf", "[", 
     RowBox[{"CurvatureForm", "[", 
      RowBox[{"cd_", ",", "vb_"}], "]"}], "]"}], "^:=", 
    RowBox[{"Union", "@@", 
     RowBox[{"HostsOf", "/@", 
      RowBox[{"{", 
       RowBox[{"cd", ",", "vb"}], "}"}]}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Should", " ", "we", " ", "put", " ", 
    RowBox[{"Union", "@@", 
     RowBox[{"HostsOf", "/@", 
      RowBox[{"{", 
       RowBox[{"cd", ",", "vb"}], "}"}]}]}], " ", 
    RowBox[{"here", "?", " ", "Yes"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TensorID", "[", 
     RowBox[{"CurvatureForm", "[", 
      RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", "CurvatureForm", "]"}], "^=", "\"\<F\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"CurvatureForm", "[", 
     RowBox[{"cd_", ",", "_"}], "]"}], "]"}], "^:=", 
   RowBox[{
    RowBox[{"PrintAs", "[", "CurvatureForm", "]"}], "<>", "\"\<[\>\"", "<>", 
    RowBox[{"Last", "@", 
     RowBox[{"SymbolOfCovD", "[", "cd", "]"}]}], "<>", "\"\<]\>\""}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5896234684581623`*^9, 3.589623541232409*^9}, {
  3.589623574605853*^9, 3.589623698974785*^9}, {3.589623800533996*^9, 
  3.5896238454474163`*^9}, {3.589736526566003*^9, 3.58973653922095*^9}}],

Cell["Case of a connection in the frame bundle (RiemannForm)", "Text",
 CellChangeTimes->{{3.589736546437971*^9, 3.589736586440946*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "[", 
    RowBox[{"RiemannForm", "[", "_", "]"}], "]"}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"RiemannForm", "[", 
     RowBox[{"cd_", "?", "CovDQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tangent", "@", 
      RowBox[{"ManifoldOfCovD", "@", "cd"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Tangent", "@", 
       RowBox[{"ManifoldOfCovD", "@", "cd"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RiemannForm", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"RiemannForm", "[", "_", "]"}], ",", "Wedge"}], "]"}], "=", 
   "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SymmetryGroupOfTensor", "[", 
     RowBox[{"RiemannForm", "[", "_", "]"}], "]"}], "^=", 
    RowBox[{"StrongGenSet", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dagger", "[", 
    RowBox[{"RiemannForm", "[", "cd_", "]"}], "]"}], "^:=", 
   RowBox[{"RiemannForm", "[", "cd", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"RiemannForm", "[", "_", "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<Curvature 2-form in the frame bundle\>\"", ",", "\"\<\>\""}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"RiemannForm", "[", "cd_", "]"}], "]"}], "^:=", 
   RowBox[{"DependenciesOfCovD", "[", "cd", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HostsOf", "[", 
     RowBox[{"RiemannForm", "[", "cd_", "]"}], "]"}], "^:=", 
    RowBox[{"Union", "@@", 
     RowBox[{"HostsOf", "/@", 
      RowBox[{"{", "cd", "}"}]}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Should", " ", "we", " ", "put", " ", 
    RowBox[{"Union", "@@", 
     RowBox[{"HostsOf", "/@", 
      RowBox[{"{", 
       RowBox[{"cd", ",", "vb"}], "}"}]}]}], " ", 
    RowBox[{"here", "?", " ", "Yes"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TensorID", "[", 
     RowBox[{"RiemannForm", "[", "_", "]"}], "]"}], "^=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", "RiemannForm", "]"}], "^=", "\"\<R\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"RiemannForm", "[", "cd_", "]"}], "]"}], "^:=", 
   RowBox[{
    RowBox[{"PrintAs", "[", "RiemannForm", "]"}], "<>", "\"\<[\>\"", "<>", 
    RowBox[{"Last", "@", 
     RowBox[{"SymbolOfCovD", "[", "cd", "]"}]}], "<>", "\"\<]\>\""}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5896234684581623`*^9, 3.589623541232409*^9}, {
  3.589623574605853*^9, 3.589623698974785*^9}, {3.589623800533996*^9, 
  3.5896238454474163`*^9}, {3.589736573667643*^9, 3.589736577259015*^9}, {
  3.5897366260241756`*^9, 3.5897366739331207`*^9}, {3.589736759217723*^9, 
  3.589736961458108*^9}, {3.592115293364396*^9, 3.592115298806422*^9}}],

Cell["\<\
Automatic replacement of the curvature form if the covariant derivative \
corresponds to a covariant derivative defined in the tangent bundle.\
\>", "Text",
 CellChangeTimes->{{3.589737386876567*^9, 3.589737430689166*^9}, 
   3.589737477140253*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CurvatureForm", "[", 
    RowBox[{
     RowBox[{"cd_", "?", "CovDQ"}], ",", "vbundle_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"RiemannForm", "[", "cd", "]"}], "/;", 
    RowBox[{"vbundle", "===", 
     RowBox[{"Tangent", "@", 
      RowBox[{"ManifoldOfCovD", "@", "cd"}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RiemannForm", "[", 
    RowBox[{"cd_", ",", "vbundle_"}], "]"}], ":=", 
   RowBox[{"RiemannForm", "[", "cd", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5897374799212523`*^9, 3.589737536854355*^9}, {
  3.5897375825220203`*^9, 3.5897376079312887`*^9}, {3.590487863366686*^9, 
  3.5904878933761253`*^9}}],

Cell["\<\
Transformation of the Curvature form into the curvature tensor plus co-frame. \
Check conventions.\
\>", "Text",
 CellChangeTimes->{{3.593093272531743*^9, 3.5930933021304817`*^9}, {
  3.593162239735594*^9, 3.593162245727285*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CurvatureFormToTensor", "[", 
   RowBox[{"expr_", ",", 
    RowBox[{"frame", ":", 
     RowBox[{"(", 
      RowBox[{"Coframe", "|", "dx"}], ")"}]}]}], "]"}], ":=", 
  RowBox[{"expr", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"HoldPattern", "@", 
       RowBox[{
        RowBox[{"CurvatureForm", "[", 
         RowBox[{"cd1_", ",", 
          RowBox[{"vbundle1_", "?", "VBundleQ"}]}], "]"}], "[", "inds__", 
        "]"}]}], ":>", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"DummyIn", "@", 
            RowBox[{"First", "@", 
             RowBox[{"VBundlesOfCovD", "@", "cd1"}]}]}]}], ",", 
          RowBox[{"b", "=", 
           RowBox[{"DummyIn", "@", 
            RowBox[{"First", "@", 
             RowBox[{"VBundlesOfCovD", "@", "cd1"}]}]}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"1", "/", "2"}], 
         RowBox[{
          RowBox[{"GiveSymbol", "[", 
           RowBox[{"FRiemann", ",", "cd1"}], "]"}], "[", 
          RowBox[{
           RowBox[{"-", "a"}], ",", 
           RowBox[{"-", "b"}], ",", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"Reverse", "@", 
             RowBox[{"List", "@", "inds"}]}]}]}], "]"}], 
         RowBox[{"Wedge", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"frame", "[", 
             RowBox[{"ManifoldOfCovD", "@", "cd1"}], "]"}], "[", "a", "]"}], 
           ",", 
           RowBox[{
            RowBox[{"frame", "[", 
             RowBox[{"ManifoldOfCovD", "@", "cd1"}], "]"}], "[", "b", "]"}]}],
           "]"}]}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"RiemannForm", "[", "cd1_", "]"}], "[", "inds__", "]"}], ":>", 
      
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"DummyIn", "@", 
            RowBox[{"First", "@", 
             RowBox[{"VBundlesOfCovD", "@", "cd1"}]}]}]}], ",", 
          RowBox[{"b", "=", 
           RowBox[{"DummyIn", "@", 
            RowBox[{"First", "@", 
             RowBox[{"VBundlesOfCovD", "@", "cd1"}]}]}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"-", "$RiemannSign"}], " ", 
         RowBox[{"1", "/", "2"}], 
         RowBox[{
          RowBox[{"GiveSymbol", "[", 
           RowBox[{"Riemann", ",", "cd1"}], "]"}], "[", 
          RowBox[{
           RowBox[{"-", "a"}], ",", 
           RowBox[{"-", "b"}], ",", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"Reverse", "@", 
             RowBox[{"List", "@", "inds"}]}]}]}], "]"}], 
         RowBox[{"Wedge", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"frame", "[", 
             RowBox[{"ManifoldOfCovD", "@", "cd1"}], "]"}], "[", "a", "]"}], 
           ",", 
           RowBox[{
            RowBox[{"frame", "[", 
             RowBox[{"ManifoldOfCovD", "@", "cd1"}], "]"}], "[", "b", "]"}]}],
           "]"}]}]}], "]"}]}]}], "}"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.593092167005352*^9, 3.593092200105712*^9}, {
   3.593092329047698*^9, 3.593092369532001*^9}, {3.593092430494499*^9, 
   3.593092443800976*^9}, {3.593092477865139*^9, 3.593092539075501*^9}, {
   3.593092664385372*^9, 3.593092686894741*^9}, {3.5930927337451897`*^9, 
   3.593092738995508*^9}, {3.5930931433031588`*^9, 3.593093228254393*^9}, {
   3.5930934835708437`*^9, 3.5930935275217323`*^9}, {3.593151411225621*^9, 
   3.593151413854979*^9}, 3.593151581487352*^9, {3.593151742634767*^9, 
   3.5931517582864857`*^9}, {3.5931519729266233`*^9, 3.593152015349186*^9}, {
   3.593152185717474*^9, 3.593152194713829*^9}, 3.5931548415575237`*^9, {
   3.5931549116998167`*^9, 3.593154922561112*^9}, 3.593155205214283*^9, {
   3.59315537046563*^9, 3.593155385056322*^9}, {3.593155611849353*^9, 
   3.593155615058058*^9}, {3.5931611626466208`*^9, 3.593161184544445*^9}, 
   3.593161284270794*^9, {3.59316217002419*^9, 3.59316217559352*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["3.4 The torsion 2-form", "Subsubsection",
 CellChangeTimes->{{3.5897362731261797`*^9, 3.589736289583345*^9}}],

Cell["\<\
The torsion 2-form (only for covariant derivatives on the tangent bundle)\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "[", 
    RowBox[{"TorsionForm", "[", "_", "]"}], "]"}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"TorsionForm", "[", "cd_", "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{"Tangent", "@", 
     RowBox[{"ManifoldOfCovD", "@", "cd"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TorsionForm", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"TorsionForm", "[", "_", "]"}], ",", "Wedge"}], "]"}], "=", 
   "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SymmetryGroupOfTensor", "[", 
     RowBox[{"TorsionForm", "[", "_", "]"}], "]"}], "^=", 
    RowBox[{"StrongGenSet", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dagger", "[", 
   RowBox[{"TorsionForm", "[", "cd_", "]"}], "]"}], "^:=", 
  RowBox[{"TorsionForm", "[", "cd", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"TorsionForm", "[", "_", "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<Torsion 2-form\>\"", ",", "\"\<\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"TorsionForm", "[", "cd_", "]"}], "]"}], "^:=", 
   RowBox[{"DependenciesOfCovD", "[", "cd", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HostsOf", "[", 
     RowBox[{"TorsionForm", "[", "cd_", "]"}], "]"}], "^:=", 
    RowBox[{"HostsOf", "@", "cd"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Should", " ", "we", " ", "put", " ", 
    RowBox[{"HostsOf", "@", "cd"}], " ", 
    RowBox[{"here", "?", " ", "OK"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorID", "[", 
    RowBox[{"TorsionForm", "[", "_", "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589623973680002*^9, 3.589623975760128*^9}, {
  3.5896240189284697`*^9, 3.58962407695072*^9}, {3.5896241393062477`*^9, 
  3.589624156034116*^9}, {3.589624195660913*^9, 3.589624197029934*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", "TorsionForm", "]"}], "^=", 
   "\"\<\[GothicCapitalT]\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"TorsionForm", "[", "cd_", "]"}], "]"}], "^:=", 
   RowBox[{
    RowBox[{"PrintAs", "[", "TorsionForm", "]"}], "<>", "\"\<[\>\"", "<>", 
    RowBox[{"Last", "@", 
     RowBox[{"SymbolOfCovD", "[", "cd", "]"}]}], "<>", "\"\<]\>\""}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5896241653133574`*^9, 3.5896241813588867`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["3.5 Change of exterior covariant derivative", "Subsubsection",
 CellChangeTimes->{{3.5897363292891493`*^9, 3.5897363525311613`*^9}}],

Cell["\<\
We will use a convention that there should be a correspondence (TODO: check \
conventions)
  AChr1[CD1,CD2,VB][A,-B] \[Rule] AChristoffel[CD1,CD2][A,-\[Mu],-B] \
\[Theta][\[Mu]]
  FRiem2[CD,VB][A,-B] \[Rule] 1/2 FRiemann[CD][-\[Mu],-\[Nu],-B,A] \[Theta][\
\[Mu]]\[Wedge]\[Theta][\[Nu]]          (notice different ordering of A,B on \
two sides)
  Torsion2[CD][\[Alpha]] \[Rule] 1/2 Torsion[CD][\[Alpha],-\[Beta],-\[Gamma]] \
\[Theta][\[Beta]]\[Wedge]\[Theta][\[Gamma]]
We\[CloseCurlyQuote]ll want to be able to
  1) Change from diff[form,CD1] to diff[form,CD2], introducing \
AChr1[CD1,CD2,...] as needed
  2) Compute diff[diff[form,CD],CD], introducing FRiem2[CD,...] as needed
  3) Change from FRiem2[CD1,VB] to FRiem2[CD2,VB], introducing \
diff[AChr1[CD...]] and Wedge[AChr1,AChr1]\
\>", "Text"],

Cell[TextData[{
 "1. Change from diff[form,CD1] to diff[form,CD2]. The formula is:\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["d", "CD1"], 
     SuperscriptBox["v", "A"]}], "-", 
    RowBox[{
     SuperscriptBox["d", "CD2"], 
     SuperscriptBox["v", "A"]}]}], TraditionalForm]]],
 "  = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox[
     RowBox[{"A", "[", 
      RowBox[{"CD1", ",", "CD2", ",", "VB"}], "]"}], 
     RowBox[{"   ", "B"}], "A"], "\[Wedge]", 
    SuperscriptBox["v", "B"]}], TraditionalForm]]],
 "     (where VB is the VBundle of A; plus sign for +VB, minus sign for -VB)\n\
TODO: What about densities? Alfonso: I\[CloseCurlyQuote]m not sure whether \
the distinction \[OpenCurlyDoubleQuote]true tensor\[CloseCurlyDoubleQuote] / \
\[OpenCurlyDoubleQuote]tensor density\[CloseCurlyDoubleQuote] holds in this \
context."
}], "Text",
 CellChangeTimes->{{3.5896434753074627`*^9, 3.5896435319668217`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ChangeExtCovDiff"}]], "Input",
 CellChangeTimes->{3.589625041417173*^9}],

Cell[BoxData[
 StyleBox["\<\"ChangeExtCovDiff[expr,cd1,cd2] expresses the exterior \
covariant derivative taken with respect to the connection defined by the \
covariant derivative cd1 in terms of the exterior covariant derivative taken \
with respect to the connection defined by the covariant derivative cd2\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.590731728355556*^9},
 CellTags->"Info3590738928-4748043"]
}, Open  ]],

Cell["\<\
Alfonso: ConnectionForm with two covariant derivatives as arguments \
represents the difference between two connection forms which carry only a \
covariant derivative in the argument.\
\>", "Text",
 CellChangeTimes->{{3.590394626989003*^9, 3.5903946303109837`*^9}, {
  3.5903955379345713`*^9, 3.590395595234185*^9}, {3.5903956317152863`*^9, 
  3.590395649718652*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"cd1_", ",", "cd2_", ",", "vbundle_"}], "]"}], "[", "inds__", 
    "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"cd1", ",", "vbundle"}], "]"}], "[", "inds", "]"}], "-", 
    RowBox[{
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"cd2", ",", "vbundle"}], "]"}], "[", "inds", "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589905417132166*^9, 3.589905465311397*^9}, {
  3.589907388497623*^9, 3.5899074099944696`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ChangeExtCovDiff", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{"cd_", "?", "CovDQ"}], ",", "cd_"}], "]"}], ":=", "expr"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ChangeExtCovDiff", "[", 
     RowBox[{"expr_", ",", 
      RowBox[{"cd1_", "?", "CovDQ"}], ",", 
      RowBox[{"cd2_:", "PD"}]}], "]"}], ":=", 
    RowBox[{"expr", "/.", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{"ExtCovDiff", "[", 
        RowBox[{"expr1_", ",", "cd1"}], "]"}], "]"}], "\[RuleDelayed]", 
      "\[IndentingNewLine]", 
      RowBox[{"makeChangeExtD", "[", 
       RowBox[{
        RowBox[{"ChangeExtCovDiff", "[", 
         RowBox[{"expr1", ",", "cd1", ",", "cd2"}], "]"}], ",", "cd1", ",", 
        "cd2"}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeExtCovDiff", "[", 
    RowBox[{"expr_", ",", "list_List", ",", 
     RowBox[{"covd2_:", "PD"}]}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ChangeExtCovDiff", "[", 
       RowBox[{"#1", ",", "#2", ",", "covd2"}], "]"}], "&"}], ",", "expr", 
     ",", "list"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeExtCovDiff", "[", 
    RowBox[{"expr_", ",", "x_", ",", 
     RowBox[{"_", ":", "PD"}]}], "]"}], ":=", 
   RowBox[{"Throw", "@", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"ChangeExtD", "::", "unknown"}], ",", 
      "\"\<covariant derivative\>\"", ",", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeExtCovDiff", "[", "expr_", "]"}], ":=", 
   RowBox[{"ChangeExtCovDiff", "[", 
    RowBox[{"expr", ",", "$CovDs"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5896253819972878`*^9, 3.5896254548417997`*^9}, {
  3.58962551193891*^9, 3.5896255150765333`*^9}, {3.5896257116000147`*^9, 
  3.5896257418803377`*^9}, {3.589637913547576*^9, 3.589637914027479*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"makeChangeExtD", "[", 
    RowBox[{"expr_", ",", "cd1_", ",", "cd2_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vbs", "=", 
       RowBox[{"Apply", "[", 
        RowBox[{"Union", ",", 
         RowBox[{"VBundlesOfCovD", "/@", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"cd1", ",", "cd2"}], "}"}], ",", "PD"}], "]"}]}]}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"ExtCovDiff", "[", 
        RowBox[{"expr", ",", "cd2"}], "]"}], "+", 
       RowBox[{"Plus", "@@", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{"addAChr1", "[", 
           RowBox[{"expr", ",", "cd1", ",", "cd2"}], "]"}], ",", 
          RowBox[{"xAct`xTensor`Private`selecton", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"FindFreeIndices", "@", "expr"}], ",", "AIndexQ"}], 
             "]"}], ",", "vbs"}], "]"}]}], "]"}]}]}], "//", "ReduceAChr1"}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589625902396124*^9, 3.589625905379694*^9}, {
  3.589809210529146*^9, 3.589809210984476*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"addAChr1", "[", 
    RowBox[{"expr_", ",", "cd1_", ",", "cd2_"}], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oldind_", "?", "xAct`xTensor`Private`upQ"}], ",", "dummy_"}], 
    "}"}], "]"}], ":=", 
  RowBox[{"Wedge", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"cd1", ",", "cd2", ",", 
       RowBox[{"VBundleOfIndex", "@", "oldind"}]}], "]"}], "[", 
     RowBox[{"oldind", ",", 
      RowBox[{"-", "dummy"}]}], "]"}], ",", 
    RowBox[{"ReplaceIndex", "[", 
     RowBox[{"expr", ",", 
      RowBox[{"oldind", "\[Rule]", "dummy"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addAChr1", "[", 
    RowBox[{"expr_", ",", "cd1_", ",", "cd2_"}], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oldind_", "?", "xAct`xTensor`Private`downQ"}], ",", "dummy_"}], 
    "}"}], "]"}], ":=", 
  RowBox[{"-", 
   RowBox[{"Wedge", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConnectionForm", "[", 
       RowBox[{"cd1", ",", "cd2", ",", 
        RowBox[{"VBundleOfIndex", "@", "oldind"}]}], "]"}], "[", 
      RowBox[{"dummy", ",", "oldind"}], "]"}], ",", 
     RowBox[{"ReplaceIndex", "[", 
      RowBox[{"expr", ",", 
       RowBox[{"oldind", "\[Rule]", 
        RowBox[{"-", "dummy"}]}]}], "]"}]}], "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589626886099025*^9, 3.5896269082852163`*^9}}],

Cell[TextData[{
 "Note that\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["d", "CD1"], 
     SuperscriptBox["v", "A"]}], "-", 
    RowBox[{
     SuperscriptBox["d", "CD2"], 
     SuperscriptBox["v", "A"]}]}], TraditionalForm]]],
 "  = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["d", "CD1"], 
      SuperscriptBox["v", "A"]}], "-", 
     RowBox[{"d", " ", 
      SuperscriptBox["v", "A"]}], "+", 
     RowBox[{"d", " ", 
      SuperscriptBox["v", "A"]}], "-", " ", 
     RowBox[{
      SuperscriptBox["d", "CD2"], 
      SuperscriptBox["v", "A"]}]}], "=", 
    RowBox[{
     FormBox[
      RowBox[{
       SubsuperscriptBox[
        RowBox[{"A", "[", 
         RowBox[{"CD1", ",", "PD", ",", "VB"}], "]"}], 
        RowBox[{"   ", "B"}], "A"], "\[Wedge]", 
       SuperscriptBox["v", "B"]}],
      TraditionalForm], "+", 
     FormBox[
      RowBox[{
       SubsuperscriptBox[
        RowBox[{"A", "[", 
         RowBox[{"PD", ",", "CD2", ",", "VB"}], "]"}], 
        RowBox[{"   ", "B"}], "A"], "\[Wedge]", 
       SuperscriptBox["v", "B"]}],
      TraditionalForm]}]}], TraditionalForm]]],
 "\nand so\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox[
     RowBox[{"A", "[", 
      RowBox[{"CD1", ",", "CD2", ",", "VB"}], "]"}], 
     RowBox[{"   ", "B"}], "A"], "=", 
    RowBox[{
     SubsuperscriptBox[
      RowBox[{"A", "[", 
       RowBox[{"CD1", ",", "PD", ",", "VB"}], "]"}], 
      RowBox[{"   ", "B"}], "A"], "+", 
     SubsuperscriptBox[
      RowBox[{"A", "[", 
       RowBox[{"PD", ",", "CD2", ",", "VB"}], "]"}], 
      RowBox[{"   ", "B"}], "A"]}]}], TraditionalForm]]],
 ".\nNow ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    RowBox[{"A", "[", 
     RowBox[{"CD", ",", "PD", ",", "VB"}], "]"}], 
    RowBox[{"   ", "B"}], "A"], TraditionalForm]]],
 "=0  iff FreeQ[VBundlesOfCovD[CD],VB]. This allows the simplification of \
A[CD1,CD2,VB] when only one of {CD1,CD2} has VB in VBundlesOfCovD."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReduceAChr1", "[", "expr_", "]"}], ":=", 
  RowBox[{"expr", "//.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ConnectionForm", "[", 
        RowBox[{"cd1_", ",", "cd2_", ",", "vb_"}], "]"}], "[", 
       RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
      RowBox[{
       RowBox[{
        RowBox[{"ConnectionForm", "[", 
         RowBox[{"cd1", ",", "PD", ",", "vb"}], "]"}], "[", 
        RowBox[{"a", ",", "b"}], "]"}], "/;", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cd2", "=!=", "PD"}], "&&", 
         RowBox[{"FreeQ", "[", 
          RowBox[{
           RowBox[{"VBundlesOfCovD", "@", "cd2"}], ",", "vb"}], "]"}]}], 
        ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"ConnectionForm", "[", 
        RowBox[{"cd1_", ",", "cd2_", ",", "vb_"}], "]"}], "[", 
       RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
      RowBox[{
       RowBox[{
        RowBox[{"ConnectionForm", "[", 
         RowBox[{"PD", ",", "cd2", ",", "vb"}], "]"}], "[", 
        RowBox[{"a", ",", "b"}], "]"}], "/;", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cd1", "=!=", "PD"}], "&&", 
         RowBox[{"FreeQ", "[", 
          RowBox[{
           RowBox[{"VBundlesOfCovD", "@", "cd1"}], ",", "vb"}], "]"}]}], 
        ")"}]}]}]}], "}"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589626932358426*^9, 3.589626979327684*^9}}],

Cell[TextData[{
 "2. Compute diff[diff[form,CD],CD], introducing FRiem2[CD,...] as needed. \
The formula:\n",
 "  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["d", "\[Del]"], 
     SuperscriptBox["d", "\[Del]"], 
     SuperscriptBox["v", "A"]}], " ", "=", " ", 
    RowBox[{
     SubsuperscriptBox[
      RowBox[{"F", "[", 
       RowBox[{"\[Del]", 
        RowBox[{",", "VB"}]}], "]"}], 
      RowBox[{"   ", "B"}], "A"], "\[Wedge]", 
     SuperscriptBox["v", "B"]}]}], TraditionalForm]]],
 "             (where VB is the VBundle of A; plus sign for +VB, minus sign \
for -VB)"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExtCovDiff", "[", 
   RowBox[{
    RowBox[{"ExtCovDiff", "[", 
     RowBox[{"expr_", ",", "PD"}], "]"}], ",", "PD"}], "]"}], ":=", 
  "0"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589626764108502*^9, 3.5896267779643*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtCovDiff", "[", 
    RowBox[{
     RowBox[{"ExtCovDiff", "[", 
      RowBox[{"expr_", ",", "cd_"}], "]"}], ",", "cd_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Plus", "@@", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"addFRiem2", "[", 
       RowBox[{"expr", ",", "cd"}], "]"}], ",", 
      RowBox[{"xAct`xTensor`Private`selecton", "[", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"FindFreeIndices", "@", "expr"}], ",", "AIndexQ"}], "]"}], 
        ",", 
        RowBox[{"VBundlesOfCovD", "@", "cd"}]}], "]"}]}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589626801957642*^9, 3.589626834749031*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"addFRiem2", "[", 
      RowBox[{"expr_", ",", "cd_"}], "]"}], "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"oldind_", "?", "xAct`xTensor`Private`upQ"}], ",", "dummy_"}], 
      "}"}], "]"}], ":=", 
    RowBox[{"Wedge", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"CurvatureForm", "[", 
        RowBox[{"cd", ",", 
         RowBox[{"VBundleOfIndex", "[", "oldind", "]"}]}], "]"}], "[", 
       RowBox[{"oldind", ",", 
        RowBox[{"-", "dummy"}]}], "]"}], ",", 
      RowBox[{"ReplaceIndex", "[", 
       RowBox[{"expr", ",", 
        RowBox[{"oldind", "\[Rule]", "dummy"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addFRiem2", "[", 
    RowBox[{"expr_", ",", "cd_"}], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oldind_", "?", "xAct`xTensor`Private`downQ"}], ",", "dummy_"}], 
    "}"}], "]"}], ":=", 
  RowBox[{"-", 
   RowBox[{"Wedge", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CurvatureForm", "[", 
       RowBox[{"cd", ",", 
        RowBox[{"VBundleOfIndex", "[", "oldind", "]"}]}], "]"}], "[", 
      RowBox[{"dummy", ",", "oldind"}], "]"}], ",", 
     RowBox[{"ReplaceIndex", "[", 
      RowBox[{"expr", ",", 
       RowBox[{"oldind", "\[Rule]", 
        RowBox[{"-", "dummy"}]}]}], "]"}]}], "]"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589627118374625*^9, 3.589627164499515*^9}}],

Cell["Just in case, add the following definitions:", "Text",
 CellChangeTimes->{3.589739245138673*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CurvatureForm", "[", 
    RowBox[{"PD", ",", "_"}], "]"}], ":=", "Zero"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589627284453588*^9, 3.58962729568544*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RiemannForm", "[", "PD", "]"}], ":=", "Zero"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589627284453588*^9, 3.58962729568544*^9}, {
  3.589739253984519*^9, 3.589739259770854*^9}}],

Cell[TextData[{
 "3. Change from FRiem2[CD1,VB] to FRiem2[CD2,VB],  introducing \
diff[AChr1[CD...]] and Wedge[AChr1,AChr1]. The formula:\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox[
     RowBox[{"F", "[", 
      RowBox[{"CD2", ",", "VB"}], "]"}], 
     RowBox[{"   ", "B"}], "A"], "=", 
    RowBox[{
     SubsuperscriptBox[
      RowBox[{"F", "[", 
       RowBox[{"CD1", ",", "VB"}], "]"}], 
      RowBox[{"   ", "B"}], "A"], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["d", "CD1"], 
      SubsuperscriptBox[
       RowBox[{"A", "[", 
        RowBox[{"CD2", ",", "CD1", ",", "VB"}], "]"}], 
       RowBox[{"    ", "B"}], "A"]}], "+", 
     RowBox[{
      SubsuperscriptBox[
       RowBox[{"A", "[", 
        RowBox[{"CD2", ",", "CD1", ",", "VB"}], "]"}], 
       RowBox[{"    ", "C"}], "A"], "\[Wedge]", 
      SubsuperscriptBox[
       RowBox[{"A", "[", 
        RowBox[{"CD2", ",", "CD1", ",", "VB"}], "]"}], 
       RowBox[{"    ", "B"}], "C"]}]}]}], TraditionalForm]]]
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ChangeCurvatureForm", "[", 
    RowBox[{"expr_", ",", "cd_", ",", "cd_"}], "]"}], ":=", "expr"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeCurvatureForm", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{"cd1_", "?", "CurvatureQ"}], ",", 
     RowBox[{"cd2_:", "PD"}]}], "]"}], ":=", 
   RowBox[{"ReduceAChr1", "[", 
    RowBox[{"expr", "/.", 
     RowBox[{"changeCurvatureFormRules", "[", 
      RowBox[{"cd1", ",", "cd2"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeCurvatureForm", "[", 
    RowBox[{"expr_", ",", "list_List", ",", 
     RowBox[{"cd2_:", "PD"}]}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ChangeCurvatureForm", "[", 
       RowBox[{"#1", ",", "#2", ",", "cd2"}], "]"}], "&"}], ",", "expr", ",", 
     "list"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeCurvatureForm", "[", 
    RowBox[{"expr_", ",", "_", ",", 
     RowBox[{"_", ":", "PD"}]}], "]"}], ":=", "expr"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeCurvatureForm", "[", "expr_", "]"}], ":=", 
   RowBox[{"ChangeCurvatureForm", "[", 
    RowBox[{"expr", ",", "$CovDs"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"changeCurvatureFormRules", "[", 
    RowBox[{"cd2_", ",", "cd1_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"CurvatureForm", "[", 
        RowBox[{"cd2", ",", 
         RowBox[{"vb_", "?", "VBundleQ"}]}], "]"}], "[", 
       RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
      "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"DummyIn", "@", "vb"}]}], ",", 
          RowBox[{"A1", "=", 
           RowBox[{"ConnectionForm", "[", 
            RowBox[{"cd2", ",", "cd1", ",", "vb"}], "]"}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"CurvatureForm", "[", 
           RowBox[{"cd1", ",", "vb"}], "]"}], "[", 
          RowBox[{"a", ",", "b"}], "]"}], "+", 
         RowBox[{"ExtCovDiff", "[", 
          RowBox[{
           RowBox[{"A1", "[", 
            RowBox[{"a", ",", "b"}], "]"}], ",", "cd1"}], "]"}], "+", 
         RowBox[{"Wedge", "[", 
          RowBox[{
           RowBox[{"A1", "[", 
            RowBox[{"a", ",", 
             RowBox[{"-", "c"}]}], "]"}], ",", 
           RowBox[{"A1", "[", 
            RowBox[{"c", ",", "b"}], "]"}]}], "]"}]}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"RiemannForm", "[", "cd2", "]"}], "[", 
       RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
      "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"DummyIn", "@", 
            RowBox[{"Tangent", "@", 
             RowBox[{"ManifoldOfCovD", "@", "cd2"}]}]}]}], ",", 
          RowBox[{"A1", "=", 
           RowBox[{"ChristoffelForm", "[", 
            RowBox[{"cd2", ",", "cd1"}], "]"}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"RiemannForm", "[", "cd1", "]"}], "[", 
          RowBox[{"a", ",", "b"}], "]"}], "+", 
         RowBox[{"ExtCovDiff", "[", 
          RowBox[{
           RowBox[{"A1", "[", 
            RowBox[{"a", ",", "b"}], "]"}], ",", "cd1"}], "]"}], "+", 
         RowBox[{"Wedge", "[", 
          RowBox[{
           RowBox[{"A1", "[", 
            RowBox[{"a", ",", 
             RowBox[{"-", "c"}]}], "]"}], ",", 
           RowBox[{"A1", "[", 
            RowBox[{"c", ",", "b"}], "]"}]}], "]"}]}]}], "]"}]}]}], "}"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589627621477351*^9, 3.589627657099546*^9}, {
  3.589627689821265*^9, 3.589627772125107*^9}, {3.589738647629312*^9, 
  3.589738744962947*^9}, {3.589739035954362*^9, 3.589739041396998*^9}}],

Cell[TextData[{
 "The exterior derivative does not depend on any covariant derivative. ",
 StyleBox["This disrupts FormVarD. Check",
  FontWeight->"Bold"],
 " "
}], "Text",
 CellChangeTimes->{{3.5896437153743773`*^9, 3.589643745147274*^9}, {
  3.5911788187070007`*^9, 3.59117884857662*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtDiff", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{"cd_", "?", "CovDQ"}]}], "]"}], ":=", 
   RowBox[{"ExtDiff", "[", "expr", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.589642911832127*^9, 3.589642954844468*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["3.6 ExpandExtDiff", "Subsubsection",
 CellChangeTimes->{{3.589891926059636*^9, 3.58989193785913*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ExpandExtDiff"}]], "Input",
 CellChangeTimes->{{3.590396392152233*^9, 3.5903963970541983`*^9}, {
  3.590729763137744*^9, 3.590729797345978*^9}, {3.590729841208103*^9, 
  3.590729890615671*^9}}],

Cell[BoxData[
 StyleBox["\<\"ExpandExtDiff[expr,covd], expands all the instances of the \
ExtDiff using the Cartan structure equations for the connection arising from \
covd. In this way it is possible to expand the exterior derivative of a \
co-frame, a torsion 2-form and the curvature 2-form. If covd is the \
Levi-Civita connection of a metric, then the exterior derivatives of that \
metric and its volume element are expanded too.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.590729894311886*^9},
 CellTags->"Info3590737094-4074131"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Exterior", " ", "derivative", " ", "when", " ", "covd", " ", "is", " ", 
    "PD"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ExpandExtDiff", "[", 
     RowBox[{"expr_", ",", "PD", ",", 
      RowBox[{"mani_", "?", "ManifoldQ"}]}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{"expr", "/.", 
      RowBox[{
       RowBox[{"ExtDiff", "@", "expr1_"}], ":>", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", "=", 
            RowBox[{"DummyIn", "@", 
             RowBox[{"Tangent", "@", "mani"}]}]}], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"dx", "[", "mani", "]"}], "[", "a", "]"}], 
           RowBox[{
            RowBox[{"PD", "[", 
             RowBox[{"-", "a"}], "]"}], "@", "expr1"}]}]}], " ", "]"}], "/;", 
        
        RowBox[{
         RowBox[{"Deg", "@", "expr1"}], "===", "0"}]}]}]}], ")"}]}], 
   ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.592158056469448*^9, 3.592158090115263*^9}, {
   3.592158172648075*^9, 3.592158201858789*^9}, {3.5921583039134493`*^9, 
   3.59215831381513*^9}, {3.592158425078869*^9, 3.592158465817266*^9}, {
   3.592158510663706*^9, 3.592158623374753*^9}, {3.592158662704172*^9, 
   3.592158668887506*^9}, {3.592158717584671*^9, 3.592158766932238*^9}, 
   3.592159392158627*^9, {3.592159550975595*^9, 3.592159773524478*^9}, {
   3.592160378896377*^9, 3.592160437731079*^9}, 3.592160477151293*^9, {
   3.592198662721889*^9, 3.5921986873402233`*^9}, 3.592200407732535*^9}],

Cell["\<\
We encode the Cartan equations in a set of rules. We also encode the action \
of the exterior derivative on a function whose arguments are scalars of a \
coordinate chart.\
\>", "Text",
 CellChangeTimes->{{3.590753516836018*^9, 3.5907535593023357`*^9}, {
  3.592136028523625*^9, 3.592136056893262*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpandExtDiff", "[", 
    RowBox[{"expr_", ",", "covd_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{"expr", "/.", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Exterior", " ", "derivative", " ", "of", " ", "the", " ", "coframe"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"HoldPattern", "[", 
         RowBox[{"ExtDiff", "@", 
          RowBox[{
           RowBox[{"Coframe", "[", "mani_", "]"}], "[", "ind_", "]"}]}], 
         "]"}], "\[RuleDelayed]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", "=", 
            RowBox[{"DummyIn", "@", 
             RowBox[{"VBundleOfIndex", "@", "ind"}]}]}], "}"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ManifoldOfCovD", "@", "covd"}], "===", "mani"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                RowBox[{"ConnectionForm", "[", 
                 RowBox[{"covd", ",", 
                  RowBox[{"VBundleOfIndex", "@", "ind"}]}], "]"}], "[", 
                RowBox[{"ind", ",", 
                 RowBox[{"-", "a"}]}], "]"}]}], "\[Wedge]", 
              RowBox[{
               RowBox[{"Coframe", "[", "mani", "]"}], "[", "a", "]"}]}], "+", 
             
             RowBox[{
              RowBox[{"TorsionForm", "[", "covd", "]"}], "[", "ind", "]"}]}], 
            ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               RowBox[{"ConnectionForm", "[", 
                RowBox[{"covd", ",", 
                 RowBox[{"VBundleOfIndex", "@", "ind"}]}], "]"}], "[", 
               RowBox[{"ind", ",", 
                RowBox[{"-", "a"}]}], "]"}]}], "\[Wedge]", 
             RowBox[{
              RowBox[{"Coframe", "[", "mani", "]"}], "[", "a", "]"}]}]}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Exterior", " ", "derivative", " ", "of", " ", "the", " ", 
         "connection"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "[", 
         RowBox[{"ExtDiff", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"connection", ":", 
              RowBox[{"(", 
               RowBox[{"ConnectionForm", "|", "ChristoffelForm"}], ")"}]}], 
             ")"}], "[", 
            RowBox[{"covd", ",", 
             RowBox[{"vbundle_:", 
              RowBox[{"Tangent", "@", 
               RowBox[{"ManifoldOfCovD", "@", "covd"}]}]}]}], "]"}], "[", 
           RowBox[{"a1_", ",", 
            RowBox[{"-", "a2_"}]}], "]"}], "]"}], "]"}], "\[RuleDelayed]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", "=", 
            RowBox[{"DummyIn", "@", 
             RowBox[{"VBundleOfIndex", "@", "a1"}]}]}], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"CurvatureForm", "[", 
             RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
            RowBox[{"a1", ",", 
             RowBox[{"-", "a2"}]}], "]"}], "-", 
           RowBox[{
            RowBox[{
             RowBox[{"connection", "[", 
              RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
             RowBox[{"a1", ",", 
              RowBox[{"-", "a"}]}], "]"}], "\[Wedge]", 
            RowBox[{
             RowBox[{"connection", "[", 
              RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
             RowBox[{"a", ",", 
              RowBox[{"-", "a2"}]}], "]"}]}]}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Exterior", " ", "derivative", " ", "of", " ", "the", " ", 
         "torsion"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "[", 
         RowBox[{"ExtDiff", "@", 
          RowBox[{
           RowBox[{"TorsionForm", "[", "covd", "]"}], "[", "ind_", "]"}]}], 
         "]"}], "\[RuleDelayed]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", "=", 
            RowBox[{"DummyIn", "@", 
             RowBox[{"VBundleOfIndex", "@", "ind"}]}]}], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Coframe", "[", 
              RowBox[{"ManifoldOfCovD", "@", "covd"}], "]"}], "[", "a", "]"}],
             "\[Wedge]", 
            RowBox[{
             RowBox[{"RiemannForm", "[", "covd", "]"}], "[", 
             RowBox[{"ind", ",", 
              RowBox[{"-", "a"}]}], "]"}]}], "-", 
           RowBox[{
            RowBox[{
             RowBox[{"ChristoffelForm", "[", "covd", "]"}], "[", 
             RowBox[{"ind", ",", 
              RowBox[{"-", "a"}]}], "]"}], "\[Wedge]", 
            RowBox[{
             RowBox[{"TorsionForm", "[", "covd", "]"}], "[", "a", "]"}]}]}]}],
          "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Exterior", " ", "derivative", " ", "of", " ", "the", " ", 
         "curvature"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "[", 
         RowBox[{"ExtDiff", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"curvature", ":", 
              RowBox[{"(", 
               RowBox[{"CurvatureForm", "|", "RiemannForm"}], ")"}]}], ")"}], 
            "[", 
            RowBox[{"covd", ",", 
             RowBox[{"vbundle_:", 
              RowBox[{"Tangent", "@", 
               RowBox[{"ManifoldOfCovD", "@", "covd"}]}]}]}], "]"}], "[", 
           RowBox[{"a1_", ",", 
            RowBox[{"-", "a2_"}]}], "]"}], "]"}], "]"}], "\[RuleDelayed]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", "=", 
            RowBox[{"DummyIn", "@", 
             RowBox[{"VBundleOfIndex", "@", "a1"}]}]}], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"ConnectionForm", "[", 
              RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
             RowBox[{"a", ",", 
              RowBox[{"-", "a2"}]}], "]"}], "\[Wedge]", 
            RowBox[{
             RowBox[{"curvature", "[", 
              RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
             RowBox[{"a1", ",", 
              RowBox[{"-", "a"}]}], "]"}]}], "-", 
           RowBox[{
            RowBox[{
             RowBox[{"curvature", "[", 
              RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
             RowBox[{"a", ",", 
              RowBox[{"-", "a2"}]}], "]"}], "\[Wedge]", 
            RowBox[{
             RowBox[{"ConnectionForm", "[", 
              RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
             RowBox[{"a1", ",", 
              RowBox[{"-", "a"}]}], "]"}]}]}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Exterior", " ", "derivative", " ", "of", " ", "the", " ", "metric", 
         " ", 
         RowBox[{"(", 
          RowBox[{"indices", " ", "downstairs"}], ")"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "[", 
         RowBox[{"ExtDiff", "[", 
          RowBox[{
           RowBox[{"metr_", "?", "MetricQ"}], "[", 
           RowBox[{
            RowBox[{"-", "a1_"}], ",", 
            RowBox[{"-", "a2_"}]}], "]"}], "]"}], "]"}], "\[RuleDelayed]", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", "=", 
             RowBox[{"DummyIn", "@", 
              RowBox[{"VBundleOfIndex", "@", "a1"}]}]}], "}"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"ChristoffelForm", "[", "covd", "]"}], "[", 
              RowBox[{"a", ",", 
               RowBox[{"-", "a1"}]}], "]"}], 
             RowBox[{
              RowBox[{"MetricOfCovD", "[", "covd", "]"}], "[", 
              RowBox[{
               RowBox[{"-", "a"}], ",", 
               RowBox[{"-", "a2"}]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{
              RowBox[{"ChristoffelForm", "[", "covd", "]"}], "[", 
              RowBox[{"a", ",", 
               RowBox[{"-", "a2"}]}], "]"}], 
             RowBox[{
              RowBox[{"MetricOfCovD", "[", "covd", "]"}], "[", 
              RowBox[{
               RowBox[{"-", "a"}], ",", 
               RowBox[{"-", "a1"}]}], "]"}]}]}]}], "]"}], "/;", 
         RowBox[{
          RowBox[{"MetricOfCovD", "[", "covd", "]"}], "===", "metr"}]}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Exterior", " ", "derivative", " ", "of", " ", "the", " ", "metric", 
         " ", 
         RowBox[{"(", 
          RowBox[{"indices", " ", "upstairs"}], ")"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "[", 
         RowBox[{"ExtDiff", "[", 
          RowBox[{
           RowBox[{"metr_", "?", "MetricQ"}], "[", 
           RowBox[{"a1_Symbol", ",", "a2_Symbol"}], "]"}], "]"}], "]"}], 
        "\[RuleDelayed]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            RowBox[{"ChristoffelForm", "[", "covd", "]"}], "[", 
            RowBox[{"a1", ",", "a2"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"ChristoffelForm", "[", "covd", "]"}], "[", 
           RowBox[{"a2", ",", "a1"}], "]"}]}], "/;", 
         RowBox[{
          RowBox[{"MetricOfCovD", "[", "covd", "]"}], "===", "metr"}]}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "Exterior", " ", "derivative", " ", "of", " ", "the", " ", "tensor", 
          " ", "form", " ", "of", " ", "volume", " ", "element"}], ",", " ", 
         RowBox[{
          RowBox[{"regarded", " ", "as", " ", "a", " ", "zero"}], "-", 
          RowBox[{"form", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"indices", " ", "downstairs"}], ")"}], ".", " ", "I"}], 
           " ", "think", " ", "that", " ", "this", " ", "formula", " ", "is", 
           " ", "dimension", " ", "independent"}]}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MetricOfCovD", "[", "covd", "]"}], "=!=", "Null"}], ",", 
         RowBox[{
          RowBox[{"ExtDiff", "[", 
           RowBox[{
            RowBox[{"epsilon", "[", 
             RowBox[{"MetricOfCovD", "[", "covd", "]"}], "]"}], "[", 
            RowBox[{"inds__", "?", "DownIndexQ"}], "]"}], "]"}], 
          "\[RuleDelayed]", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", "=", 
              RowBox[{"DummyIn", "@", 
               RowBox[{"VBundleOfMetric", "@", 
                RowBox[{"MetricOfCovD", "[", "covd", "]"}]}]}]}], "}"}], ",", 
            
            RowBox[{
             RowBox[{
              RowBox[{"ChristoffelForm", "[", "covd", "]"}], "[", 
              RowBox[{"a", ",", 
               RowBox[{"-", "a"}]}], "]"}], 
             RowBox[{
              RowBox[{"epsilon", "[", 
               RowBox[{"MetricOfCovD", "[", "covd", "]"}], "]"}], "[", "inds",
               "]"}]}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"HoldPattern", "[", 
           RowBox[{"ExtDiff", "[", 
            RowBox[{
             RowBox[{"epsilon", "[", 
              RowBox[{"MetricOfCovD", "[", "covd", "]"}], "]"}], "[", 
             "inds__", "]"}], "]"}], "]"}], "\[RuleDelayed]", 
          RowBox[{"ExtDiff", "[", 
           RowBox[{
            RowBox[{"epsilon", "[", 
             RowBox[{"MetricOfCovD", "[", "covd", "]"}], "]"}], "[", "inds", 
            "]"}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Exterior", " ", "derivative", " ", "when", " ", "covd", " ", "is", 
         " ", "the", " ", "parallel", " ", "derivative", " ", "of", " ", "a", 
         " ", "coordinate", " ", "chart"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "@", 
         RowBox[{"ExtDiff", "@", 
          RowBox[{"expr1_", "?", "ScalarQ"}]}]}], "\[RuleDelayed]", 
        RowBox[{
         RowBox[{"Inner", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"covd", "[", 
               RowBox[{"{", 
                RowBox[{"#1", ",", 
                 RowBox[{"-", 
                  RowBox[{"BasisOfCovD", "@", "covd"}]}]}], "}"}], "]"}], "@",
               "expr1"}], " ", 
             RowBox[{"ExtDiff", "@", "#2"}]}], "&"}], ",", 
           RowBox[{"CNumbersOf", "[", 
            RowBox[{
             RowBox[{"BasisOfCovD", "@", "covd"}], ",", 
             RowBox[{"VBundleOfBasis", "@", 
              RowBox[{"BasisOfCovD", "@", "covd"}]}]}], "]"}], ",", 
           RowBox[{"ScalarsOfChart", "@", 
            RowBox[{"BasisOfCovD", "@", "covd"}]}], ",", "Plus"}], "]"}], "/;", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Deg", "@", "expr1"}], "===", "0"}], "&&", 
           RowBox[{
            RowBox[{"BasisOfCovD", "@", "covd"}], "=!=", "Null"}]}], 
          ")"}]}]}]}], "}"}]}], ")"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.590396644110107*^9, 3.590396675728018*^9}, {
   3.590396770499909*^9, 3.5903968096259823`*^9}, 3.590396873679914*^9, {
   3.5903969099984827`*^9, 3.590396918718943*^9}, {3.590396950631206*^9, 
   3.590396994812729*^9}, {3.590398793140235*^9, 3.590398832209792*^9}, {
   3.590399463167356*^9, 3.5903994772457438`*^9}, {3.590399600519783*^9, 
   3.590399631156766*^9}, {3.590399737709433*^9, 3.590399858920185*^9}, {
   3.590399947993348*^9, 3.590399989392785*^9}, {3.590400040740671*^9, 
   3.590400108552515*^9}, {3.590400221801848*^9, 3.5904002547646627`*^9}, {
   3.5904003020360403`*^9, 3.590400337543182*^9}, {3.590400397011723*^9, 
   3.5904004805664597`*^9}, {3.590400532123149*^9, 3.590400649520328*^9}, {
   3.590400744945162*^9, 3.590400749200223*^9}, {3.590400794956389*^9, 
   3.590400845800846*^9}, {3.590400956013047*^9, 3.590401127361423*^9}, {
   3.5904012265581493`*^9, 3.590401240396562*^9}, {3.590401386873268*^9, 
   3.590401491267827*^9}, {3.5904016180460243`*^9, 3.590401619422092*^9}, {
   3.590401791170424*^9, 3.590401855900412*^9}, {3.590401907004504*^9, 
   3.5904019786147013`*^9}, {3.590402209580367*^9, 3.590402220433053*^9}, {
   3.59040244402775*^9, 3.590402488194791*^9}, {3.5904058056103497`*^9, 
   3.5904058334541388`*^9}, {3.590406316199276*^9, 3.5904064060673733`*^9}, {
   3.590406725543489*^9, 3.5904067442255917`*^9}, {3.5904071333327837`*^9, 
   3.590407283794828*^9}, {3.590407409493165*^9, 3.5904074892097397`*^9}, {
   3.590407660248683*^9, 3.5904076643695803`*^9}, {3.590408014558107*^9, 
   3.5904080165848627`*^9}, {3.590408115221354*^9, 3.590408120214364*^9}, {
   3.590408172711103*^9, 3.590408329983253*^9}, {3.590408453424739*^9, 
   3.590408616483809*^9}, {3.5904756284993677`*^9, 3.5904756381084747`*^9}, {
   3.590477659467993*^9, 3.590477667143879*^9}, 3.590484221253804*^9, 
   3.590484257096575*^9, {3.590487219469193*^9, 3.5904872297083187`*^9}, {
   3.590487478555065*^9, 3.5904875000356703`*^9}, 3.590487535166627*^9, {
   3.5904881667246733`*^9, 3.590488192611252*^9}, {3.590488277824724*^9, 
   3.590488278051166*^9}, 3.590488524874861*^9, {3.590488707108046*^9, 
   3.590488719254861*^9}, 3.590489640338706*^9, {3.5904896985188932`*^9, 
   3.590489698998308*^9}, {3.590490047388994*^9, 3.59049005209975*^9}, {
   3.5904904003649597`*^9, 3.590490400684114*^9}, {3.590587256649349*^9, 
   3.590587347054083*^9}, {3.5905874067464647`*^9, 3.590587412851048*^9}, {
   3.590659982408986*^9, 3.590660082968924*^9}, {3.59066011961248*^9, 
   3.590660127403594*^9}, {3.590660166011602*^9, 3.590660192175417*^9}, 
   3.5906607866707087`*^9, {3.590660822956778*^9, 3.59066087473328*^9}, {
   3.590660909585951*^9, 3.590660930365759*^9}, {3.590661279420238*^9, 
   3.590661372984226*^9}, {3.590661422391564*^9, 3.59066150392048*^9}, {
   3.59066457615618*^9, 3.5906645826456003`*^9}, {3.590665103753153*^9, 
   3.5906651289225063`*^9}, {3.5907301241331463`*^9, 3.59073014632183*^9}, 
   3.590730182823133*^9, {3.5907302193824577`*^9, 3.590730237550971*^9}, {
   3.590730920421576*^9, 3.59073094388249*^9}, {3.59073122822224*^9, 
   3.590731231331561*^9}, {3.590731894293522*^9, 3.590731936844557*^9}, {
   3.590737764584909*^9, 3.590737875085586*^9}, 3.590737977472741*^9, {
   3.590738083739552*^9, 3.590738091872151*^9}, {3.590738345363159*^9, 
   3.590738368061263*^9}, {3.590738791160907*^9, 3.590738796275518*^9}, {
   3.5907388486473503`*^9, 3.590738857805628*^9}, {3.590741684087063*^9, 
   3.590741695976739*^9}, {3.590742401970234*^9, 3.590742412702335*^9}, {
   3.590743153753963*^9, 3.590743156286378*^9}, {3.590743508587661*^9, 
   3.590743525855497*^9}, {3.5907436540191517`*^9, 3.590743664095792*^9}, {
   3.590744383947913*^9, 3.5907444297598457`*^9}, {3.591856688959052*^9, 
   3.591856694447473*^9}, {3.591857398711666*^9, 3.5918574242922077`*^9}, {
   3.5921357726608047`*^9, 3.5921358164872313`*^9}, {3.59213586604653*^9, 
   3.592135976921629*^9}, 3.5921367024693003`*^9, {3.5922236090816507`*^9, 
   3.5922236412833242`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["3.7 Interior product and Lie derivative", "Subsubsection",
 CellChangeTimes->{{3.590754834913535*^9, 3.590754897742119*^9}}],

Cell["\<\
We define the interior product of form with a vector as a derivation of \
degree -1.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Int"}]], "Input",
 CellChangeTimes->{{3.590755246642973*^9, 3.590755247780088*^9}}],

Cell[BoxData[
 StyleBox["\<\"Int[v][form] is the interior contraction of form with the \
vector (rank 1-tensor) v\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.590755249211734*^9},
 CellTags->"Info3590762448-2188320"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefGradedDerivation", "[", 
   RowBox[{
    RowBox[{"Int", "[", "v_", "]"}], ",", "Wedge", ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{"PrintAs", "\[Rule]", "\"\<\[Iota]\>\""}]}], "]"}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", "v_", "]"}], "[", 
    RowBox[{"f_", "?", "ZeroFormQ"}], "]"}], ":=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", "v_", "]"}], "[", 
    RowBox[{
     RowBox[{"f_", "?", "ZeroFormQ"}], " ", "form_"}], "]"}], ":=", 
   RowBox[{"f", " ", 
    RowBox[{
     RowBox[{"Int", "[", "v", "]"}], "[", "form", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{
      RowBox[{"f_", "?", "ScalarQ"}], " ", "v_"}], "]"}], "[", "form_", "]"}],
    ":=", 
   RowBox[{"f", " ", 
    RowBox[{
     RowBox[{"Int", "[", "v", "]"}], "[", "form", "]"}]}]}], ";"}]}], "Input",
 
 InitializationCell->True],

Cell["\<\
The Lie derivative is defined in a very similar form: Alfonso: is it possible \
to use LieD as in xTensor ?\
\>", "Text",
 CellChangeTimes->{{3.590756144618935*^9, 3.590756181081011*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Lie"}]], "Input",
 CellChangeTimes->{{3.590755297126766*^9, 3.5907553019093323`*^9}, 
   3.590756128272735*^9}],

Cell[BoxData[
 StyleBox["\<\"LieD[v][form] is the Lie derivative of form with respect to \
the vector (rank 1-tensor) v\"\>", "MSG"]], "Print", "PrintUsage",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.590755302674872*^9, {3.5907561324760847`*^9, 3.590756133064006*^9}},
 CellTags->"Info3590762502-2188320"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefGradedDerivation", "[", 
   RowBox[{
    RowBox[{"Lie", "[", "v_", "]"}], ",", "Wedge", ",", "0", ",", 
    RowBox[{"PrintAs", "\[Rule]", "\"\<\[ScriptCapitalL]\>\""}]}], "]"}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.590755368213982*^9, {3.590756009036111*^9, 3.590756031085573*^9}, {
   3.590756137084381*^9, 3.590756141234371*^9}, 3.5907565982264757`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Lie", "[", 
     RowBox[{
      RowBox[{"f_", "?", "ScalarQ"}], " ", "v_"}], "]"}], "[", "form_", "]"}],
    ":=", 
   RowBox[{
    RowBox[{"f", " ", 
     RowBox[{
      RowBox[{"Lie", "[", "v", "]"}], "@", "form"}]}], "+", 
    RowBox[{"Wedge", "[", 
     RowBox[{
      RowBox[{"ExtDiff", "@", "f"}], ",", 
      RowBox[{
       RowBox[{"Int", "[", "v", "]"}], "@", "form"}]}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.590756465827754*^9, 3.59075646808528*^9}}],

Cell["\<\
Lie and diff commute (probably not true for covariant exterior derivatives). \
We need to pick a canonical order. Should this be done by a SortDs type \
function?\
\>", "Text"],

Cell["Cartan identity:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LieToExtDiff", "[", "expr_", "]"}], ":=", 
   RowBox[{"expr", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Lie", "[", "v_", "]"}], "[", "form_", "]"}], "\[RuleDelayed]", 
      RowBox[{
       RowBox[{"ExtDiff", "@", 
        RowBox[{
         RowBox[{"Int", "[", "v", "]"}], "@", "form"}]}], "+", 
       RowBox[{
        RowBox[{"Int", "[", "v", "]"}], "@", 
        RowBox[{"ExtDiff", "@", "form"}]}]}]}], "}"}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.590756486557755*^9, 3.590756505135983*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["3.8 Commuting and sorting of the derivations ", "Subsubsection",
 CellChangeTimes->{{3.590811261776059*^9, 3.590811292672843*^9}}],

Cell["Jose: this is brilliant!", "Text"],

Cell[TextData[{
 "There are 6 equations in all for the (super-)commutators of the three \
derivations (also the negations of these three equations). It is easy to \
write them down. The LHS\[CloseCurlyQuote]s are just super-commutators of two \
derivations, in whatever order you want. The sign is + just for [odd,odd] so \
that\[CloseCurlyQuote]s for [d,d], [\[Iota],\[Iota]], and [\[Iota],d]. Then \
the RHS is itself a single derivation, with the degree being the sum of \
degrees from the LHS. If there is only one vector argument, it\
\[CloseCurlyQuote]s clear what the RHS should be. When there are two vector \
arguments, then the vector on the RHS is the Lie bracket of the two from the \
LHS, in the order that they came on the LHS.\n \nThe equations are:\n1. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["d", "2"], "=", "0"}], TraditionalForm]]],
 "\n2. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[Iota]", "v"], 
      SubscriptBox["\[Iota]", "w"]}], "+", 
     RowBox[{
      SubscriptBox["\[Iota]", "w"], 
      SubscriptBox["\[Iota]", "v"]}]}], "=", "0"}], TraditionalForm]]],
 "\n3. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[ScriptCapitalL]", "v"], 
      SubscriptBox["\[ScriptCapitalL]", "w"]}], "-", 
     RowBox[{
      SubscriptBox["\[ScriptCapitalL]", "w"], 
      SubscriptBox["\[ScriptCapitalL]", "v"]}]}], "=", 
    SubscriptBox["\[ScriptCapitalL]", 
     RowBox[{"[", 
      RowBox[{"v", ",", "w"}], "]"}]]}], TraditionalForm]]],
 "\n4. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Iota]", "v"], 
     SubscriptBox["\[ScriptCapitalL]", "w"]}], "-", 
    RowBox[{
     SubscriptBox["\[ScriptCapitalL]", "w"], 
     SubscriptBox["\[Iota]", "v"]}]}], TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Iota]", 
    RowBox[{"[", 
     RowBox[{"v", ",", "w"}], "]"}]], TraditionalForm]]],
 "\n5. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[Iota]", "v"], "d"}], "+", 
     RowBox[{"d", " ", 
      SubscriptBox["\[Iota]", "v"]}]}], "=", " ", 
    SubscriptBox["\[ScriptCapitalL]", "v"]}], TraditionalForm]]],
 "\n6. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[ScriptCapitalL]", "v"], "d"}], "-", 
     RowBox[{"d", " ", 
      SubscriptBox["\[ScriptCapitalL]", "v"]}]}], "=", "0"}], 
   TraditionalForm]]],
 " (\[OpenCurlyDoubleQuote]Cartan\[CloseCurlyQuote]s magic formula\
\[CloseCurlyDoubleQuote])"
}], "Text"],

Cell["\<\
1. requires no action (it will just be automatically killed).
2, 3. Maybe have this sorted automatically? Any canonical order for v,w \
imposes a canonical order on the derivations.
4, 5, 6\[LongDash]write rules to go in either direction.\
\>", "Text"],

Cell["\<\
[Jose: It is better to have this type of rule with a check !OrderedQ[...] \
because if the two vectors are equal then you may run into infinite \
recursion. Change it.]\
\>", "Text"],

Cell["\<\
TODO: Deal with diff[expr,CD] where CD is not just PD. Alfonso: are there \
commutation rules for the exterior covariant derivatives ? \
\>", "Text",
 CellChangeTimes->{{3.590816911718334*^9, 3.590816969632928*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"ExtDiff", ",", "ExtDiff"}], "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.590817029927865*^9, 3.590817040779891*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"Int", ",", "Int"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{
       RowBox[{"Int", "[", "v_", "]"}], "@", 
       RowBox[{
        RowBox[{"Int", "[", "w_", "]"}], "@", "form_"}]}], "]"}], 
     "\[RuleDelayed]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Int", "[", "w", "]"}], "@", 
        RowBox[{
         RowBox[{"Int", "[", "v", "]"}], "@", "form"}]}]}], "/;", 
      RowBox[{"!", 
       RowBox[{"OrderedQ", "[", 
        RowBox[{"{", 
         RowBox[{"v", ",", "w"}], "}"}], "]"}]}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"Lie", ",", "Lie"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{
       RowBox[{"Lie", "[", "v_", "]"}], "@", 
       RowBox[{
        RowBox[{"Lie", "[", "w_", "]"}], "@", "form_"}]}], "]"}], 
     "\[RuleDelayed]", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", "=", 
          RowBox[{"First", "@", 
           RowBox[{"FindFreeIndices", "[", "v", "]"}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Lie", "[", "w", "]"}], "@", 
          RowBox[{
           RowBox[{"Lie", "[", "v", "]"}], "@", "form"}]}], "+", 
         RowBox[{
          RowBox[{"Lie", "[", 
           RowBox[{
            RowBox[{"Bracket", "[", 
             RowBox[{"v", ",", "w"}], "]"}], "[", "a", "]"}], "]"}], "@", 
          "form"}]}]}], "]"}], "/;", 
      RowBox[{"!", 
       RowBox[{"OrderedQ", "[", 
        RowBox[{"{", 
         RowBox[{"v", ",", "w"}], "}"}], "]"}]}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell["\<\
Below, SortDerivationsRule[d1,d2][expr] changes instances of d2\[CenterDot]d1 \
into d1\[CenterDot]d2. There is no need to check orderings.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"Int", ",", "Lie"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{
       RowBox[{"Lie", "[", "w_", "]"}], "@", 
       RowBox[{
        RowBox[{"Int", "[", "v_", "]"}], "@", "form_"}]}], "]"}], 
     "\[RuleDelayed]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", "=", 
         RowBox[{"First", "@", 
          RowBox[{"FindFreeIndices", "[", "w", "]"}]}]}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Int", "[", "v", "]"}], "@", 
         RowBox[{
          RowBox[{"Lie", "[", "w", "]"}], "@", "form"}]}], "+", 
        RowBox[{
         RowBox[{"Int", "[", 
          RowBox[{
           RowBox[{"Bracket", "[", 
            RowBox[{"w", ",", "v"}], "]"}], "[", "a", "]"}], "]"}], "@", 
         "form"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"Lie", ",", "Int"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{
       RowBox[{"Int", "[", "v_", "]"}], "@", 
       RowBox[{
        RowBox[{"Lie", "[", "w_", "]"}], "@", "form_"}]}], "]"}], 
     "\[RuleDelayed]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", "=", 
         RowBox[{"First", "@", 
          RowBox[{"FindFreeIndices", "[", "w", "]"}]}]}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Lie", "[", "w", "]"}], "@", 
         RowBox[{
          RowBox[{"Int", "[", "v", "]"}], "@", "form"}]}], "+", 
        RowBox[{
         RowBox[{"Int", "[", 
          RowBox[{
           RowBox[{"Bracket", "[", 
            RowBox[{"v", ",", "w"}], "]"}], "[", "a", "]"}], "]"}], "@", 
         "form"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"Int", ",", "ExtDiff"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{"ExtDiff", "[", 
       RowBox[{
        RowBox[{"Int", "[", "v_", "]"}], "@", "form_"}], "]"}], "]"}], 
     "\[RuleDelayed]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Int", "[", "v", "]"}], "@", 
        RowBox[{"ExtDiff", "@", "form"}]}]}], "+", 
      RowBox[{
       RowBox[{"Lie", "[", "v", "]"}], "@", "form"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"ExtDiff", ",", "Int"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{
       RowBox[{"Int", "[", "v_", "]"}], "@", 
       RowBox[{"ExtDiff", "[", "form_", "]"}]}], "]"}], "\[RuleDelayed]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"ExtDiff", "@", 
        RowBox[{
         RowBox[{"Int", "[", "v", "]"}], "@", "form"}]}]}], "+", 
      RowBox[{
       RowBox[{"Lie", "[", "v", "]"}], "@", "form"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5908174359694242`*^9, 3.590817536214188*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"Lie", ",", "ExtDiff"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{"ExtDiff", "[", 
       RowBox[{
        RowBox[{"Lie", "[", "v_", "]"}], "@", "form_"}], "]"}], "]"}], 
     "\[RuleDelayed]", 
     RowBox[{
      RowBox[{"Lie", "[", "v", "]"}], "@", 
      RowBox[{"ExtDiff", "@", "form"}]}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"ExtDiff", ",", "Lie"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{
       RowBox[{"Lie", "[", "v_", "]"}], "@", 
       RowBox[{"ExtDiff", "[", "form_", "]"}]}], "]"}], "\[RuleDelayed]", 
     RowBox[{"ExtDiff", "@", 
      RowBox[{
       RowBox[{"Lie", "[", "v", "]"}], "@", "form"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5908175480137367`*^9, 3.5908176067525578`*^9}}],

Cell["\<\
Now we choose a default left-to-right order that we want derivations to have. \
I don\[CloseCurlyQuote]t know if there is a best order (i.e. what encourages \
the largest number of terms to vanish).\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "$DerivationSortOrder"}]], "Input",
 CellChangeTimes->{{3.590817627280313*^9, 3.590817632762684*^9}}],

Cell[BoxData[
 StyleBox["\<\"$DerivationSortOrder is a global variable which encodes the \
default ordering of the three derivatives Int, LieD and ExtDiff. The default \
is {LieD,Int,ExtDiff}\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.590817634349175*^9},
 CellTags->"Info3590824833-4559738"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Derivations", "=", 
   RowBox[{"{", 
    RowBox[{"Lie", ",", "Int", ",", "ExtDiff"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$DerivationSortOrder", "=", "$Derivations"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.59081762097048*^9, 3.590817622991867*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SortDerivations"}]], "Input",
 CellChangeTimes->{{3.590817672437537*^9, 3.59081767748306*^9}}],

Cell[BoxData[
 StyleBox["\<\"SortDerivations[expr] brings expr into a new expression where \
all the derivations (exterior derivative, Lie derivative and interior \
contraction) are written in a canonical order. The default left-to-right \
order is defined by the variable $DerivationSortOrder\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.59081767838612*^9},
 CellTags->"Info3590824878-4559738"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SortDerivations", "[", "expr_", "]"}], ":=", 
  RowBox[{"SortDerivations", "[", 
   RowBox[{"expr", ",", "$DerivationSortOrder"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivations", "[", 
    RowBox[{"expr_", ",", "order_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Make", " ", "sure", " ", "that", " ", "order", " ", "is", " ", "some", 
       " ", "permutation", " ", "of", " ", "$Derivations"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sort", "@", "order"}], "=!=", 
         RowBox[{"Sort", "@", "$Derivations"}]}], ",", 
        RowBox[{
         RowBox[{"Throw", "@", 
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"SortDerivations", "::", "invalid"}], ",", 
            "\"\<order\>\"", ",", "order"}], "]"}]}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"expr", "//.", 
        RowBox[{"Join", "@@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Join", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"SortDerivationsRule", "[", 
                RowBox[{
                 RowBox[{"order", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
              RowBox[{"Drop", "[", 
               RowBox[{"order", ",", "i"}], "]"}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              RowBox[{"Length", "@", "order"}], "-", "1"}]}], "}"}]}], 
          "]"}]}]}], "//.", 
       RowBox[{"Join", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"SortDerivationsRule", "[", 
            RowBox[{"#", ",", "#"}], "]"}], "&"}], "/@", "order"}], 
         ")"}]}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4. Variational derivatives of top rank forms", "Subsection",
 CellChangeTimes->{{3.5890989045773783`*^9, 3.589098916977103*^9}, {
  3.589099319590476*^9, 3.589099334774352*^9}, {3.5892034190391827`*^9, 
  3.589203424686392*^9}, {3.589454342408371*^9, 3.589454348447538*^9}, {
  3.589559875792428*^9, 3.589559889045223*^9}, {3.590895239264917*^9, 
  3.590895245825308*^9}, {3.590895385289476*^9, 3.5908953952316637`*^9}},
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell["4.1 FormVarD", "Subsubsection",
 CellChangeTimes->{{3.5909048424569263`*^9, 3.590904846935355*^9}}],

Cell["Check that a form has top rank", "Text",
 CellChangeTimes->{{3.590895521833157*^9, 3.590895534028393*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TopRankQ", "[", "form_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"manifolds", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"DependenciesOf", "@", "form"}], ",", "ManifoldQ"}], "]"}]}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "manifolds"}], " ", "\[NotEqual]", " ", "1"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Throw", "@", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"TopRankQ", "::", "error1"}], ",", 
          "\"\<Forms must have exactly 1 manifold in dependencies.\>\""}], 
         "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"TopRankQ", "[", 
        RowBox[{"form", ",", 
         RowBox[{"First", "@", "manifolds"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TopRankQ", "[", 
    RowBox[{"form_", ",", 
     RowBox[{"mani_", "?", "ManifoldQ"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Grade", "[", 
     RowBox[{"form", ",", "Wedge"}], "]"}], "===", 
    RowBox[{"DimOfManifold", "@", "mani"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.590895497095565*^9, 3.590895509867663*^9}, 
   3.590895584255077*^9}],

Cell[TextData[{
 "FormVarD is supposed to be like VarD, but for top-rank forms. A derivative \
is not specified, because the exterior derivative is natural. However, the \
adjoint to the exterior derivative, the codifferential, requires a Hodge \
dual, which we define via a (non-degenerate!) metric. Therefore FormVarD has \
the notation FormVarD[form, metric][expr, rest]. The convention is that expr \
and rest are combined as \[Delta](expr)\[Wedge]rest (here I write the \
variational derivative as \[Delta], and always subscript the codifferential \
as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", "g"], TraditionalForm]]],
 "). This means that when writing the Leibniz rule for the Wedge product, we \
must re-order the factors, i.e.\n  \[Delta](a\[Wedge]b\[Wedge]c) = \[Delta]a\
\[Wedge]b\[Wedge]c + a\[Wedge]\[Delta]b\[Wedge]c + \
a\[Wedge]b\[Wedge]\[Delta]c=\[Delta]a\[Wedge]b\[Wedge]c + ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"|", 
     RowBox[{"a", "||", "b"}], "|"}]], TraditionalForm]]],
 "\[Delta]b\[Wedge]a\[Wedge]c + ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"|", "a", "|", 
       RowBox[{"+", 
        RowBox[{"|", "b", "|"}]}]}], ")"}], "|", "c", "|"}]], 
   TraditionalForm]]],
 "\[Delta]c\[Wedge]a\[Wedge]b       etc.\nThe other identities we need \
follow. For a Hodge star,\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "\[Wedge]", 
    RowBox[{"(", 
     SubscriptBox["\[Star]", "g"]}]}], TraditionalForm]]],
 "b) = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"a", ",", "b"}], "\[RightAngleBracket]"}], "g"], 
   TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["dVol", "g"], TraditionalForm]]],
 "     \[LineSeparator]where |a|+|*b|=n, and where\n  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"a", ",", "b"}], "\[RightAngleBracket]"}], "g"], 
   TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["g", 
      RowBox[{
       SubscriptBox["i", "1"], 
       SubscriptBox["j", "1"]}]], "..."}], " ", 
    SuperscriptBox["g", 
     RowBox[{
      SubscriptBox["i", "k"], 
      SubscriptBox["j", "k"]}]], 
    SubscriptBox["a", 
     RowBox[{
      RowBox[{
       SubscriptBox["i", "1"], "..."}], 
      SubscriptBox["i", "k"]}]], 
    SubscriptBox["b", 
     RowBox[{
      RowBox[{
       SubscriptBox["j", "1"], "..."}], 
      SubscriptBox["j", "k"]}]]}], TraditionalForm]]],
 "\nis the inner product on k-forms given by the metric g, and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["dVol", "g"], TraditionalForm]]],
 "=\[Star]1 is the metric volume element, given in a coordinate basis by\n  \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["dVol", "g"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{"|", 
         RowBox[{"det", " ", "g"}], "|"}]], 
       RowBox[{
        SuperscriptBox["dx", "1"], "\[Wedge]"}]}], "..."}], "\[Wedge]", 
     SuperscriptBox["dx", "n"]}]}], TraditionalForm]]],
 ".\nWith a real metric and real-valued forms, it is clear that \
\[LeftAngleBracket]a,b\[RightAngleBracket] = \[LeftAngleBracket]b,a\
\[RightAngleBracket] and so\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "\[Wedge]", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Star]", "g"], "b"}], ")"}]}], " ", "=", " ", 
    RowBox[{"b", "\[Wedge]", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Star]", "g"], "a"}], ")"}]}]}], TraditionalForm]]],
 "        (for |a|+|*b|=n) \nor in the way we\[CloseCurlyQuote]ll use it,\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Star]", "g"], "a"}], ")"}], TraditionalForm]]],
 "\[Wedge]b = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"|", "a", "|", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"n", "-"}], "|", "a", "|"}], ")"}]}]], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "\[Wedge]", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Star]", "g"], "b"}]}]}], TraditionalForm]]],
 ")      (for |a|+|*b|=n) \nQUESTION: What about \
\[DoubleStruckCapitalC]-valued forms?\nWe also have that diff and codiff (of \
any CovD) are adjoints of each other, in the sense that\n  \[Integral]  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"da", "\[Wedge]"}], 
    SubscriptBox["\[Star]", "g"]}], TraditionalForm]]],
 "b = \[Integral]  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"b", "\[Wedge]"}], 
    SubscriptBox["\[Star]", "g"], "da"}], TraditionalForm]]],
 " = \[Integral]  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "\[Wedge]"}], 
    SubscriptBox["\[Star]", "g"], 
    RowBox[{
     SubscriptBox["\[Delta]", "g"], "b"}]}], TraditionalForm]]],
 " = \[Integral]  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", "g"], 
     RowBox[{"b", "\[Wedge]"}]}], 
    SubscriptBox["\[Star]", "g"], "a"}], TraditionalForm]]],
 "\nThe above rule is convenient with the inverse of Hodge, i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Star]", "g", 
      RowBox[{"-", "1"}]], 
     SubscriptBox["\[Star]", "g"]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Star]", "g"], 
      SubsuperscriptBox["\[Star]", "g", 
       RowBox[{"-", "1"}]]}], "=", "id"}]}], TraditionalForm]]],
 ". This inverse is\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Star]", "g", 
      RowBox[{"-", "1"}]], "a"}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"|", "a", "|", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n", "-"}], "|", "a", "|"}], ")"}]}]], "s"}], " ", 
     SubscriptBox["\[Star]", "g"], "a"}]}], TraditionalForm]]],
 "\nwhere s=SignDetOfMetric[g]\nTODO:\n  1. Act on ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Star]", "g2"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", "g2"], TraditionalForm]]],
 " where g2 is a second metric on the same manifold, and is also \
non-degenerate. ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Star]", "g2"], TraditionalForm]]],
 " can be converted to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Star]", "g"], TraditionalForm]]],
 " by including a ratio of volume elements (the ratio is coordinate-free).\n  \
2. What to do with Lie, Int?\n  3. What about coframe, connection, torsion, \
curvature, etc.?"
}], "Text",
 CellChangeTimes->{3.5908958393192587`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvHodge", "[", "metric_", "]"}], "[", "expr_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"Grade", "[", 
         RowBox[{"expr", ",", "Wedge"}], "]"}]}], ",", 
       RowBox[{"n", "=", 
        RowBox[{"DimOfMetric", "@", "metric"}]}], ",", 
       RowBox[{"s", "=", 
        RowBox[{"SignDetOfMetric", "@", "metric"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"k", 
         RowBox[{"(", 
          RowBox[{"n", "-", "k"}], ")"}]}], ")"}]}], "s", " ", 
      RowBox[{
       RowBox[{"Hodge", "[", "metric", "]"}], "@", "expr"}]}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.590896589484627*^9, 3.59089663330301*^9}, 
   3.590896663801498*^9}],

Cell[TextData[{
 "We will use it as follows:\n  \[Integral] da \[Wedge] c = \[Integral] a \
\[Wedge] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Star]", "g"], 
    SubscriptBox["\[Delta]", "g"], 
    SubsuperscriptBox["\[Star]", "g", 
     RowBox[{"-", "1"}]], "c"}], TraditionalForm]]],
 "\nand\n  \[Integral] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", "g"], 
     RowBox[{"b", " ", "\[Wedge]", " ", "c"}]}], " ", "=", " ", 
    RowBox[{"\[Integral]", " ", 
     RowBox[{
      RowBox[{"b", " ", "\[Wedge]"}], " ", 
      SubscriptBox["\[Star]", "g"], "d", 
      SubsuperscriptBox["\[Star]", "g", 
       RowBox[{"-", "1"}]], "c"}]}]}], TraditionalForm]]]
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"TODO", ":", 
     RowBox[{
     "More", " ", "checks", " ", "that", " ", "form", " ", "is", " ", 
      "actually", " ", "on", " ", "same", " ", "manifold", " ", "as", " ", 
      "metric"}]}], ",", " ", 
    RowBox[{"etc", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Generate", " ", 
    RowBox[{"rest", ".", " ", "Replace"}], " ", "dummies", " ", "in", " ", 
    RowBox[{"expr", ".", " ", "This"}], " ", "does", " ", "not", " ", "act", 
    " ", "on", " ", "scalar", " ", "arguments", " ", "of", " ", "functions"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", "expr_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"TopRankQ", "[", "expr", "]"}], "&&", 
        RowBox[{"ScalarQ", "[", "expr", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"FormVarD", "[", 
         RowBox[{"form", ",", "met"}], "]"}], "[", 
        RowBox[{
         RowBox[{"ReplaceDummies", "@", "expr"}], ",", "1"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Throw", "@", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"General", "::", "error1"}], ",", 
          "\"\<Can only take variational derivative of top-rank form.\>\""}], 
         "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Thread", " ", "over", " ", "Plus"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{"expr_Plus", ",", "rest_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"FormVarD", "[", 
         RowBox[{"form", ",", "met"}], "]"}], "[", 
        RowBox[{"#", ",", "rest"}], "]"}], "&"}], "/@", "expr"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{"expr_SeriesData", ",", "rest_"}], "]"}], ":=", 
     RowBox[{"xAct`xTensor`Private`SeriesDataMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"FormVarD", "[", 
          RowBox[{"form", ",", "met"}], "]"}], "[", 
         RowBox[{"#", ",", "rest"}], "]"}], "&"}], ",", "expr"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"FormVarD", " ", "on", " ", 
     RowBox[{"products", ":", " ", 
      RowBox[{"sum", " ", "of", " ", 
       RowBox[{"VarDtake", "'"}], "s", " ", "of", " ", "elements"}]}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{"expr_Times", ",", "rest_"}], "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"grades", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Grade", "[", 
            RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
          RowBox[{"List", "@@", "expr"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"Position", "[", 
             RowBox[{"grades", ",", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "=!=", "0"}], "&"}], ")"}]}], ",", "1", ",", 
              RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], ">", "1"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Throw", "[", 
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"FormVarD", "::", "error1"}], ",", 
             "\"\<Found Times product of nonscalar forms: \>\"", ",", 
             "expr"}], "]"}], "]"}]}], "]"}], ";", "\t", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"FormVarDtake", "[", 
           RowBox[{"form", ",", "met", ",", "rest", ",", 
            RowBox[{"List", "@@", "expr"}], ",", "count"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"count", ",", 
            RowBox[{"Length", "@", "expr"}]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"FormVarD", " ", "on", " ", 
      RowBox[{"wedges", ":", " ", 
       RowBox[{"sum", " ", "of", " ", 
        RowBox[{"FormVarDtake", "'"}], "s", " ", "of", " ", 
        RowBox[{"elements", ".", "\[IndentingNewLine]", "Note"}], " ", "the", 
        " ", "use", " ", "of", " ", "sumgrades", " ", "for", " ", 
        "reordering", " ", "the", " ", "Wedge"}]}]}], ",", " ", 
     RowBox[{"as", " ", "described", " ", 
      RowBox[{"above", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{"expr_Wedge", ",", "rest_"}], "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"grades", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Grade", "[", 
            RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
          RowBox[{"List", "@@", "expr"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sumgrades", "=", 
           RowBox[{"FoldList", "[", 
            RowBox[{"Plus", ",", "0", ",", "grades"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"grades", "[", 
                RowBox[{"[", "count", "]"}], "]"}], "*", " ", 
               RowBox[{"sumgrades", "[", 
                RowBox[{"[", "count", "]"}], "]"}]}], ")"}]}], 
            RowBox[{"FormVarDtake", "[", 
             RowBox[{"form", ",", "met", ",", "rest", ",", 
              RowBox[{"List", "@@", "expr"}], ",", "count"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"count", ",", 
             RowBox[{"Length", "@", "expr"}]}], "}"}]}], "]"}]}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "FormVarD", " ", "element", " ", "n", " ", "of", " ", "a", " ", "list", 
     " ", "of", " ", "Wedge", " ", "factors", " ", 
     RowBox[{"(", 
      RowBox[{"no", " ", 
       RowBox[{"sign", "--"}], "it", " ", "was", " ", "included", " ", 
       "above"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FormVarDtake", "[", 
      RowBox[{
      "form_", ",", "met_", ",", "rest_", ",", "list_List", ",", 
       "n_Integer"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form", ",", "met"}], "]"}], "[", 
      RowBox[{
       RowBox[{"list", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{"Wedge", "[", 
        RowBox[{
         RowBox[{"Wedge", "@@", 
          RowBox[{"Drop", "[", 
           RowBox[{"list", ",", 
            RowBox[{"{", "n", "}"}]}], "]"}]}], ",", "rest"}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Scalar", " ", 
      RowBox[{"functions", ".", " ", "Multiargument"}], " ", "generalization",
       " ", "contributed", " ", "by", " ", 
      RowBox[{"Leo", ".", " ", "multiD"}], " ", "is", " ", "not", " ", 
      "enough", " ", 
      RowBox[{"here", ".", "\[IndentingNewLine]", " ", "Since"}], " ", 
      "operating", " ", "on", " ", "a", " ", "scalar", " ", "function"}], ",",
      " ", 
     RowBox[{
      RowBox[{"don", "'"}], "t", " ", "need", " ", "extra", " ", 
      RowBox[{"Wedge", "'"}], "s"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"func_", "?", "ScalarFunctionQ"}], "[", "args__", "]"}], ",", 
       "rest_"}], "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"repargs", "=", 
         RowBox[{"ReplaceDummies", "/@", 
          RowBox[{"{", "args", "}"}]}]}], "}"}], ",", 
       RowBox[{"Plus", "@@", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"FormVarD", "[", 
             RowBox[{"form", ",", "met"}], "]"}], "[", 
            RowBox[{"#1", ",", 
             RowBox[{"rest", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Derivative", "@@", "#2"}], ")"}], "@", "func"}], "@@",
                "repargs"}]}]}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"repargs", ",", 
            RowBox[{"IdentityMatrix", "@", 
             RowBox[{"Length", "@", "repargs"}]}]}], "}"}]}], "]"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Remove", " ", "Scalar", " ", "head", " ", "because", " ", "in", " ", 
     "general", " ", "the", " ", "result", " ", "is", " ", "not", " ", "a", 
     " ", "scalar"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{"Scalar", "[", "expr_", "]"}], ",", "rest_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form", ",", "met"}], "]"}], "[", 
      RowBox[{
       RowBox[{"ReplaceDummies", "[", "expr", "]"}], ",", "rest"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "Constants", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"_", ",", "_"}], "]"}], "[", 
      RowBox[{
       RowBox[{"x_", "?", "ConstantQ"}], ",", "_"}], "]"}], ":=", "0"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Same", " ", 
      RowBox[{"tensor", ":", " ", 
       RowBox[{
        RowBox[{"metric", ".", " ", "Do"}], " ", "not", " ", "use", " ", 
        "ContractMetric"}]}]}], ",", " ", 
     RowBox[{"which", " ", "hides", " ", "the", " ", 
      RowBox[{"metric", ".", "\[IndentingNewLine]", 
       RowBox[{"Note", ":", " ", 
        RowBox[{
        "This", " ", "part", " ", "is", " ", "identical", " ", "to", " ", 
         "the", " ", "code", " ", "in", " ", "VarD"}]}]}]}], ",", " ", 
     RowBox[{"since", " ", 
      RowBox[{"it", "'"}], "s", " ", "only", " ", "metric", " ", "being", " ",
       "Wedged", " ", "with", " ", 
      RowBox[{"rest", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{
        RowBox[{"metric_", "[", 
         RowBox[{"a_", ",", "b_"}], "]"}], ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"metric_Symbol", "?", "MetricQ"}], "[", 
        RowBox[{"c_", ",", "d_"}], "]"}], ",", "rest_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"xAct`xTensor`Private`metricsign", "[", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}], 
      RowBox[{"ToCanonical", "[", 
       RowBox[{
        RowBox[{"rest", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"metric", "[", 
              RowBox[{
               RowBox[{"ChangeIndex", "@", "a"}], ",", "c"}], "]"}], 
             RowBox[{"metric", "[", 
              RowBox[{
               RowBox[{"ChangeIndex", "@", "b"}], ",", "d"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"metric", "[", 
              RowBox[{
               RowBox[{"ChangeIndex", "@", "a"}], ",", "d"}], "]"}], 
             RowBox[{"metric", "[", 
              RowBox[{
               RowBox[{"ChangeIndex", "@", "b"}], ",", "c"}], "]"}]}]}], 
           ")"}], "/", "2"}]}], ",", 
        RowBox[{"UseMetricOnVBundle", "\[Rule]", "None"}]}], "]"}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Same", " ", 
      RowBox[{"tensor", ".", " ", "Place"}], " ", "indices", " ", "in", " ", 
      "proper", " ", "delta", " ", 
      RowBox[{"positions", ".", " ", 
       RowBox[{"QUESTION", ":", " ", 
        RowBox[{
        "could", " ", "this", " ", "be", " ", "problematic", " ", "for", " ", 
         
         RowBox[{"spinors", "?", "\[IndentingNewLine]", "Note"}]}], ":", " ", 
        
        RowBox[{
        "This", " ", "part", " ", "is", " ", "identical", " ", "to", " ", 
         "the", " ", "code", " ", "in", " ", "VarD"}]}]}]}], ",", " ", 
     RowBox[{"since", " ", 
      RowBox[{"it", "'"}], "s", " ", "only", " ", "deltas", " ", "being", " ",
       "Wedged", " ", "with", " ", 
      RowBox[{"rest", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{
        RowBox[{"form_", "[", "inds1___", "]"}], ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"form_", "?", "xTensorQ"}], "[", "inds2___", "]"}], ",", 
       "rest_"}], "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"clist", "=", 
         RowBox[{"ChangeIndex", "/@", 
          RowBox[{"IndexList", "[", "inds1", "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ToCanonical", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ImposeSymmetry", "[", 
           RowBox[{
            RowBox[{"Inner", "[", 
             RowBox[{"xAct`xTensor`Private`varddelta", ",", "clist", ",", 
              RowBox[{"IndexList", "[", "inds2", "]"}], ",", "Times"}], "]"}],
             ",", "clist", ",", 
            RowBox[{"SymmetryGroupOfTensor", "[", 
             RowBox[{"form", "[", "inds1", "]"}], "]"}]}], "]"}], "rest"}], 
         ",", 
         RowBox[{"UseMetricOnVBundle", "\[Rule]", "None"}]}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"A", " ", "different", " ", "tensor"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{
        RowBox[{"form1_", "[", "inds1___", "]"}], ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"form2_", "?", "xTensorQ"}], "[", "inds2___", "]"}], ",", 
       "rest_"}], "]"}], ":=", 
     RowBox[{"0", "/;", 
      RowBox[{"!", 
       RowBox[{"ImplicitTensorDepQ", "[", 
        RowBox[{"form2", ",", "form1"}], "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Hodge", " ", "identity"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Hodge", "[", "met_", "]"}], "[", "expr_", "]"}], ",", 
       "rest_"}], "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"k", "=", 
          RowBox[{"Grade", "[", 
           RowBox[{"expr", ",", "Wedge"}], "]"}]}], ",", 
         RowBox[{"n", "=", 
          RowBox[{"DimOfMetric", "@", "met"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"k", 
           RowBox[{"(", 
            RowBox[{"n", "-", "k"}], ")"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"FormVarD", "[", 
          RowBox[{"form", ",", "met"}], "]"}], "[", 
         RowBox[{"expr", ",", 
          RowBox[{
           RowBox[{"Hodge", "[", "met", "]"}], "@", "rest"}]}], "]"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"diff", " ", "\[Rule]", " ", 
     RowBox[{
     "Replaced", " ", "by", " ", "ExtDiff", " ", "to", " ", "adjust", " ", 
      "to", " ", "the", " ", "new", " ", 
      RowBox[{"notation", ".", " ", "Dropped"}], " ", "cd"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{"ExtDiff", "[", "expr_", "]"}], ",", "rest_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form", ",", "met"}], "]"}], "[", 
      RowBox[{"expr", ",", 
       RowBox[{
        RowBox[{"Hodge", "[", "met", "]"}], "@", 
        RowBox[{
         RowBox[{"CoDiff", "[", "met", "]"}], "[", 
         RowBox[{
          RowBox[{"InvHodge", "[", "met", "]"}], "@", "rest"}], "]"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"codiff", " ", "\[Rule]", " ", 
     RowBox[{
     "Replaced", " ", "by", " ", "CoDiff", " ", "to", " ", "adjust", " ", 
      "to", " ", "the", " ", "new", " ", 
      RowBox[{"notation", ".", " ", "Dropped"}], " ", "cd", " ", "and", " ", 
      "replaced", " ", "ExtCovDiff", " ", "by", " ", "ExtDiff"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"CoDiff", "[", "met_", "]"}], "[", "expr_", "]"}], ",", 
       "rest_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form", ",", "met"}], "]"}], "[", 
      RowBox[{"expr", ",", 
       RowBox[{
        RowBox[{"Hodge", "[", "met", "]"}], "@", 
        RowBox[{"ExtDiff", "[", 
         RowBox[{
          RowBox[{"InvHodge", "[", "met", "]"}], "@", "rest"}], "]"}]}]}], 
      "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.590903114788189*^9, 3.590903171677745*^9}, {
   3.590903272750787*^9, 3.5909033277085123`*^9}, {3.590903410833766*^9, 
   3.590903411309738*^9}, {3.590903459209941*^9, 3.590903462789261*^9}, {
   3.591540279333599*^9, 3.591540285571719*^9}, {3.5915403613010883`*^9, 
   3.591540393363076*^9}, {3.59154051701258*^9, 3.5915405179715014`*^9}, 
   3.5915405753425827`*^9, {3.591540700513658*^9, 3.5915407334622183`*^9}, {
   3.5915407784667377`*^9, 3.591540822101645*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ExtDiff"}]], "Input",
 CellChangeTimes->{{3.591078566689843*^9, 3.5910785985537252`*^9}}],

Cell[BoxData[
 StyleBox["\<\"ExtDiff[form] computes the exterior derivative of the \
differential form form\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.591078599702018*^9},
 CellTags->"Info3591085799-1403269"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5. End private and package", "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.591807816780135*^9, 3.591807824831841*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1274, 613},
WindowMargins->{{0, Automatic}, {Automatic, 51}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
ShowSelection->True,
Magnification->1.5,
FrontEndVersion->"9.0 for Linux x86 (64-bit) (November 20, 2012)",
StyleDefinitions->"Default.nb"
]

