Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["xTerior",
 FontSlant->"Italic",
 FontColor->RGBColor[1, 0, 0]]], "Title"],

Cell[TextData[{
 StyleBox["Exterior Calculus for ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["xAct",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]]
}], "Subtitle"],

Cell[TextData[{
 StyleBox["Alfonso Garc\[IAcute]a-Parrado G\[OAcute]mez-Lobo\n",
  FontSize->18],
 StyleBox["alfonso@math.uminho.pt",
  FontSize->14],
 "\n",
 StyleBox["Universidade do Minho, Portugal",
  FontSize->14],
 "\n\n",
 StyleBox["Leo C. Stein\n",
  FontSize->18],
 StyleBox["leo.stein@gmail.com\nCornell University, NY",
  FontSize->14],
 "\n\n",
 StyleBox["(c) 2006-2013, under GPL\n\nhttp://www.xAct.es/\n\
http://groups.google.com/group/xAct\n",
  FontSize->14],
 StyleBox["https://github.com/xAct-contrib",
  FontFamily->"Bitstream Vera Sans",
  FontSize->14]
}], "Subsubtitle"],

Cell[TextData[{
 StyleBox["xTerior",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 " is a package for exterior calculus in xAct.\n\n",
 StyleBox["xTerior",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 " is distributed under the GNU General Public License, and runs on top of ",
 StyleBox["xTensor ",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 "and ",
 StyleBox["xCoba",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 " which are free packages for fast manipulation of abstract and component \
tensor expressions. All packages can be downloaded from ",
 ButtonBox["http://www.xact.es/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.xact.es"], None},
  ButtonNote->"http://www.xact.es"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateList", "[", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2014", ",", "1", ",", "27", ",", "15", ",", "47", ",", 
   "39.360406`8.347634548024022"}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xAct`xTerior`$xTensorVersionExpected", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<1.1.0\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"2013", ",", "9", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAct`xTerior`$Version", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<0.8.5\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"2013", ",", "7", ",", "1"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[TextData[{
 "1. ",
 StyleBox["Initialization",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell["1.0. TODO list", "Subsubsection"],

Cell[TextData[{
 StyleBox["TODO : ",
  FontWeight->"Bold"],
 "\n-Add some option to DefDiffForm which allows the user to include the \
degree in the printing output.\n-In the definition of the connection forms \
there are no checks about the manifolds in which the covariant derivatives \
are defined and they may well be defined in different tangent bundles.\n\
-ContractBasis and ToBasis commute with the exterior derivative. Implement \
it. This is partially done.\n-If we introduce a second metric in the session \
then the volume element is not defined (not know how to define epsilon for a \
frozen metric)."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.1. GPL", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"xTerior", ":", " ", 
    RowBox[{
    "exterior", " ", "calculus", " ", "in", " ", "Differential", " ", 
     "Geometry"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Copyright", " ", 
     RowBox[{"(", "C", ")"}], " ", "2013", " ", "Alfonso", " ", "Garcia"}], 
    "-", 
    RowBox[{"Parrado", " ", "Gomez"}], "-", 
    RowBox[{"Lobo", " ", "and", " ", "Leo", " ", 
     RowBox[{"C", ".", " ", "Stein"}]}]}], " ", "*)"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "This", " ", "program", " ", "is", " ", "free", " ", "software"}], ";", 
     " ", 
     RowBox[{"you", " ", "can", " ", "redistribute", " ", "it", " ", 
      RowBox[{"and", "/", "or"}], " ", "modify", " ", "it", " ", "under", " ",
       "the", " ", "terms", " ", "of", " ", "the", " ", "GNU", " ", "General",
       " ", "Public", " ", "License", " ", "as", " ", "published", " ", "by", 
      " ", "the", " ", "Free", " ", "Software", " ", "Foundation"}], ";", " ", 
     RowBox[{
     "either", " ", "version", " ", "2", " ", "of", " ", "the", " ", 
      "License"}]}], ",", 
    RowBox[{"or", " ", 
     RowBox[{"(", 
      RowBox[{"at", " ", "your", " ", "option"}], ")"}], " ", "any", " ", 
     "later", " ", 
     RowBox[{
     "version", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "This"}], 
     " ", "program", " ", "is", " ", "distributed", " ", "in", " ", "the", 
     " ", "hope", " ", "that", " ", "it", " ", "will", " ", "be", " ", 
     "useful"}], ",", " ", 
    RowBox[{
     RowBox[{"but", " ", "WITHOUT", " ", "ANY", " ", "WARRANTY"}], ";", " ", 
     RowBox[{
     "without", " ", "even", " ", "the", " ", "implied", " ", "warranty", " ",
       "of", "\[IndentingNewLine]", "MERCHANTABILITY", " ", "or", " ", 
      "FITNESS", " ", "FOR", " ", "A", " ", "PARTICULAR", " ", 
      RowBox[{"PURPOSE", ".", " ", "See"}], " ", "the", " ", "GNU", " ", 
      "General", " ", "Public", " ", "License", " ", "for", " ", "more", " ", 
      
      RowBox[{
      "details", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "You"}], 
      " ", "should", " ", "have", " ", "received", " ", "a", " ", "copy", " ",
       "of", " ", "the", " ", "GNU", " ", "General", " ", "Public", " ", 
      "License", " ", "along", " ", "with", " ", "this", " ", "program"}], 
     ";", " ", 
     RowBox[{"if", " ", "not"}]}], ",", " ", 
    RowBox[{
    "write", " ", "to", " ", "the", " ", "Free", " ", "Software", " ", 
     "Foundation"}], ",", " ", 
    RowBox[{"Inc", "."}], ",", " ", 
    RowBox[{
     RowBox[{"59", " ", "Temple", " ", "Place"}], "-", 
     RowBox[{"Suite", " ", "330"}]}], ",", " ", "Boston", ",", " ", 
    RowBox[{
     RowBox[{"MA", " ", "02111"}], "-", "1307"}], ",", " ", 
    RowBox[{"USA", "."}]}], " ", "\[IndentingNewLine]", "*)"}]}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["1.2. Info package", "Subsubsection"],

Cell["\<\
(* :Title: xTerior *)

(* :Author: Alfonso Garcia-Parrado Gomez-Lobo and Leo C. Stein *)

(* :Summary: exterior calculus in Differential Geometry *)

(* :Brief Discussion:
   - xTerior extends xAct to work with differentiable forms in general \
manifolds.
   - Introduces the exterior algebra, the exterior derivative, the Hodge \
dual, the connection and curvature forms for an arbitrary connection, the \
exterior covariant derivative.
   
*)
  
(* :Context: xAct`xTerior` *)

(* :Package Version: 0.8.5 *)

(* :Copyright: Alfonso Garcia-Parrado Gomez-Lobo and Leo C. Stein (2013) *)

(* :History: See xTerior.History *)

(* :Keywords: *)

(* :Source: xTerior.nb *)

(* :Warning: *)

(* :Mathematica Version: 9.0 and later *)

(* :Limitations:
\t- ?? *)\
\>", "Input",
 PageWidth->PaperWidth,
 CellMargins->{{60, -272}, {Inherited, Inherited}},
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["1.3. BeginPackage", "Subsubsection"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xAct`xTerior`Private`xTeriorSymbols", "=", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Names", "[", "\"\<xAct`xTerior`*\>\"", "]"}], ",", 
         RowBox[{"Names", "[", "\"\<xAct`xTerior`Private`*\>\"", "]"}]}], 
        "]"}], ",", 
       RowBox[{
       "\"\<$Version\>\"", "|", "\"\<xAct`xTerior`$Version\>\"", "|", 
        "\"\<$xTensorVersionExpected\>\"", "|", 
        "\"\<xAct`xTerior`$xTensorVersionExpected\>\""}]}], "]"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Unprotect", "/@", "xAct`xTerior`Private`xTeriorSymbols"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Clear", "/@", "xAct`xTerior`Private`xTeriorSymbols"}], ";"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Unevaluated", "[", "xAct`xCore`Private`$LastPackage", "]"}], "===",
      "xAct`xCore`Private`$LastPackage"}], ",", 
    RowBox[{
    "xAct`xCore`Private`$LastPackage", "=", "\"\<xAct`xTerior`\>\""}]}], 
   "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData["xAct`xCore`Private`$LastPackage"], "Input"],

Cell[BoxData["\<\"xAct`xTerior`\"\>"], "Output"]
}, Open  ]],

Cell[TextData[{
 "Explicit (not hidden) import of ",
 StyleBox["xTensor",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 ", ",
 StyleBox["xPerm",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["xCore",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 ": ",
 StyleBox["Alfonso: do we need xCoba ?",
  FontWeight->"Bold"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BeginPackage", "[", 
  RowBox[{"\"\<xAct`xTerior`\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<xAct`xCoba`\>\"", ",", "\"\<xAct`xTensor`\>\"", ",", 
     "\"\<xAct`xPerm`\>\"", ",", "\"\<xAct`xCore`\>\""}], "}"}]}], 
  "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData["\<\"xAct`xTerior`\"\>"], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"Not", "@", 
    RowBox[{"OrderedQ", "@", 
     RowBox[{"Map", "[", 
      RowBox[{"Last", ",", 
       RowBox[{"{", 
        RowBox[{
        "xAct`xTerior`$xTensorVersionExpected", ",", 
         "xAct`xTensor`$Version"}], "}"}]}], "]"}]}]}], ",", 
   RowBox[{"Throw", "@", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"General", "::", "versions"}], ",", "\"\<xTensor\>\"", ",", 
      "xAct`xTensor`$Version", ",", "xAct`xTerior`$xTensorVersionExpected"}], 
     "]"}]}]}], "]"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", "xAct`xCore`Private`bars", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Package xAct`xTerior`  version \>\"", ",", 
    RowBox[{"xAct`xTerior`$Version", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<, \>\"", ",", 
    RowBox[{"xAct`xTerior`$Version", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "Print", "[", 
   "\"\<CopyRight (C) 2013, Alfonso Garcia-Parrado Gomez-Lobo and Leo C. \
Stein, under the General Public License.\>\"", "]"}], ";"}]}], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTerior`  version \"\>", 
   "\[InvisibleSpace]", "\<\"0.8.5\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2013", ",", "7", ",", "1"}], "}"}]}],
  SequenceForm["Package xAct`xTerior`  version ", "0.8.5", ", ", {2013, 7, 1}],
  Editable->False]], "Print"],

Cell[BoxData["\<\"CopyRight (C) 2013, Alfonso Garcia-Parrado Gomez-Lobo and \
Leo C. Stein, under the General Public License.\"\>"], "Print"]
}, Open  ]]
}, Open  ]],

Cell["\<\
We specify the context xAct`xTerior` to avoid overriding the Disclaimer of \
the other packages. However we need to turn off the message General:shdw \
temporarily:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{"Off", "[", 
  RowBox[{"General", "::", "shdw"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xAct`xTerior`Disclaimer", "[", "]"}], ":=", 
  RowBox[{
  "Print", "[", 
   "\"\<These are points 11 and 12 of the General Public \
License:\\n\\nBECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO \
WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT \
WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES \
PROVIDE THE PROGRAM `AS IS\.b4 WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED \
OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO \
THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM \
PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR \
CORRECTION.\\n\\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO \
IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY \
AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR \
DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES \
ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT \
LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED \
BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER \
PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE \
POSSIBILITY OF SUCH DAMAGES.\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"On", "[", 
  RowBox[{"General", "::", "shdw"}], "]"}]}], "Input",
 InitializationCell->True],

Cell[TextData[{
 "If ",
 StyleBox["xTerior",
  FontSlant->"Italic"],
 " is not being called from other package then write this GPL short \
disclaimer:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
   "xAct`xCore`Private`$LastPackage", "===", "\"\<xAct`xTerior`\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Unset", "[", "xAct`xCore`Private`$LastPackage", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "xAct`xCore`Private`bars", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
    "Print", "[", 
     "\"\<These packages come with ABSOLUTELY NO WARRANTY; for details type \
Disclaimer[]. This is free software, and you are welcome to redistribute it \
under certain conditions. See the General Public License for details.\>\"", 
     "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "xAct`xCore`Private`bars", "]"}]}]}], 
  "]"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print"],

Cell[BoxData["\<\"These packages come with ABSOLUTELY NO WARRANTY; for \
details type Disclaimer[]. This is free software, and you are welcome to \
redistribute it under certain conditions. See the General Public License for \
details.\"\>"], "Print"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Note that symbols in the Global` context cannot be accessed right now.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"xAct`xTerior`\"\>", ",", "\<\"xAct`xCoba`\"\>", 
   ",", "\<\"xAct`xTensor`\"\>", ",", "\<\"xAct`xPerm`\"\>", 
   ",", "\<\"xAct`xCore`\"\>", ",", "\<\"System`\"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$Context"], "Input"],

Cell[BoxData["\<\"xAct`xTerior`\"\>"], "Output"]
}, Open  ]],

Cell["Established connection to external executable?", "Text"],

Cell[CellGroupData[{

Cell[BoxData["$xpermQ"], "Input"],

Cell[BoxData["True"], "Output"]
}, Open  ]],

Cell[TextData[{
 "Private functions of ",
 StyleBox["xTensor",
  FontSlant->"Italic"],
 " used here :\n      ??"
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["1.4. Non-standard setup", "Subsubsection"],

Cell["Screen all dollar indices:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$PrePrint", "=", "ScreenDollarIndices"}], ";"}]], "Input",
 InitializationCell->True],

Cell["Switch off messages issued by ManifoldOfCovD acting on PD.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "@", "PD"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PD", "/:", 
  RowBox[{
   RowBox[{"ManifoldOfCovD", "@", "PD"}], "=."}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "@", "PD"}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"TagUnset", "::", "norep"}], "MessageName"], ":", 
  " ", "\<\"Assignment on \[NoBreak]\\!\\(PD\\)\[NoBreak] for \
\[NoBreak]\\!\\(ManifoldOfCovD[PD]\\)\[NoBreak] not found. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/TagUnset/norep\\\", \
ButtonNote -> \\\"TagUnset::norep\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData["$Failed"], "Output"]
}, Open  ]],

Cell["\<\
Timings will be shown if they are above 1 Second (Only for this notebook; \
this is not included in the package):\
\>", "Text"],

Cell[BoxData[
 RowBox[{"<<", "xAct/ShowTime1.m"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData["$ShowTimeThreshold"], "Input"],

Cell[BoxData["1"], "Output"]
}, Open  ]],

Cell[TextData[{
 "We also read the package (this is not automatic in ",
 StyleBox["xCore",
  FontSlant->"Italic"],
 " anymore since its version 0.6.2). This is not included in the package."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "xAct/ExpressionManipulation.m"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], ":", 
  " ", "\<\"Tag \[NoBreak]\\!\\(ColorPositions\\)\[NoBreak] in \
\[NoBreak]\\!\\(Options[ColorPositions]\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetDelayed", "::", "write"}], "MessageName"], ":", 
  " ", "\<\"Tag \[NoBreak]\\!\\(ColorPositions\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\(\\(ColorPositions[\\(\\(positionlist_, \\(\\(opts___ ? \
OptionQ\\)\\)\\)\\)]\\)\\)[expr_]\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"SetDelayed::write\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetDelayed", "::", "write"}], "MessageName"], ":", 
  " ", "\<\"Tag \[NoBreak]\\!\\(CompleteTheSquare\\)\[NoBreak] in \
\[NoBreak]\\!\\(CompleteTheSquare[\\(\\(expr_, \\(\\(var_ : x\\)\\)\\)\\)]\\)\
\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"SetDelayed::write\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetDelayed", "::", "wrsym"}], "MessageName"], ":", 
  " ", "\<\"Symbol \[NoBreak]\\!\\(ErsekComplexity\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/wrsym\\\", \
ButtonNote -> \\\"SetDelayed::wrsym\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "wrsym"}], "MessageName"], ":", 
  " ", "\<\"Symbol \[NoBreak]\\!\\(ErsekComplexity\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/wrsym\\\", \
ButtonNote -> \\\"Set::wrsym\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetDelayed", "::", "write"}], "MessageName"], ":", 
  " ", "\<\"Tag \[NoBreak]\\!\\(EvaluateAt\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\(\\(EvaluateAt[\\(\\(\\(\\(posn : \\(\\(_Integer | \
\\(\\({__Integer}\\)\\)\\)\\)\\)\\), \\(\\(f_ : \
Identity\\)\\)\\)\\)]\\)\\)[expr_]\\)\[NoBreak] is Protected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/write\\\", \
ButtonNote -> \\\"SetDelayed::write\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(SetDelayed :: \
write\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["1.5. Usage messages ", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Definition", " ", "and", " ", "undefinition", " ", "of", " ", "a", " ", 
    "differential", " ", "form", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
      "just", " ", "a", " ", "wrapper", " ", "for", " ", "DefTensor", " ", 
       "with", " ", "the", " ", "option", " ", "GradeOfTensor"}], "\[Rule]", 
      RowBox[{"{", "Wedge", "}"}]}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DefDiffForm", "::", "usage"}], "=", 
     "\"\<DefDiffForm[form[inds], mani, Deg] defines a tensor valued \
differential form of degree deg on the manifold mani\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UndefDiffForm", "::", "usage"}], "=", 
     "\"\<UndefDiffForm[form] undefines the differential form form\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Grade", " ", "of", " ", "a", " ", "differential", " ", "form"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Deg", "::", "usage"}], "=", 
     "\"\<Deg[form] returns the grade of a differential form\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DiffFormQ", "::", "usage"}], "=", 
     "\"\<DiffFormQ is an option for LieToCovD which specifies whether the \
expression which is acted upon should be regarded as a differential form or \
not. This is an option added by xTerior and it is not present any other \
package using LieToCovD.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Exterior", " ", "derivative", " ", "and", " ", "exterior", " ", 
     "covariant", " ", "derivative"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Diff", "::", "usage"}], "=", 
     "\"\<Diff[form] computes the exterior derivative of form. \
Diff[form,covd] computes the exterior covariant derivative of form with \
respect to the covariant derivative covd.\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Computation", " ", "of", " ", "the", " ", "exterior", " ", "covariant", 
     " ", "derivative"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ChangeExtD", "::", "usage"}], "=", 
     "\"\<ChangeExtD[expr,cd1,cd2] expresses the exterior covariant \
derivative taken with respect to the connection defined by the covariant \
derivative cd1 in terms of the exterior covariant derivative taken with \
respect to the connection defined by the covariant derivative cd2\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Hodge", " ", "dual"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Hodge", "::", "usage"}], "=", 
     "\"\<Hodge[metric][expr] is the Hodge dual of expr defined with respect \
to metric\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExpandHodgeDual", "::", "usage"}], "=", 
     "\"\<ExpandHodgeDual[expr,Coframe[mani],g] expands out all the Hodge \
duals of the exterior powers of Coframe[mani], defined with respect to the \
metric g. If the manifold tag mani is dropped, then all the instances of \
Coframe are expanded. The Coframe label can be replaced by dx if we are using \
the holonomic coframe.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Co", "-", "differential"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Codiff", "::", "usage"}], "=", 
     "\"\<Codiff[metric][form] is the co-differential of form computed with \
respect to metric\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Expansion", " ", "of", " ", "the", " ", "co"}], "-", 
     "differential"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CodiffToDiff", "::", "usage"}], "=", 
     "\"\<CodiffToDiff[expr] replaces all the instances of the \
co-differential in expr by their expansion in terms of the exterior \
derivative.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Interior", " ", "contraction"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Int", "::", "usage"}], "=", 
     "\"\<Int[v][form] is the interior contraction of form with the vector \
(rank 1-tensor) v\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Lie", " ", "derivative", " ", "on", " ", "forms"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CartanD", "::", "usage"}], "=", 
     "\"\<CartanD[v][form] is the Cartan derivative of form with respect to \
the vector (rank 1-tensor) v. CartanD[v][form,covd] is the Cartan derivative \
with respect to the covariant derivative covd.\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Cartan", " ", "formula", " ", "for", " ", "Lie", " ", "derivatives"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CartanDToDiff", "::", "usage"}], "=", 
     "\"\<CartanDToDiff[expr] replaces the Cartan derivative of all the \
differential forms in expr by their expansion obtained by means of the Cartan \
formula\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Put", " ", "derivations", " ", "into", " ", "canonical", " ", "order"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SortDerivations", "::", "usage"}], "=", 
     "\"\<SortDerivations[expr] brings expr into a new expression where all \
the derivations (exterior derivative, Lie derivative and interior \
contraction) are written in a canonical order. The default left-to-right \
order is defined by the variable $DerivationSortOrder\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"$DerivationSortOrder", "::", "usage"}], "=", 
     "\"\<$DerivationSortOrder is a global variable which encodes the default \
ordering of the three derivatives Int, LieD and Diff. The default is \
{LieD,Int,Diff}\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Variational", " ", "derivative", " ", "on", " ", "forms"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FormVarD", "::", "usage"}], "=", 
     "\"\<FormVarD[form,metric][expr] computes the variational derivative of \
expr, which must be a n-form with n the manifold dimension, with respect to \
form. In the computation, exterior derivatives are transformed into \
co-differentials taken with respect of metric.\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Canonical", " ", "forms", " ", "on", " ", "the", " ", "frame", " ", 
     "bundle"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Coframe", "::", "usage"}], "=", 
     "\"\<Coframe[mani] is the set of canonical 1-forms defined in the frame \
bundle arising from the manifold mani\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dx", "::", "usage"}], "=", 
     "\"\<dx[mani] represents a holonomic co-frame in the manifold \
mani.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"The", " ", "connection", " ", "1"}], "-", "form"}], " ", "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ConnectionForm", "::", "usage"}], "=", 
     "\"\<ConnectionForm[cd,vbundle] represents the connection 1-form \
associated to the covariant derivatives cd defined in the bundle vbundle. If \
vbundle is the tangent bundle of a differentiable manifold then \
ConnectionForm is automatically replaced by ChristoffelForm (see the on-line \
help of ChristoffelForm for further details).\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"The", " ", "curvature", " ", "2"}], "-", "form"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CurvatureForm", "::", "usage"}], "=", 
     "\"\<CurvatureForm[cd,vbundle] represents the curvature 2-form \
associated to the covariant derivative cd. If vbundle is the tangent bundle \
of a differentiable manifold then CurvatureForm is replaced by \
RiemannForm\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Connection", " ", "2"}], "-", 
     RowBox[{
     "form", " ", "for", " ", "a", " ", "connection", " ", "in", " ", "a", 
      " ", "frame", " ", "bundle"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ChristoffelForm", "::", "usage"}], "=", 
     "\"\<ChristoffelForm[cd] is the connection 1-form associated to the \
covariant derivative cd which is a covariant derivative in the tangent bundle \
of a manifold\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Curvature", " ", "2"}], "-", 
     RowBox[{
     "form", " ", "for", " ", "a", " ", "connection", " ", "in", " ", "a", 
      " ", "frame", " ", "bundle"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RiemannForm", "::", "usage"}], "=", 
     "\"\<RiemannForm[cd] is the curvature 2-form associated to the covariant \
derivative cd which is a covariant derivative in the frame bundle of a \
manifold\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Transformation", " ", "of", " ", "the", " ", "connection", " ", "form", 
     " ", "to", " ", "the", " ", "connection", " ", "tensor"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ConnectionFormToTensor", "::", "usage"}], "=", 
     "\"\<ConnectionFormToTensor[expr,covd,frame] transforms all instances of \
the connection form into the (A)Christoffel tensor which relates the \
covariant derivative defining the connection form and covd. The variable \
frame can take the value of either Coframe or dx. If the (A)Christoffel \
tensor does not exist it is created automatically.\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CurvatureFormToTensor", "::", "usage"}], "=", 
     "\"\<CurvatureFormToTensor[expr,frame] transforms all the instances of \
the curvature form into the related Riemann or FRiemann tensor, inserting the \
corresponding frame (either Coframe or dx).\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ChangeCurvatureForm", "::", "usage"}], "=", 
     "\"\<ChangeCurvatureForm[curvature,cd1,cd2] writes the curvature 2-form \
curvature[cd1,vbundle] in terms of the curvature 2-form \
curvature[cd2,vbundle]\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"The", " ", "torsion", " ", "2"}], "-", "form"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TorsionForm", "::", "usage"}], "=", 
     "\"\<TorsionForm[cd] represents the torsion 2-form arising from the \
covariant derivative cd (cd must be defined on the tangent bundle of a \
manifold)\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Cartan", " ", "structure", " ", "equations"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UseCartan", "::", "usage"}], "=", 
     "\"\<UseCartan[expr,covd] expands all the instances of the Diff using \
the Cartan structure equations for the connection arising from covd. In this \
way it is possible to expand the exterior derivative of a co-frame, a torsion \
2-form and the curvature 2-form. If covd is the Levi-Civita connection of a \
metric, then the exterior derivatives of that metric and its volume element \
are expanded too. UseCartan[expr,PD] expands all instances of the exterior \
derivative in terms of partial derivatives defined in the list of manifolds \
returned by ManifoldsOf[expr]. It is possible to specify a custom list of \
manifolds as a third argument in the form \
UseCartan[expr,PD,{M1,M2,..}]\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Zero", " ", "forms"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ZeroDegQ", "::", "usage"}], "=", 
     "\"\<ZeroDegQ[expr] returns True if the degree of expr is zero\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UseDimensionStart", "::", "usage"}], "=", 
     "\"\<UseDimensionStart[] is an instruction that, when issued, makes any \
expression with degree greater than the manifold dimension equal to \
zero.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UseDimensionStop", "::", "usage"}], "=", 
     "\"\<UseDimensionStop[] cancels the action of UseDimensionStart[]\>\""}],
     ";"}]}]}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["1.6. Begin private", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData["\<\"xAct`xTerior`Private`\"\>"], "Output"]
}, Open  ]],

Cell["There are ?? reserved words in version 0.8.5 :", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<xAct`xTerior`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"CartanD\"\>", ",", "\<\"CartanDToDiff\"\>", 
   ",", "\<\"ChangeCurvatureForm\"\>", ",", "\<\"ChangeExtD\"\>", 
   ",", "\<\"ChristoffelForm\"\>", ",", "\<\"Codiff\"\>", 
   ",", "\<\"CodiffToDiff\"\>", ",", "\<\"Coframe\"\>", 
   ",", "\<\"ConnectionForm\"\>", ",", "\<\"ConnectionFormToTensor\"\>", 
   ",", "\<\"CurvatureForm\"\>", ",", "\<\"CurvatureFormToTensor\"\>", 
   ",", "\<\"DefDiffForm\"\>", ",", "\<\"Deg\"\>", ",", "\<\"Diff\"\>", 
   ",", "\<\"DiffFormQ\"\>", ",", "\<\"Disclaimer\"\>", ",", "\<\"dx\"\>", 
   ",", "\<\"ExpandHodgeDual\"\>", ",", "\<\"FormVarD\"\>", 
   ",", "\<\"Hodge\"\>", ",", "\<\"Int\"\>", ",", "\<\"RiemannForm\"\>", 
   ",", "\<\"SortDerivations\"\>", ",", "\<\"TorsionForm\"\>", 
   ",", "\<\"UndefDiffForm\"\>", ",", "\<\"UseCartan\"\>", 
   ",", "\<\"UseDimensionStart\"\>", ",", "\<\"UseDimensionStop\"\>", 
   ",", "\<\"ZeroDegQ\"\>", ",", "\<\"$DerivationSortOrder\"\>", 
   ",", "\<\"$Version\"\>", ",", "\<\"$xTensorVersionExpected\"\>"}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Length"}]], "Input"],

Cell[BoxData["33"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$ContextPath"], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"xAct`ExpressionManipulation`\"\>", 
   ",", "\<\"Utilities`ShowTime`\"\>", ",", "\<\"xAct`xTerior`\"\>", 
   ",", "\<\"xAct`xCoba`\"\>", ",", "\<\"xAct`xTensor`\"\>", 
   ",", "\<\"xAct`xPerm`\"\>", ",", "\<\"xAct`xCore`\"\>", 
   ",", "\<\"System`\"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$Context"], "Input"],

Cell[BoxData["\<\"xAct`xTerior`Private`\"\>"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["%"], "Input"],

Cell[BoxData["\<\"xAct`xTerior`Private`\"\>"], "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Basic structures", "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell["2.1 Definition of the wedge product", "Subsubsection"],

Cell["\<\
The wedge product is an associative, anticommutative (actually \
supercommutative) graded product with identity 1. The scalars are those \
objects of grade 0, including the identity 1, so that the scalars are \
actually in this case true elements of the algebra. The product by scalar and \
the product of scalars are both Times, so we do not need to specify them.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefProduct", "[", 
   RowBox[{"Wedge", ",", "\[IndentingNewLine]", 
    RowBox[{"AssociativeProductQ", "\[Rule]", "True"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"CommutativityOfProduct", "\[Rule]", "\"\<SuperCommutative\>\""}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"GradedProductQ", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"IdentityElementOfProduct", "\[Rule]", "1"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ScalarsOfProduct", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"SameQ", "[", 
        RowBox[{
         RowBox[{"Grade", "[", 
          RowBox[{"#", ",", "Wedge"}], "]"}], ",", "0"}], "]"}], "&"}], 
      ")"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"DefInfo", "\[Rule]", "Null"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "When working with the exterior algebra the grade is typically called ",
 StyleBox["degree",
  FontSlant->"Italic"],
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Deg", "[", "expr_", "]"}], ":=", 
   RowBox[{"Grade", "[", 
    RowBox[{"expr", ",", "Wedge"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell["Scalars have zero degree:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Deg", "[", "2", "]"}]], "Input"],

Cell[BoxData["0"], "Output"]
}, Open  ]],

Cell["\<\
A product of scalars is automatically converted into a scalar:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "\[Wedge]", "2", "\[Wedge]", "3"}]], "Input"],

Cell[BoxData["6"], "Output"]
}, Open  ]],

Cell["\<\
The wedge product is eliminated when found with only one argument:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Wedge", "[", "a", "]"}], "//", "FullForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox["a",
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]],

Cell["Note that parentheses are needed sometimes. Compare", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Hold", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a", "\[Wedge]", "3"}], ")"}], "b"}], "]"}], ",", 
   RowBox[{"Hold", "[", 
    RowBox[{"a", "\[Wedge]", 
     RowBox[{"(", 
      RowBox[{"3", "b"}], ")"}]}], "]"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Hold", "[", 
    RowBox[{
     RowBox[{"a", "\[Wedge]", "3"}], " ", "b"}], "]"}], ",", 
   RowBox[{"Hold", "[", 
    RowBox[{"a", "\[Wedge]", 
     RowBox[{"(", 
      RowBox[{"3", " ", "b"}], ")"}]}], "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "FullForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"Hold", "[", 
      RowBox[{"Times", "[", 
       RowBox[{
        RowBox[{"Wedge", "[", 
         RowBox[{"a", ",", "3"}], "]"}], ",", "b"}], "]"}], "]"}], ",", 
     RowBox[{"Hold", "[", 
      RowBox[{"Wedge", "[", 
       RowBox[{"a", ",", 
        RowBox[{"Times", "[", 
         RowBox[{"3", ",", "b"}], "]"}]}], "]"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]],

Cell["\<\
Vanishing of forms whose degree is higher than the manifold(s) dimension.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Code", " ", "added", " ", "by", " ", "Jos\[EAcute]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"$UseDimensionsQ", "=", "False"}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"$DimensionsZeroForms", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SetZeroForm", "[", "form_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"GradeOfTensor", "[", 
         RowBox[{"form", ",", "Wedge"}], "]"}], ">", 
        RowBox[{"Plus", "@@", 
         RowBox[{"(", 
          RowBox[{"DimOfManifold", "/@", 
           RowBox[{"DependenciesOfTensor", "[", "form", "]"}]}], ")"}]}]}], 
       ",", 
       RowBox[{
        RowBox[{
         RowBox[{"form", "[", "___", "]"}], "=", "0"}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"$DimensionsZeroForms", ",", "form"}], "]"}]}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UnsetZeroForm", "[", "form_", "]"}], ":=", 
     RowBox[{"Unset", "[", 
      RowBox[{"form", "[", "___", "]"}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UseDimensionStart", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{"$UseDimensionsQ", ",", 
         RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"$UseDimensionsQ", "=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Forms", " ", "whose", " ", "degree", " ", "is", " ", "greater", " ", 
         "than", " ", "the", " ", "dimension"}], "*)"}], 
       RowBox[{"SetZeroForm", "/@", "$Tensors"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{
        "Expressions", " ", "which", " ", "are", " ", "wedge", " ", 
         "products"}], "*)"}], 
       RowBox[{
        RowBox[{"HoldPattern", "@", 
         RowBox[{"Wedge", "[", "expr__", "]"}]}], ":=", 
        RowBox[{"0", "/;", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Plus", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Grade", "[", 
                RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
              RowBox[{"{", "expr", "}"}]}], ")"}]}], ">", 
           RowBox[{"(", 
            RowBox[{"Plus", "@@", 
             RowBox[{"(", 
              RowBox[{"DimOfManifold", "/@", "$Manifolds"}], ")"}]}], ")"}]}],
           ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Expressions", " ", "which", " ", "are", " ", "exterior", " ", 
         "derivatives"}], "*)"}], 
       RowBox[{
        RowBox[{"HoldPattern", "@", 
         RowBox[{"Diff", "[", 
          RowBox[{"expr_", ",", "PD"}], "]"}]}], ":=", 
        RowBox[{"0", "/;", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"Plus", "@@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Grade", "[", 
                 RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
               RowBox[{"{", "expr", "}"}]}], ")"}]}]}], ">", 
           RowBox[{"(", 
            RowBox[{"Plus", "@@", 
             RowBox[{"(", 
              RowBox[{"DimOfManifold", "/@", "$Manifolds"}], ")"}]}], ")"}]}],
           ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "@", 
         RowBox[{"Diff", "[", 
          RowBox[{"expr_", ",", "covd_"}], "]"}]}], ":=", 
        RowBox[{"0", "/;", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"Plus", "@@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Grade", "[", 
                 RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
               RowBox[{"{", "expr", "}"}]}], ")"}]}]}], ">", 
           RowBox[{"(", 
            RowBox[{"Plus", "@@", 
             RowBox[{"(", 
              RowBox[{"DimOfManifold", "/@", "$Manifolds"}], ")"}]}], ")"}]}],
           ")"}]}]}], ";"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"UseDimensionStop", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", "$UseDimensionsQ"}], ",", 
         RowBox[{"Return", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"$UseDimensionsQ", "=", "False"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"UnsetZeroForm", "/@", 
        RowBox[{"Union", "@", "$DimensionsZeroForms"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "@", 
         RowBox[{"Wedge", "[", "expr__", "]"}]}], "=."}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "@", 
         RowBox[{"Diff", "[", 
          RowBox[{"expr_", ",", "PD"}], "]"}]}], "=."}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "@", 
         RowBox[{"Diff", "[", 
          RowBox[{"expr_", ",", "covd_"}], "]"}]}], "=."}], ";"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "xTensions", " ", "*)"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xTension", "[", 
      RowBox[{"\"\<xTerior`\>\"", ",", "DefTensor", ",", "\"\<End\>\""}], 
      "]"}], ":=", "DefTensorUseDimensions"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"DefTensorUseDimensions", "[", 
      RowBox[{
       RowBox[{"tensor_", "[", "inds___", "]"}], ",", "__"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{"$UseDimensionsQ", ",", 
       RowBox[{"SetZeroForm", "[", "tensor", "]"}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xTension", "[", 
      RowBox[{
      "\"\<xTerior`\>\"", ",", "UndefTensor", ",", "\"\<Beginning\>\""}], 
      "]"}], ":=", "UndefTensorUseDimensions"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"UndefTensorUseDimensions", "[", "tensor_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{"$UseDimensionsQ", ",", 
       RowBox[{"UnsetZeroForm", "[", "tensor", "]"}]}], "]"}]}], ";"}], 
   "\n"}]}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
2.2 Definition of the CircleTimes product\
\>", "Subsubsection"],

Cell["\<\
By default we define the CircleTimes \[OpenCurlyDoubleQuote]\[CircleTimes]\
\[CloseCurlyDoubleQuote] product.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"DefProduct", "[", 
  RowBox[{"CircleTimes", ",", "\[IndentingNewLine]", 
   RowBox[{"AssociativeProductQ", "\[Rule]", "True"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"IdentityElementOfProduct", "\[Rule]", "1"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"GradedProductQ", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"ScalarsOfProduct", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"SameQ", "[", 
       RowBox[{
        RowBox[{"Grade", "[", 
         RowBox[{"#", ",", "CircleTimes"}], "]"}], ",", "0"}], "]"}], "&"}], 
     ")"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PrintAs", "\[Rule]", "\"\<\[CircleTimes]\>\""}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 InitializationCell->True],

Cell["\<\
Exterior algebra grade and tensor grade should coincide on elementary objects:\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CircleTimes", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{"head_", ",", "CircleTimes"}], "]"}], ":=", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{"head", ",", "Wedge"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell["\<\
We also need to specify the Grade of the inert - head expressions :\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CircleTimes", "/:", 
   RowBox[{"Grade", "[", 
    RowBox[{
     RowBox[{"Diff", "[", 
      RowBox[{"expr_", ",", "_"}], "]"}], ",", "CircleTimes"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Grade", "[", 
     RowBox[{"expr", ",", "CircleTimes"}], "]"}], "+", "1"}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"CircleTimes", "/:", 
   RowBox[{"Grade", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Hodge", "[", "metricg_", "]"}], "[", "expr_", "]"}], ",", 
     "CircleTimes"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"DimOfVBundle", "[", 
     RowBox[{"VBundleOfMetric", "[", "metricg", "]"}], "]"}], "-", 
    RowBox[{"Grade", "[", 
     RowBox[{"expr", ",", "CircleTimes"}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->True],

Cell["\<\
The CircleTimes - grade of a form coincides with the Wedge - grade of that \
form. However, the Wedge - grade is not well defined for generic expressions \
having positive CircleTimes - grade unless they are forms.That is why we have \
given CircleTimes - grade in terms of Wedge - grade and not viceversa.There \
is no general way in which we can know the relations between the grades of a \
given expression in several products.The user must define carefully the \
relations. Usually it is safer to declare independently the grades in each \
product. Recall that objects for which a grade has not been given are taken \
to have degree 0.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.1 Definition and undefinition of differential forms", "Subsubsection"],

Cell["\<\
Definition and undefinition of differential forms. This is simply DefTensor \
with the appropriate options\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "DefDiffForm"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"DefDiffForm[form[inds], mani, Deg] defines a tensor valued \
differential form of degree deg on the manifold mani\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3599826461-4210687"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefDiffForm", "[", 
   RowBox[{"form_", ",", "mani_", ",", "deg_", ",", 
    RowBox[{"options___", "?", "OptionQ"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"DefTensor", "[", 
     RowBox[{"form", ",", "mani", ",", 
      RowBox[{"GradeOfTensor", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Wedge", "\[Rule]", "deg"}], "}"}]}], ",", "options"}], "]"}],
     ";"}], "\[IndentingNewLine]", ")"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefDiffForm", "[", 
   RowBox[{"form_", ",", "mani_", ",", "deg_", ",", "sym_", ",", 
    RowBox[{"options___", "?", "OptionQ"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"DefTensor", "[", 
     RowBox[{"form", ",", "mani", ",", "sym", ",", 
      RowBox[{"GradeOfTensor", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Wedge", "\[Rule]", "deg"}], "}"}]}], ",", "options"}], "]"}],
     ";"}], "\[IndentingNewLine]", ")"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "DefDiffForm"}], ":=", 
   RowBox[{"Options", "@", "DefTensor"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"UndefDiffForm", ":=", "UndefTensor"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"Protect", "[", 
   RowBox[{"DefDiffForm", ",", "UndefDiffForm"}], "]"}], ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["2.3 Graded derivations", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "@", "DefInertHead"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"LinearQ", "\[Rule]", "False"}], ",", 
   RowBox[{"ContractThrough", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Master", "\[Rule]", "Null"}], ",", 
   RowBox[{"PrintAs", "\[Rule]", "Identity"}], ",", 
   RowBox[{"ProtectNewSymbol", "\[RuleDelayed]", "$ProtectNewSymbols"}], ",", 
   
   RowBox[{"DefInfo", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"inert head\"\>", ",", "\<\"\"\>"}], "}"}]}]}], 
  "}"}]], "Output"]
}, Open  ]],

Cell["\<\
This function will be used to declare the three derivations we need, namely \
diff, Int[v] and lie[v]. 
Alfonso: Question: should this function be public ? Do we need \
\[OpenCurlyDoubleQuote]UndefGradedDerivation ? I guess the answer is no.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "DefGradedDerivation", "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"PrintAs", "\[Rule]", "Identity"}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GradeOfDerivation", "[", 
    RowBox[{
     RowBox[{"head_", "[", 
      RowBox[{"v_", ",", "rest___"}], "]"}], ",", "prod_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"GradeOfDerivation", "[", 
     RowBox[{"head", ",", "prod"}], "]"}], "+", 
    RowBox[{"Grade", "[", 
     RowBox[{"v", ",", "prod"}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DefGradedDerivation", "[", 
    RowBox[{"der_", ",", 
     RowBox[{"prod_", "?", "ProductQ"}], ",", 
     RowBox[{"dergrade_:", "0"}], ",", 
     RowBox[{"options", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"head", "=", 
       RowBox[{"SubHead", "[", "der", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "pa", "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "pa", "}"}], "=", 
         RowBox[{"OptionValue", "[", 
          RowBox[{"{", "PrintAs", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "DefInertHead", " ", "will", " ", "take", " ", "care", " ", "of", 
           " ", "scalar"}], "-", 
          RowBox[{"homogeneity", " ", "and", " ", "linearity"}]}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"DefInertHead", "[", 
         RowBox[{"der", ",", "\[IndentingNewLine]", 
          RowBox[{"LinearQ", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
          
          RowBox[{"ContractThrough", "\[Rule]", 
           RowBox[{"{", "delta", "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"PrintAs", "\[Rule]", "pa"}], ",", 
          RowBox[{"DefInfo", "\[Rule]", "Null"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Other", " ", "properties", " ", "of", " ", "a", " ", "derivation"}],
          " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"MakeDerivation", "[", 
         RowBox[{"head", ",", "der", ",", 
          RowBox[{"NoPattern", "[", "der", "]"}], ",", "prod", ",", 
          "dergrade"}], "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Nonatomic", " ", "derivation"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"der", "=!=", "head"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "additivity", " ", "in", " ", "the", " ", "vector", " ", "slot", 
            " ", 
            RowBox[{"(", 
             RowBox[{"but", " ", "not", " ", 
              RowBox[{"homogeneity", "!"}]}], ")"}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"head", "[", "0", "]"}], "[", "__", "]"}], ":=", "0"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"head", "[", "v_Plus", "]"}], "[", "args__", "]"}], ":=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"head", "[", "#", "]"}], "[", "args", "]"}], "&"}], "/@",
              "v"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "Subscript", " ", "vector", " ", "argument", " ", "for", " ", 
             "formatting"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"pa", "===", "Identity"}], ",", 
             RowBox[{"pa", "=", 
              RowBox[{"PrintAs", "[", "head", "]"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"head", "/:", 
            RowBox[{"MakeBoxes", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"head", "[", "v_", "]"}], "[", "form_", "]"}], ",", 
              "StandardForm"}], "]"}], ":=", 
            RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"head", "[", "v", "]"}], "[", "form", "]"}], ",", 
              RowBox[{"RowBox", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"SubscriptBox", "[", 
                  RowBox[{"pa", ",", 
                   RowBox[{"MakeBoxes", "[", 
                    RowBox[{
                    RowBox[{"Short", "@", "v"}], ",", "StandardForm"}], 
                    "]"}]}], "]"}], ",", "\"\<[\>\"", ",", 
                 RowBox[{"MakeBoxes", "[", 
                  RowBox[{"form", ",", "StandardForm"}], "]"}], ",", 
                 "\"\<]\>\""}], "}"}], "]"}]}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell["\<\
This part is separated in order to avoid renaming confusion between derL and \
derR:\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MakeDerivation", "[", 
    RowBox[{
    "head_", ",", "derL_", ",", "derR_", ",", "prod_", ",", "dergrade_"}], 
    "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"grade", "=", 
       RowBox[{"GradeOfDerivation", "[", 
        RowBox[{"derR", ",", "prod"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Addition", " ", "of", " ", "grades", " ", "in", " ", "algebra"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"head", "/:", 
       RowBox[{"GradeOfDerivation", "[", 
        RowBox[{"head", ",", "prod"}], "]"}], ":=", "dergrade"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"head", "/:", 
       RowBox[{"Grade", "[", 
        RowBox[{
         RowBox[{"derL", "[", 
          RowBox[{"expr_", ",", "___"}], "]"}], ",", "prod"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"Grade", "[", 
         RowBox[{"expr", ",", "prod"}], "]"}], "+", "grade"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"The", " ", 
        RowBox[{"(", "graded", ")"}], " ", "Leibniz", " ", "rule"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"derL", "[", 
        RowBox[{"expr_prod", ",", "rest___"}], "]"}], ":=", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sumgrades", "=", 
           RowBox[{"FoldList", "[", 
            RowBox[{"Plus", ",", "0", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Grade", "[", 
                RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
              RowBox[{"List", "@@", "expr"}]}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Sum", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"grade", " ", "*", " ", 
               RowBox[{"sumgrades", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], " ", ")"}]}], 
            "\[IndentingNewLine]", 
            RowBox[{"MapAt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"derR", "[", 
                RowBox[{"#", ",", "rest"}], "]"}], "&"}], ",", "expr", ",", 
              "i"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "expr", "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"QUESTION", ":", " ", 
        RowBox[{
        "Agreement", " ", "with", " ", "a", " ", "regular", " ", "derivative",
          " ", "when", " ", "acting", " ", "on", " ", "scalar", " ", 
         "functions", "??"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"derL", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"func_", "?", "ScalarFunctionQ"}], "[", "args__", "]"}], 
         ",", "rest___"}], "]"}], ":=", 
       RowBox[{"xAct`xTensor`Private`multiD", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"derR", "[", 
           RowBox[{"#", ",", "rest"}], "]"}], "&"}], ",", 
         RowBox[{"func", "[", "args", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "Dependencies", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"AtomQ", "[", "derR", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"head", "/:", 
         RowBox[{"DependenciesOfInertHead", "[", "derL", "]"}], ":=", 
         RowBox[{"DependenciesOf", "[", 
          RowBox[{"First", "[", "derR", "]"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell["\<\
Jose: Leo, I don\[CloseCurlyQuote]t understand that QUESTION there.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.4 Exterior differentiation", "Subsubsection"],

Cell["\<\
The second key ingredient for exterior algebra is the differential operator. \
This a concept defined per manifold, or equivalently per tangent-bundle, \
though in this notebook we create only one differential operator.\
\>", "Text"],

Cell["\<\
[Jose: The user can define separated structures with different names, but \
perhaps some predefined objects should be defined in DefTensor/DefVBundle, \
perhaps with a dedicated command/option DefFormStructure.]\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Diff"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"Diff[form] computes the exterior derivative of form. \
Diff[form,covd] computes the exterior covariant derivative of form with \
respect to the covariant derivative covd.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3599826462-4210687"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefGradedDerivation", "[", 
   RowBox[{"Diff", ",", "Wedge", ",", 
    RowBox[{"+", "1"}], ",", 
    RowBox[{"PrintAs", "\[Rule]", "\"\<d\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell["Superscript formatting for covariant exterior derivatives", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Diff", "/:", 
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{"Diff", "[", 
      RowBox[{"form_", ",", 
       RowBox[{"PD", "?", "CovDQ"}]}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
   RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
    RowBox[{
     RowBox[{"Diff", "[", 
      RowBox[{"form", ",", "PD"}], "]"}], ",", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PrintAs", "[", "Diff", "]"}], ",", "\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}], ",", "\"\<]\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Diff", "/:", 
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{"Diff", "[", 
      RowBox[{"form_", ",", 
       RowBox[{"cd_", "?", "CovDQ"}]}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
   RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
    RowBox[{
     RowBox[{"Diff", "[", 
      RowBox[{"form", ",", "cd"}], "]"}], ",", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SuperscriptBox", "[", 
         RowBox[{
          RowBox[{"PrintAs", "[", "Diff", "]"}], ",", 
          RowBox[{"Last", "@", 
           RowBox[{"SymbolOfCovD", "[", "cd", "]"}]}]}], "]"}], ",", 
        "\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}], ",", "\"\<]\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Diff", "[", 
    RowBox[{
     RowBox[{"x_", "?", "ConstantQ"}], ",", "rest___"}], "]"}], ":=", "0"}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell["We always have PD as the covariant derivative.", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HoldPattern", "[", 
   RowBox[{"Diff", "[", "expr_", "]"}], "]"}], ":=", 
  RowBox[{"Diff", "[", 
   RowBox[{"expr", ",", "PD"}], "]"}]}]], "Input",
 InitializationCell->True],

Cell["The exterior derivative applied twice is zero:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HoldPattern", "[", 
   RowBox[{"Diff", "[", 
    RowBox[{"expr_Diff", ",", "PD"}], "]"}], "]"}], ":=", "0"}]], "Input",
 InitializationCell->True],

Cell["Exterior derivative of basis objects is zero.", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Diff", "[", 
    RowBox[{"_Basis", ",", "PD"}], "]"}], ":=", "0"}], ";"}]], "Input",
 InitializationCell->True],

Cell["Thread over lists and equal", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Diff", "@", "expr_List"}], ":=", 
   RowBox[{"Diff", "/@", "expr"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Diff", "@", "expr_Equal"}], ":=", 
   RowBox[{"Diff", "/@", "expr"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell["We still need definition when acting on Times", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "produces", " ", "expanded", " ", "expressions", " ", "and", 
    " ", "is", " ", "much", " ", "faster", " ", "when", " ", "there", " ", 
    "are", " ", "many", " ", "scalars"}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Diff", "[", 
      RowBox[{"expr_Times", ",", "rest___"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"grades", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Grade", "[", 
             RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
           RowBox[{"List", "@@", "expr"}]}]}], ",", "pos", ",", "scalar", ",",
          "form"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pos", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"grades", ",", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "=!=", "0"}], "&"}], ")"}]}], ",", "1", ",", 
           RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Which", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], ">", "1"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"Throw", "[", 
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"Diff", "::", "error1"}], ",", 
             "\"\<Found Times product of nonscalar forms: \>\"", ",", 
             "expr"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], "===", "1"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"pos", "=", 
            RowBox[{"pos", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"scalar", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"expr", ",", 
              RowBox[{"{", "pos", "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"form", "=", 
            RowBox[{"expr", "[", 
             RowBox[{"[", "pos", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\t", 
           RowBox[{
            RowBox[{"scalar", " ", 
             RowBox[{"Diff", "[", 
              RowBox[{"form", ",", "rest"}], "]"}]}], "+", 
            RowBox[{"diff0", "[", 
             RowBox[{"scalar", ",", "form"}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], "===", "0"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"diff0", "[", "expr", "]"}]}], "\[IndentingNewLine]", 
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diff0", "[", "expr_Times", "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"MapAt", "[", 
        RowBox[{"Diff", ",", "expr", ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "expr", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diff0", "[", 
      RowBox[{"expr_Times", ",", "form_"}], "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"MapAt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Diff", "[", 
           RowBox[{"#", ",", "form"}], "]"}], "&"}], ",", "expr", ",", "i"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "expr", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diff0", "[", 
      RowBox[{"expr_", ",", "form_"}], "]"}], ":=", 
     RowBox[{"Wedge", "[", 
      RowBox[{
       RowBox[{"Diff", "[", "expr", "]"}], ",", "form"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"diff0", "[", "expr_", "]"}], ":=", 
     RowBox[{"Diff", "[", "expr", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True],

Cell["\<\
Alfonso: There\[CloseCurlyQuote]s a problem with the code above if you \
compute the exterior derivative of Cos[\[CapitalTheta]] d[\[CurlyPhi]] Sin[\
\[CapitalTheta]]. The problem appears to be solved by adding the line\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Diff", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{"rest_", "?", 
      RowBox[{"(", 
       RowBox[{"Composition", "[", 
        RowBox[{"Not", ",", "CovDQ"}], "]"}], ")"}]}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Diff", "[", "expr", "]"}], "\[Wedge]", "rest"}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "Automatic contraction of products of basis objects and the exterior \
derivative. These kind of expressions arise after the application of ToBasis \
to an expression containing the exterior derivative. ",
 StyleBox["Alfonso: I\[CloseCurlyQuote]m not sure this works . For that \
reason it is now deactivated",
  FontWeight->"Bold"]
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "@", "ContractBasis"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "@", 
    RowBox[{"ContractBasis", "[", 
     RowBox[{
      RowBox[{"basis_Basis", " ", 
       RowBox[{"Diff", "[", "expr_", "]"}]}], ",", "args_"}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"Diff", "[", 
     RowBox[{"ContractBasis", "[", 
      RowBox[{
       RowBox[{"basis", " ", "expr"}], ",", "args"}], "]"}], "]"}], "-", 
    RowBox[{"expr", " ", 
     RowBox[{"Diff", "[", "basis", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "@", "ContractBasis"}], ";"}]}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["2.5 Introduction of co-frame", "Subsubsection"],

Cell[TextData[{
 "We create the non-atomic tensor ",
 StyleBox["\[Theta][M]", "InlineFormula"],
 " representing a co-frame. Note that the formatting does not contain the \
manifold as this information is already visible in the abstract index. The \
abstract index may belong to the tangent space of the manifold \
\[OpenCurlyDoubleQuote]M\[CloseCurlyDoubleQuote] or to any other vector \
bundle with base M. In the case of the abstract index belonging to TangentM \
we can think of \[Theta][M] as the set of \[OpenCurlyDoubleQuote]canonical \
1-forms\[CloseCurlyDoubleQuote]. "
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "@", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}]}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{"Tangent", "@", "mani"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coframe", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"Coframe", "[", 
      RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], ",", "Wedge"}], "]"}], "=", 
   "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SymmetryGroupOfTensor", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"StrongGenSet", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<General co-frame\>\"", ",", "\"\<\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", "mani", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HostsOf", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorID", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"Coframe", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   "\"\<\[Theta]\>\""}], ";"}]}], "Input",
 InitializationCell->True],

Cell["Holonomic Co-frame", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "@", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}]}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{"Tangent", "@", "mani"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dx", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"dx", "[", 
      RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], ",", "Wedge"}], "]"}], "=", 
   "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SymmetryGroupOfTensor", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"StrongGenSet", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<General co-frame\>\"", ",", "\"\<\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", "mani", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HostsOf", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorID", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"dx", "[", 
     RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "]"}], "^=", "\"\<dx\>\""}], 
  ";"}]}], "Input",
 InitializationCell->True],

Cell["Condition of the co-frame being holonomic.", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Diff", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"dx", "[", 
       RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], "[", "ind_", "]"}], ",", 
     "PD"}], "]"}], ":=", "0"}], ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["2.6 The Hodge dual", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Hodge"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"Hodge[metric][expr] is the Hodge dual of expr defined with \
respect to metric\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3599826462-4210687"]
}, Open  ]],

Cell["\<\
The third basic ingredient of exterior algebra is Hodge duality, which \
requires the presence of a metric.\
\>", "Text"],

Cell["\<\
[Jose: The metric needs to be a pattern. That\[CloseCurlyQuote]s essential. \
Otherwise Hodge[metric] would work only for the specified metric.]\
\>", "Text"],

Cell[BoxData[
 RowBox[{"DefInertHead", "[", 
  RowBox[{
   RowBox[{"Hodge", "[", "metric_", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"LinearQ", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ContractThrough", "\[Rule]", 
    RowBox[{"{", "delta", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PrintAs", "\[Rule]", 
    RowBox[{"Hold", "[", 
     StyleBox[
      RowBox[{"\"\<\\!\\(\\*SubscriptBox[\\(*\\), \\(\>\"", "<>", 
       RowBox[{"PrintAs", "[", "metric", "]"}], "<>", "\"\<\\)]\\)\>\""}],
      ShowSpecialCharacters->False,
      ShowStringCharacters->True,
      NumberMarks->True], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"DefInfo", "\[Rule]", "Null"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Hodge", "[", "metric_", "]"}], "[", 
   RowBox[{"x_", " ", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"x", " ", 
    RowBox[{
     RowBox[{"Hodge", "[", "metric", "]"}], "[", "y", "]"}]}], "/;", 
   RowBox[{
    RowBox[{"Grade", "[", 
     RowBox[{"x", ",", "Wedge"}], "]"}], "===", "0"}]}]}]], "Input",
 InitializationCell->True],

Cell["\<\
[Jose: This previous definition overlaps with LinearQ->True, so we might want \
to rethink that option in relation with the products and ScalarsOfProduct.]\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DimOfMetric", "[", "metric_", "]"}], ":=", 
  RowBox[{"DimOfVBundle", "[", 
   RowBox[{"VBundleOfMetric", "[", "metric", "]"}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"Hodge", "/:", 
  RowBox[{"Grade", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Hodge", "[", "metric_", "]"}], "[", "expr_", "]"}], ",", 
    "Wedge"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"DimOfMetric", "[", "metric", "]"}], "-", 
   RowBox[{"Grade", "[", 
    RowBox[{"expr", ",", "Wedge"}], "]"}]}]}]], "Input",
 InitializationCell->True],

Cell["\<\
Leo: Question: Is the following correct? Why is it only \
SignatureOfMetric[metric][[2]]? Shouldn\[CloseCurlyQuote]t it depend on the \
difference between the number of plus and minus?
Jose: Yes, I think it is correct. Only the number of minus signs matter. I \
was originally confused as well.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Hodge", "[", "metric_", "]"}], "@", 
   RowBox[{
    RowBox[{"Hodge", "[", "metric_", "]"}], "[", "expr_", "]"}]}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Grade", "[", 
        RowBox[{"expr", ",", "Wedge"}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"DimOfMetric", "[", "metric", "]"}], "-", "1"}], ")"}]}], 
      "+", 
      RowBox[{
       RowBox[{"SignatureOfMetric", "[", "metric", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "expr"}]}]], "Input",
 InitializationCell->True],

Cell["\<\
This function converts Hodge duals of product of the coframe basis (either \
holonomic or non-holonomic):\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ExpandHodgeDual"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"ExpandHodgeDual[expr,Coframe[mani],g] expands out all the \
Hodge duals of the exterior powers of Coframe[mani], defined with respect to \
the metric g. If the manifold tag mani is dropped, then all the instances of \
Coframe are expanded. The Coframe label can be replaced by dx if we are using \
the holonomic coframe.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3599826463-4210687"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Expand", " ", "dual", " ", "of", " ", "differentials", " ", "of", " ", 
    "coordinate", " ", "elements"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ExpandHodgeDual", "[", 
      RowBox[{"expr_", ",", 
       RowBox[{"dx", "[", 
        RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], ",", "met_"}], "]"}], ":=", 
     RowBox[{"ExpandHodgeDual1", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"expr", "/.", 
         RowBox[{"Reverse", "/@", 
          RowBox[{"Flatten", "[", 
           RowBox[{"List", "@@", 
            RowBox[{"TensorValues", "@", 
             RowBox[{"dx", "[", "mani", "]"}]}]}], "]"}]}]}], ")"}], ",", 
       RowBox[{"dx", "[", "mani", "]"}], ",", "met"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Expand", " ", "of", " ", "the", " ", "wedge", " ", "product", " ", "of",
       " ", "canonical", " ", "1"}], "-", "forms"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExpandHodgeDual", "[", 
      RowBox[{"expr_", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"coframe", ":", 
          RowBox[{"(", 
           RowBox[{"Coframe", "|", "dx"}], ")"}]}], ")"}], "[", 
        RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], ",", "met_"}], "]"}], ":=", 
     RowBox[{"ExpandHodgeDual1", "[", 
      RowBox[{"expr", ",", 
       RowBox[{"coframe", "[", "mani", "]"}], ",", "met"}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpandHodgeDual1", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"coframe", ":", 
        RowBox[{"(", 
         RowBox[{"Coframe", "|", "dx"}], ")"}]}], ")"}], "[", 
      RowBox[{"mani_", "?", "ManifoldQ"}], "]"}], ",", "met_"}], "]"}], ":=", 
   
   RowBox[{"expr", "/.", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Hodge", "[", "met", "]"}], "[", 
        RowBox[{"form", ":", 
         RowBox[{"Wedge", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"coframe", "[", "mani", "]"}], "[", "_", "]"}], ".."}], 
          "]"}]}], "]"}], "|", 
       RowBox[{"form", ":", 
        RowBox[{
         RowBox[{"Hodge", "[", "met", "]"}], "[", 
         RowBox[{
          RowBox[{"coframe", "[", "mani", "]"}], "[", "_", "]"}], "]"}]}]}], 
      "]"}], "\[RuleDelayed]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dim", "=", 
          RowBox[{"DimOfMetric", "[", "met", "]"}]}], ",", 
         RowBox[{"n", "=", 
          RowBox[{"Length", "[", "form", "]"}]}], ",", 
         RowBox[{"inds", "=", 
          RowBox[{"Sequence", "@@@", 
           RowBox[{"List", "@@", "form"}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"dummies", "=", 
           RowBox[{"DummyIn", "/@", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{"VBundleOfMetric", "[", "met", "]"}], ",", 
              RowBox[{"dim", "-", "n"}]}], "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"dim", "-", "n"}], ")"}], "!"}]}], 
          RowBox[{
           RowBox[{"epsilon", "[", "met", "]"}], "@@", 
           RowBox[{"Join", "[", 
            RowBox[{"inds", ",", 
             RowBox[{"ChangeIndex", "/@", "dummies"}]}], "]"}]}], 
          RowBox[{"Wedge", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"coframe", "[", "mani", "]"}], "/@", "dummies"}], 
            ")"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpandHodgeDual1", "[", 
    RowBox[{"expr_", ",", "Coframe", ",", "met_"}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ExpandHodgeDual1", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"Coframe", "[", "#2", "]"}], ",", "met"}], "]"}], "&"}], ",", 
     "expr", ",", "$Manifolds"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpandHodgeDual1", "[", 
    RowBox[{"expr_", ",", "dx", ",", "met_"}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ExpandHodgeDual1", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"dx", "[", "#2", "]"}], ",", "met"}], "]"}], "&"}], ",", 
     "expr", ",", "$Manifolds"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["2.7 The co-differential", "Subsubsection"],

Cell["\<\
We introduce the co-differential. Alfonso: I have dropped the dependency on a \
covariant derivative, because the co-differential does not require a \
covariant derivative to be defined. Alfonso, However, as pointed out by Leo \
one can still define the co-differential using an exterior covariant \
derivative.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefInertHead", "[", 
   RowBox[{
    RowBox[{"Codiff", "[", "metric_", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LinearQ", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ContractThrough", "\[Rule]", "delta"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PrintAs", "\[Rule]", 
     RowBox[{"Hold", "[", 
      StyleBox[
       RowBox[{"\"\<\\!\\(\\*SubscriptBox[\\(\\[Delta]\\), \\(\>\"", "<>", 
        RowBox[{"PrintAs", "[", "metric", "]"}], "<>", "\"\<\\)]\\)\>\""}],
       ShowSpecialCharacters->False,
       ShowStringCharacters->True,
       NumberMarks->True], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"DefInfo", "\[Rule]", "Null"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"Codiff", "/:", 
  RowBox[{"Grade", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Codiff", "[", "metric_", "]"}], "[", 
     RowBox[{"expr_", ",", "___"}], "]"}], ",", "Wedge"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"Grade", "[", 
    RowBox[{"expr", ",", "Wedge"}], "]"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Codiff", "/:", 
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Codiff", "[", "metric_", "]"}], "[", 
      RowBox[{"form_", ",", 
       RowBox[{"PD", "?", "CovDQ"}]}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
   RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Codiff", "[", "metric", "]"}], "[", 
      RowBox[{"form", ",", "PD"}], "]"}], ",", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PrintAs", "[", 
         RowBox[{"Codiff", "[", "metric", "]"}], "]"}], ",", "\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}], ",", "\"\<]\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Codiff", "/:", 
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Codiff", "[", "metric_", "]"}], "[", 
      RowBox[{"form_", ",", 
       RowBox[{"cd_", "?", "CovDQ"}]}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
   RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Codiff", "[", "metric", "]"}], "[", 
      RowBox[{"form", ",", "cd"}], "]"}], ",", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SuperscriptBox", "[", 
         RowBox[{
          RowBox[{"PrintAs", "[", 
           RowBox[{"Codiff", "[", "metric", "]"}], "]"}], ",", 
          RowBox[{"Last", "@", 
           RowBox[{"SymbolOfCovD", "[", "cd", "]"}]}]}], "]"}], ",", 
        "\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}], ",", "\"\<]\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell["We always have PD as the covariant derivative.", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{
     RowBox[{"Codiff", "[", "met_", "]"}], "[", "expr_", "]"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Codiff", "[", "met", "]"}], "[", 
    RowBox[{"expr", ",", "PD"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell["\<\
The co-differential is defined in terms of the exterior derivative and the \
Hodge dual:
Leo: Question: Same as before, why is it only SignatureOfMetric[metric][[2]]? \
Shouldn\[CloseCurlyQuote]t it depend on the difference between the number of \
plus and minus?
Jose: I think it is correct.
Leo: Ok, I agree now. Also, ReplaceRepeated in case of nested codiff.
Alfonso: dropped dependency on a covariant derivative.
Alfonso: added back dependency on a covariant derivative.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CodiffToDiff", "[", "expr_", "]"}], ":=", 
  RowBox[{"expr", "//.", 
   RowBox[{
    RowBox[{
     RowBox[{"Codiff", "[", "met_", "]"}], "[", 
     RowBox[{"expr1_", ",", 
      RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], "\[RuleDelayed]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"DimOfMetric", "[", "met", "]"}], 
         RowBox[{"Grade", "[", 
          RowBox[{"expr1", ",", "Wedge"}], "]"}]}], "+", 
        RowBox[{"DimOfMetric", "[", "met", "]"}], "+", "1", "+", 
        RowBox[{
         RowBox[{"SignatureOfMetric", "[", "met", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"Hodge", "[", "met", "]"}], "@", 
      RowBox[{"Diff", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Hodge", "[", "met", "]"}], "@", "expr1"}], ",", "covd"}], 
       "]"}]}]}]}]}]}]], "Input",
 InitializationCell->True],

Cell["Leo: For convenience we program this identity:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Codiff", "[", "metric_", "]"}], "[", 
   RowBox[{
    RowBox[{"Codiff", "[", "metric_", "]"}], "[", 
    RowBox[{"expr_", ",", "PD"}], "]"}], "]"}], ":=", "0"}]], "Input",
 InitializationCell->True],

Cell["Co-differential of basis objects is zero.", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Codiff", "[", 
    RowBox[{"_Basis", ",", 
     RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], ":=", "0"}], ";"}]], "Input",
 InitializationCell->True],

Cell["Thread over lists and equal", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Codiff", "@", "expr_List"}], ":=", 
   RowBox[{"Codiff", "/@", "expr"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Codiff", "@", "expr_Equal"}], ":=", 
   RowBox[{"Codiff", "/@", "expr"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[TextData[{
 "Automatic contraction of products of basis objects and the co-differential. \
These kind of expressions arise after the application of ToBasis to an \
expression containing the co-differential. ",
 StyleBox["Alfonso: This is now deactivated",
  FontWeight->"Bold"]
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "@", "ContractBasis"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ContractBasis", "[", 
    RowBox[{
     RowBox[{"basis_Basis", " ", 
      RowBox[{
       RowBox[{"Codiff", "[", "metric_", "]"}], "[", "expr_", "]"}]}], ",", 
     "args_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Codiff", "[", "metric", "]"}], "[", 
     RowBox[{"ContractBasis", "[", 
      RowBox[{
       RowBox[{"basis", " ", "expr"}], ",", "args"}], "]"}], "]"}], "-", 
    RowBox[{"expr", " ", 
     RowBox[{
      RowBox[{"Codiff", "[", "metric", "]"}], "[", "basis", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "@", "ContractBasis"}], ";"}]}], "Input"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Graded derivations", "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[TextData[{
 "3.1 Exterior covariant derivative ",
 StyleBox["(this is now deactivated)",
  FontColor->RGBColor[1, 0, 0]]
}], "Subsubsection"],

Cell["\<\
For the moment we use a head for the exterior covariant derivative which is \
different to that of the exterior derivative. \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ExtCovDiff"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Information", "::", "notfound"}], "MessageName"], ":", 
  " ", "\<\"Symbol \[NoBreak]\\!\\(\\\"ExtCovDiff\\\"\\)\[NoBreak] not found. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/notfound\\\", \
ButtonNote -> \\\"Information::notfound\\\"]\\)\"\>"}]], "Message", "MSG"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefGradedDerivation", "[", 
   RowBox[{"ExtCovDiff", ",", "Wedge", ",", 
    RowBox[{"+", "1"}], ",", 
    RowBox[{"PrintAs", "\[Rule]", "\"\<d\>\""}]}], "]"}], ";"}]], "Input"],

Cell["Superscript formatting for covariant exterior derivatives", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ExtCovDiff", "/:", 
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{"ExtCovDiff", "[", 
      RowBox[{"form_", ",", 
       RowBox[{"PD", "?", "CovDQ"}]}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
   RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
    RowBox[{
     RowBox[{"ExtCovDiff", "[", 
      RowBox[{"form", ",", "PD"}], "]"}], ",", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PrintAs", "[", "Diff", "]"}], ",", "\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}], ",", "\"\<]\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExtCovDiff", "/:", 
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{"ExtCovDiff", "[", 
      RowBox[{"form_", ",", 
       RowBox[{"cd_", "?", "CovDQ"}]}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
   RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
    RowBox[{
     RowBox[{"ExtCovDiff", "[", 
      RowBox[{"form", ",", "cd"}], "]"}], ",", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SuperscriptBox", "[", 
         RowBox[{
          RowBox[{"PrintAs", "[", "Diff", "]"}], ",", 
          RowBox[{"Last", "@", 
           RowBox[{"SymbolOfCovD", "[", "cd", "]"}]}]}], "]"}], ",", 
        "\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}], ",", "\"\<]\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}]}], "Input"],

Cell["We still need definition when acting on Times", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "produces", " ", "expanded", " ", "expressions", " ", "and", 
    " ", "is", " ", "much", " ", "faster", " ", "when", " ", "there", " ", 
    "are", " ", "many", " ", "scalars"}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ExtCovDiff", "[", 
      RowBox[{"expr_Times", ",", "rest___"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"grades", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Grade", "[", 
             RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
           RowBox[{"List", "@@", "expr"}]}]}], ",", "pos", ",", "scalar", ",",
          "form"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pos", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"grades", ",", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "=!=", "0"}], "&"}], ")"}]}], ",", "1", ",", 
           RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Which", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], ">", "1"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"Throw", "[", 
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"ExtCovDiff", "::", "error1"}], ",", 
             "\"\<Found Times product of nonscalar forms: \>\"", ",", 
             "expr"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], "===", "1"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"pos", "=", 
            RowBox[{"pos", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"scalar", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"expr", ",", 
              RowBox[{"{", "pos", "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"form", "=", 
            RowBox[{"expr", "[", 
             RowBox[{"[", "pos", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\t", 
           RowBox[{
            RowBox[{"scalar", " ", 
             RowBox[{"ExtCovDiff", "[", 
              RowBox[{"form", ",", "rest"}], "]"}]}], "+", 
            RowBox[{"extcovdiff0", "[", 
             RowBox[{"scalar", ",", "form"}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], "===", "0"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"extcovdiff0", "[", "expr", "]"}]}], "\[IndentingNewLine]", 
         "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"extcovdiff0", "[", "expr_Times", "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"MapAt", "[", 
        RowBox[{"Diff", ",", "expr", ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "expr", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"extcovdiff0", "[", 
      RowBox[{"expr_Times", ",", "form_"}], "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"MapAt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Diff", "[", 
           RowBox[{"#", ",", "form"}], "]"}], "&"}], ",", "expr", ",", "i"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "expr", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"extcovdiff0", "[", 
      RowBox[{"expr_", ",", "form_"}], "]"}], ":=", 
     RowBox[{"Wedge", "[", 
      RowBox[{
       RowBox[{"Diff", "[", "expr", "]"}], ",", "form"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"extcovdiff0", "[", "expr_", "]"}], ":=", 
     RowBox[{"Diff", "[", "expr", "]"}]}], ";"}]}]}]], "Input"],

Cell["\<\
Automatically add PD (this is the origin of the affine space of connections).
QUESTION: Is it better to use diff[expr] or diff[expr,PD]? The latter has the \
advantage of making the code only deal with one case, not two. But now all of \
the above code should be specialized for PD?
Alfonso: this problem does not arise if one uses ExtCovDiff for the exterior \
covariant derivative.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExtCovDiff", "[", "expr_", "]"}], ":=", 
  RowBox[{"ExtCovDiff", "[", 
   RowBox[{"expr", ",", "PD"}], "]"}]}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["3.2 Connection forms ", "Subsubsection"],

Cell["\<\
There are two objects we need for covariant exterior derivatives. First, \
1-forms taking values in VB\[CircleTimes]-VB which represent the tensorial \
difference between two connections. Second, 2-forms taking values in VB\
\[CircleTimes]-VB which represent the curvature of an individual connection. \
We\[CloseCurlyQuote]ll use nonatomic heads for both of these. The notation \
will be
  ConnectionForm[CD1,CD2,VB][A,-B]
  CurvatureForm[CD,VB][A,-B]\
\>", "Text"],

Cell[TextData[{
 StyleBox["Alfonso: ",
  FontWeight->"Bold"],
 "from a mathematical point of view the connection form should not be \
regarded as the tensorial difference between two connections. The reason for \
this is that the connection form is defined as a 1-form in the frame bundle \
regarded as a differentiable manifold and in this sense it is truly \
tensorial. One loses the tensorial character when one does a splitting of the \
frame bundle into the base manifold and the fibres. For this reason I suggest \
the following notation for the connection form:\n\n\
ConnectionForm[CD,VB][A,-B]\n\nThis notation has been implemented in this \
notebook."
}], "Text"],

Cell[TextData[{
 "First, making these nonatomic-head tensors. We start by the general \
connection form. ",
 StyleBox["Alfonso: what happens with the MastersOf a non-atomic symbol ? \
Given that a non-atomic tensor cannot be undefined I guess that it makes no \
sense to ask about its Masters,  right ?  Also I guess that it cannot be \
Servant of anything either.",
  FontWeight->"Bold"]
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{
      RowBox[{"cd_", "?", "CovDQ"}], ",", "_"}], "]"}], "]"}], "^=", "True"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"_", ",", 
      RowBox[{"vb_", "?", "VBundleQ"}]}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{"vb", ",", 
     RowBox[{"-", "vb"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConnectionForm", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"_", ",", "_"}], "]"}], ",", "Wedge"}], "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SymmetryGroupOfTensor", "[", 
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", 
    RowBox[{"StrongGenSet", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dagger", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"cd1_", ",", "vb_"}], "]"}], "]"}], "^:=", 
   RowBox[{"ConnectionForm", "[", 
    RowBox[{"cd1", ",", 
     RowBox[{"Dagger", "@", "vb"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<nonsymmetric Connection 1-form\>\"", ",", "\"\<\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"cd1_", ",", "_"}], "]"}], "]"}], "^:=", 
   RowBox[{"Union", "@@", 
    RowBox[{"DependenciesOfCovD", "/@", 
     RowBox[{"{", "cd1", "}"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HostsOf", "[", 
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"cd1_", ",", "vb_"}], "]"}], "]"}], "^:=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "cd1", "}"}], ",", 
      RowBox[{"Union", "@@", 
       RowBox[{"HostsOf", "/@", 
        RowBox[{"{", 
         RowBox[{"cd1", ",", "vb"}], "}"}]}]}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Should", " ", "we", " ", "put", " ", 
    RowBox[{"Union", "@@", 
     RowBox[{"HostsOf", "/@", 
      RowBox[{"{", 
       RowBox[{"cd1", ",", "vb"}], "}"}]}]}], " ", 
    RowBox[{"here", "?", " ", "Yes"}], " ", "but", " ", "we", " ", "need", 
    " ", "to", " ", "add", " ", "cd1", " ", "itself"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TensorID", "[", 
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", "ConnectionForm", "]"}], "^=", "\"\<A\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"cd1_", ",", "_"}], "]"}], "]"}], "^:=", 
   RowBox[{
    RowBox[{"PrintAs", "[", "ConnectionForm", "]"}], "<>", "\"\<[\>\"", "<>", 
    
    RowBox[{"Last", "@", 
     RowBox[{"SymbolOfCovD", "[", "cd1", "]"}]}], "<>", "\"\<]\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"PD", ",", "_"}], "]"}], "]"}], "^:=", 
   RowBox[{"PrintAs", "[", "ConnectionForm", "]"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[TextData[{
 "Automatic ordering. Put PD second, else order lexicographically. ",
 StyleBox["Alfonso: ",
  FontWeight->"Bold"],
 "this is no longer needed."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ConnectionForm", "[", 
   RowBox[{"cd_", ",", "cd_", ",", "_"}], "]"}], ":=", 
  "Zero"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ConnectionForm", "[", 
    RowBox[{"PD", ",", "cd_", ",", "vb_"}], "]"}], "[", 
   RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"-", 
   RowBox[{
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"cd", ",", "PD", ",", "vb"}], "]"}], "[", 
    RowBox[{"a", ",", "b"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ConnectionForm", "[", 
    RowBox[{"cd1_", ",", "cd2_", ",", "vb_"}], "]"}], "[", 
   RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"cd2", ",", "cd1", ",", "vb"}], "]"}], "[", 
     RowBox[{"a", ",", "b"}], "]"}]}], "/;", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"cd2", "=!=", "PD"}], "&&", 
     RowBox[{"!", 
      RowBox[{"OrderedQ", "[", 
       RowBox[{"{", 
        RowBox[{"cd1", ",", "cd2"}], "}"}], "]"}]}]}], ")"}]}]}]}], "Input",
 Evaluatable->False],

Cell["\<\
We introduce now the ChristoffelForm (connection form for a connection in the \
frame bundle). \
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "[", 
    RowBox[{"ChristoffelForm", "[", 
     RowBox[{"cd1_", "?", "CovDQ"}], "]"}], "]"}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"ChristoffelForm", "[", 
     RowBox[{"cd1_", "?", "CovDQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tangent", "@", 
      RowBox[{"ManifoldOfCovD", "@", "cd1"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Tangent", "@", 
       RowBox[{"ManifoldOfCovD", "@", "cd1"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ChristoffelForm", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"ChristoffelForm", "[", "_", "]"}], ",", "Wedge"}], "]"}], "=", 
   "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SymmetryGroupOfTensor", "[", 
     RowBox[{"ChristoffelForm", "[", "_", "]"}], "]"}], "^=", 
    RowBox[{"StrongGenSet", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dagger", "[", 
    RowBox[{"ChristoffelForm", "[", "cd1_", "]"}], "]"}], "^:=", 
   RowBox[{"ChristoffelForm", "[", "cd1", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"ChristoffelForm", "[", "_", "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<nonsymmetric frame bundle Connection 1-form\>\"", ",", "\"\<\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"ChristoffelForm", "[", "cd1_", "]"}], "]"}], "^:=", 
   RowBox[{"Union", "@@", 
    RowBox[{"DependenciesOfCovD", "/@", 
     RowBox[{"{", "cd1", "}"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HostsOf", "[", 
     RowBox[{"ChristoffelForm", "[", "cd1_", "]"}], "]"}], "^:=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "cd1", "}"}], ",", 
      RowBox[{"Union", "@@", 
       RowBox[{"HostsOf", "/@", 
        RowBox[{"{", "cd1", "}"}]}]}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Should", " ", "we", " ", "put", " ", 
     RowBox[{"Union", "@@", 
      RowBox[{"HostsOf", "/@", 
       RowBox[{"{", 
        RowBox[{"cd1", ",", "cd2", ",", "vb"}], "}"}]}]}], " ", 
     RowBox[{"here", "?", " ", "Yes"}]}], ",", " ", 
    RowBox[{"but", " ", "addint", " ", "also", " ", "cd1"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TensorID", "[", 
     RowBox[{"ChristoffelForm", "[", "_", "]"}], "]"}], "^=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", "ChristoffelForm", "]"}], "^=", 
   "\"\<\[CapitalGamma]\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"ChristoffelForm", "[", "cd1_", "]"}], "]"}], "^:=", 
   RowBox[{
    RowBox[{"PrintAs", "[", "ChristoffelForm", "]"}], "<>", "\"\<[\>\"", "<>", 
    RowBox[{"Last", "@", 
     RowBox[{"SymbolOfCovD", "[", "cd1", "]"}]}], "<>", "\"\<]\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"ChristoffelForm", "[", "PD", "]"}], "]"}], "^:=", 
   RowBox[{"PrintAs", "[", "ChristoffelForm", "]"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[TextData[{
 "It will be convenient shorthand to be able to write ChristoffelForm[cd] for \
ChristoffelForm[cd,PD]. ",
 StyleBox["Alfonso: ",
  FontWeight->"Bold"],
 " this is no longer needed."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChristoffelForm", "[", "cd_", "]"}], ":=", 
  RowBox[{"ChristoffelForm", "[", 
   RowBox[{"cd", ",", "PD"}], "]"}]}]], "Input",
 Evaluatable->False],

Cell["\<\
Automatic replacement of the connection form by the Christoffel form when the \
connection corresponds to a connection in a frame bundle.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ConnectionForm", "[", 
    RowBox[{"cd1_", ",", "vb_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"ChristoffelForm", "[", "cd1", "]"}], "/;", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Tangent", "@", 
       RowBox[{"ManifoldOfCovD", "@", "cd1"}]}], "\[Equal]", "vb"}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChristoffelForm", "[", 
    RowBox[{"cd_", ",", "tangentbundle_"}], "]"}], ":=", 
   RowBox[{"ChristoffelForm", "[", "cd", "]"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[TextData[{
 "PD is regarded as the trivial connection in a principal bundle. Hence: ",
 StyleBox["Alfonso: I\[CloseCurlyQuote]m not sure that this is correct from \
the mathematical point of view but it works from the practical point of view.",
  FontWeight->"Bold"]
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ConnectionForm", "[", 
    RowBox[{"PD", ",", "vb_"}], "]"}], ":=", "Zero"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChristoffelForm", "[", "PD", "]"}], ":=", "Zero"}], 
  ";"}]}], "Input",
 InitializationCell->True],

Cell["\<\
Transformation of the connection form into the connection tensor plus \
co-frame.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ConnectionFormToTensor", "[", 
    RowBox[{"expr_", ",", "covd_", ",", 
     RowBox[{"frame", ":", 
      RowBox[{"(", 
       RowBox[{"Coframe", "|", "dx"}], ")"}]}]}], "]"}], ":=", 
   RowBox[{"expr", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"ChristoffelForm", "[", "cd1_", "]"}], "[", "inds__", "]"}], ":>", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", "=", 
            RowBox[{"DummyIn", "@", 
             RowBox[{"First", "@", 
              RowBox[{"VBundlesOfCovD", "@", "covd"}]}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"xTensorQ", "@", 
               RowBox[{"GiveSymbol", "[", 
                RowBox[{"Christoffel", ",", "cd1", ",", "covd"}], "]"}]}], "===",
               "False"}], ",", 
             RowBox[{"DefTensor", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"GiveSymbol", "[", 
                 RowBox[{"Christoffel", ",", "cd1", ",", "covd"}], "]"}], "[", 
                RowBox[{"inds", ",", 
                 RowBox[{"-", "a"}]}], "]"}], ",", 
               RowBox[{"ManifoldOfCovD", "@", "covd"}]}], "]"}]}], "]"}], ";",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"GiveSymbol", "[", 
              RowBox[{"Christoffel", ",", "cd1", ",", "covd"}], "]"}], "[", 
             RowBox[{"inds", ",", 
              RowBox[{"-", "a"}]}], "]"}], 
            RowBox[{
             RowBox[{"frame", "[", 
              RowBox[{"ManifoldOfCovD", "@", "covd"}], "]"}], "[", "a", 
             "]"}]}]}]}], "]"}], "/;", 
        RowBox[{"covd", "=!=", "PD"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"ConnectionForm", "[", 
         RowBox[{"cd1_", ",", "vbundle_"}], "]"}], "[", "inds__", "]"}], 
       "\[RuleDelayed]", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", "=", 
            RowBox[{"DummyIn", "@", 
             RowBox[{"Tangent", "@", 
              RowBox[{"BaseOfVBundle", "@", "vbundle"}]}]}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"xTensorQ", "@", 
               RowBox[{"GiveSymbol", "[", 
                RowBox[{"AChristoffel", ",", "covd", ",", "cd1"}], "]"}]}], "===",
               "False"}], ",", 
             RowBox[{"DefTensor", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"GiveSymbol", "[", 
                 RowBox[{"AChristoffel", ",", "covd", ",", "cd1"}], "]"}], 
                "[", 
                RowBox[{"inds", ",", 
                 RowBox[{"-", "a"}]}], "]"}], ",", 
               RowBox[{"BaseOfVBundle", "@", "vbundle"}]}], "]"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"GiveSymbol", "[", 
              RowBox[{"AChristoffel", ",", "covd", ",", "cd1"}], "]"}], "[", 
             RowBox[{"inds", ",", 
              RowBox[{"-", "a"}]}], "]"}], 
            RowBox[{
             RowBox[{"frame", "[", 
              RowBox[{"BaseOfVBundle", "@", "vbundle"}], "]"}], "[", "a", 
             "]"}]}]}]}], "]"}], "/;", 
        RowBox[{"covd", "=!=", "PD"}]}]}]}], "}"}]}]}], ";"}]], "Input",
 InitializationCell->True],

Cell["\<\
If the covariant derivative is PD then the code takes the following simpler \
form:\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConnectionFormToTensor", "[", 
   RowBox[{"expr_", ",", "PD", ",", 
    RowBox[{"frame", ":", 
     RowBox[{"(", 
      RowBox[{"Coframe", "|", "dx"}], ")"}]}]}], "]"}], ":=", 
  RowBox[{"expr", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ChristoffelForm", "[", "cd1_", "]"}], "[", "inds__", "]"}], ":>", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", "=", 
          RowBox[{"DummyIn", "@", 
           RowBox[{"First", "@", 
            RowBox[{"VBundlesOfCovD", "@", "cd1"}]}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"GiveSymbol", "[", 
           RowBox[{"Christoffel", ",", "cd1"}], "]"}], "[", 
          RowBox[{"inds", ",", 
           RowBox[{"-", "a"}]}], "]"}], 
         RowBox[{
          RowBox[{"frame", "[", 
           RowBox[{"ManifoldOfCovD", "@", "cd1"}], "]"}], "[", "a", "]"}]}]}],
        "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"ConnectionForm", "[", 
        RowBox[{"cd1_", ",", "_"}], "]"}], "[", "inds__", "]"}], ":>", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", "=", 
          RowBox[{"DummyIn", "@", 
           RowBox[{"First", "@", 
            RowBox[{"VBundlesOfCovD", "@", "cd1"}]}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"GiveSymbol", "[", 
           RowBox[{"AChristoffel", ",", "cd1"}], "]"}], "[", 
          RowBox[{"inds", ",", 
           RowBox[{"-", "a"}]}], "]"}], 
         RowBox[{
          RowBox[{"frame", "[", 
           RowBox[{"ManifoldOfCovD", "@", "cd1"}], "]"}], "[", "a", "]"}]}]}],
        "]"}]}]}], "}"}]}]}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["3.3 Curvature forms ", "Subsubsection"],

Cell["Now for the curvature form:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "[", 
    RowBox[{"CurvatureForm", "[", 
     RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"CurvatureForm", "[", 
     RowBox[{"_", ",", 
      RowBox[{"vb_", "?", "VBundleQ"}]}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{"vb", ",", 
     RowBox[{"-", "vb"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CurvatureForm", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"CurvatureForm", "[", 
      RowBox[{"_", ",", "_"}], "]"}], ",", "Wedge"}], "]"}], "=", "2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SymmetryGroupOfTensor", "[", 
     RowBox[{"CurvatureForm", "[", 
      RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", 
    RowBox[{"StrongGenSet", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dagger", "[", 
    RowBox[{"CurvatureForm", "[", 
     RowBox[{"cd_", ",", "vb_"}], "]"}], "]"}], "^:=", 
   RowBox[{"CurvatureForm", "[", 
    RowBox[{"cd", ",", 
     RowBox[{"Dagger", "@", "vb"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"CurvatureForm", "[", 
     RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<Curvature 2-form\>\"", ",", "\"\<\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"CurvatureForm", "[", 
     RowBox[{"cd_", ",", "_"}], "]"}], "]"}], "^:=", 
   RowBox[{"DependenciesOfCovD", "[", "cd", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HostsOf", "[", 
     RowBox[{"CurvatureForm", "[", 
      RowBox[{"cd_", ",", "vb_"}], "]"}], "]"}], "^:=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "cd", "}"}], ",", 
      RowBox[{"Union", "@@", 
       RowBox[{"HostsOf", "/@", 
        RowBox[{"{", 
         RowBox[{"cd", ",", "vb"}], "}"}]}]}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Should", " ", "we", " ", "put", " ", 
    RowBox[{"Union", "@@", 
     RowBox[{"HostsOf", "/@", 
      RowBox[{"{", 
       RowBox[{"cd", ",", "vb"}], "}"}]}]}], " ", 
    RowBox[{"here", "?", " ", "Yes"}], " ", "but", " ", "we", " ", "need", 
    " ", "to", " ", "add", " ", "cd", " ", "itself"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TensorID", "[", 
     RowBox[{"CurvatureForm", "[", 
      RowBox[{"_", ",", "_"}], "]"}], "]"}], "^=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", "CurvatureForm", "]"}], "^=", "\"\<F\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"CurvatureForm", "[", 
     RowBox[{"cd_", ",", "_"}], "]"}], "]"}], "^:=", 
   RowBox[{
    RowBox[{"PrintAs", "[", "CurvatureForm", "]"}], "<>", "\"\<[\>\"", "<>", 
    RowBox[{"Last", "@", 
     RowBox[{"SymbolOfCovD", "[", "cd", "]"}]}], "<>", "\"\<]\>\""}]}], 
  ";"}]}], "Input",
 InitializationCell->True],

Cell["Case of a connection in the frame bundle (RiemannForm)", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "[", 
    RowBox[{"RiemannForm", "[", "_", "]"}], "]"}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"RiemannForm", "[", 
     RowBox[{"cd_", "?", "CovDQ"}], "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tangent", "@", 
      RowBox[{"ManifoldOfCovD", "@", "cd"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Tangent", "@", 
       RowBox[{"ManifoldOfCovD", "@", "cd"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RiemannForm", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"RiemannForm", "[", "_", "]"}], ",", "Wedge"}], "]"}], "=", 
   "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SymmetryGroupOfTensor", "[", 
     RowBox[{"RiemannForm", "[", 
      RowBox[{"cd_", "?", "CovDQ"}], "]"}], "]"}], "^:=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"MetricOfCovD", "@", "cd"}], "=!=", "Null"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Antisymmetric", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", "Cycles"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"StrongGenSet", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"GenSet", "[", "]"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dagger", "[", 
    RowBox[{"RiemannForm", "[", "cd_", "]"}], "]"}], "^:=", 
   RowBox[{"RiemannForm", "[", "cd", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"RiemannForm", "[", "_", "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<Curvature 2-form in the frame bundle\>\"", ",", "\"\<\>\""}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"RiemannForm", "[", "cd_", "]"}], "]"}], "^:=", 
   RowBox[{"DependenciesOfCovD", "[", "cd", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HostsOf", "[", 
     RowBox[{"RiemannForm", "[", "cd_", "]"}], "]"}], "^:=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "cd", "}"}], ",", 
      RowBox[{"Union", "@@", 
       RowBox[{"HostsOf", "/@", 
        RowBox[{"{", "cd", "}"}]}]}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Should", " ", "we", " ", "put", " ", 
    RowBox[{"Union", "@@", 
     RowBox[{"HostsOf", "/@", 
      RowBox[{"{", 
       RowBox[{"cd", ",", "vb"}], "}"}]}]}], " ", 
    RowBox[{"here", "?", " ", "Yes"}], " ", "but", " ", "we", " ", "need", 
    " ", "to", " ", "add", " ", "cd", " ", "itself"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TensorID", "[", 
     RowBox[{"RiemannForm", "[", "_", "]"}], "]"}], "^=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", "RiemannForm", "]"}], "^=", "\"\<R\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"RiemannForm", "[", "cd_", "]"}], "]"}], "^:=", 
   RowBox[{
    RowBox[{"PrintAs", "[", "RiemannForm", "]"}], "<>", "\"\<[\>\"", "<>", 
    RowBox[{"Last", "@", 
     RowBox[{"SymbolOfCovD", "[", "cd", "]"}]}], "<>", "\"\<]\>\""}]}], 
  ";"}]}], "Input",
 InitializationCell->True],

Cell["\<\
Automatic replacement of the curvature form if the covariant derivative \
corresponds to a covariant derivative defined in the tangent bundle.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CurvatureForm", "[", 
    RowBox[{
     RowBox[{"cd_", "?", "CovDQ"}], ",", "vbundle_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"RiemannForm", "[", "cd", "]"}], "/;", 
    RowBox[{"vbundle", "===", 
     RowBox[{"Tangent", "@", 
      RowBox[{"ManifoldOfCovD", "@", "cd"}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RiemannForm", "[", 
    RowBox[{"cd_", ",", "vbundle_"}], "]"}], ":=", 
   RowBox[{"RiemannForm", "[", "cd", "]"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell["\<\
Transformation of the Curvature form into the curvature tensor plus co-frame.\
\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CurvatureFormToTensor", "[", 
   RowBox[{"expr_", ",", 
    RowBox[{"frame", ":", 
     RowBox[{"(", 
      RowBox[{"Coframe", "|", "dx"}], ")"}]}]}], "]"}], ":=", 
  RowBox[{"expr", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"HoldPattern", "@", 
       RowBox[{
        RowBox[{"CurvatureForm", "[", 
         RowBox[{"cd1_", ",", 
          RowBox[{"vbundle1_", "?", "VBundleQ"}]}], "]"}], "[", "inds__", 
        "]"}]}], ":>", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"DummyIn", "@", 
            RowBox[{"First", "@", 
             RowBox[{"VBundlesOfCovD", "@", "cd1"}]}]}]}], ",", 
          RowBox[{"b", "=", 
           RowBox[{"DummyIn", "@", 
            RowBox[{"First", "@", 
             RowBox[{"VBundlesOfCovD", "@", "cd1"}]}]}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"1", "/", "2"}], 
         RowBox[{
          RowBox[{"GiveSymbol", "[", 
           RowBox[{"FRiemann", ",", "cd1"}], "]"}], "[", 
          RowBox[{
           RowBox[{"-", "a"}], ",", 
           RowBox[{"-", "b"}], ",", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"Reverse", "@", 
             RowBox[{"List", "@", "inds"}]}]}]}], "]"}], 
         RowBox[{"Wedge", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"frame", "[", 
             RowBox[{"ManifoldOfCovD", "@", "cd1"}], "]"}], "[", "a", "]"}], 
           ",", 
           RowBox[{
            RowBox[{"frame", "[", 
             RowBox[{"ManifoldOfCovD", "@", "cd1"}], "]"}], "[", "b", "]"}]}],
           "]"}]}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"RiemannForm", "[", "cd1_", "]"}], "[", "inds__", "]"}], ":>", 
      
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"DummyIn", "@", 
            RowBox[{"First", "@", 
             RowBox[{"VBundlesOfCovD", "@", "cd1"}]}]}]}], ",", 
          RowBox[{"b", "=", 
           RowBox[{"DummyIn", "@", 
            RowBox[{"First", "@", 
             RowBox[{"VBundlesOfCovD", "@", "cd1"}]}]}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"-", "$RiemannSign"}], " ", 
         RowBox[{"1", "/", "2"}], 
         RowBox[{
          RowBox[{"GiveSymbol", "[", 
           RowBox[{"Riemann", ",", "cd1"}], "]"}], "[", 
          RowBox[{
           RowBox[{"-", "a"}], ",", 
           RowBox[{"-", "b"}], ",", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"Reverse", "@", 
             RowBox[{"List", "@", "inds"}]}]}]}], "]"}], 
         RowBox[{"Wedge", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"frame", "[", 
             RowBox[{"ManifoldOfCovD", "@", "cd1"}], "]"}], "[", "a", "]"}], 
           ",", 
           RowBox[{
            RowBox[{"frame", "[", 
             RowBox[{"ManifoldOfCovD", "@", "cd1"}], "]"}], "[", "b", "]"}]}],
           "]"}]}]}], "]"}]}]}], "}"}]}]}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["3.4 The torsion 2-form", "Subsubsection"],

Cell["\<\
The torsion 2-form (only for covariant derivatives on the tangent bundle)\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xTensorQ", "[", 
    RowBox[{"TorsionForm", "[", "_", "]"}], "]"}], "^=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SlotsOfTensor", "[", 
    RowBox[{"TorsionForm", "[", "cd_", "]"}], "]"}], "^:=", 
   RowBox[{"{", 
    RowBox[{"Tangent", "@", 
     RowBox[{"ManifoldOfCovD", "@", "cd"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TorsionForm", "/:", 
   RowBox[{"GradeOfTensor", "[", 
    RowBox[{
     RowBox[{"TorsionForm", "[", "_", "]"}], ",", "Wedge"}], "]"}], "=", 
   "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SymmetryGroupOfTensor", "[", 
     RowBox[{"TorsionForm", "[", "_", "]"}], "]"}], "^=", 
    RowBox[{"StrongGenSet", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"GenSet", "[", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dagger", "[", 
   RowBox[{"TorsionForm", "[", "cd_", "]"}], "]"}], "^:=", 
  RowBox[{"TorsionForm", "[", "cd", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DefInfo", "[", 
    RowBox[{"TorsionForm", "[", "_", "]"}], "]"}], "^=", 
   RowBox[{"{", 
    RowBox[{"\"\<Torsion 2-form\>\"", ",", "\"\<\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DependenciesOfTensor", "[", 
    RowBox[{"TorsionForm", "[", "cd_", "]"}], "]"}], "^:=", 
   RowBox[{"DependenciesOfCovD", "[", "cd", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HostsOf", "[", 
     RowBox[{"TorsionForm", "[", "cd_", "]"}], "]"}], "^:=", 
    RowBox[{"HostsOf", "@", "cd"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Should", " ", "we", " ", "put", " ", 
    RowBox[{"HostsOf", "@", "cd"}], " ", 
    RowBox[{"here", "?", " ", "OK"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorID", "[", 
    RowBox[{"TorsionForm", "[", "_", "]"}], "]"}], "^=", 
   RowBox[{"{", "}"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", "TorsionForm", "]"}], "^=", 
   "\"\<\[GothicCapitalT]\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PrintAs", "[", 
    RowBox[{"TorsionForm", "[", "cd_", "]"}], "]"}], "^:=", 
   RowBox[{
    RowBox[{"PrintAs", "[", "TorsionForm", "]"}], "<>", "\"\<[\>\"", "<>", 
    RowBox[{"Last", "@", 
     RowBox[{"SymbolOfCovD", "[", "cd", "]"}]}], "<>", "\"\<]\>\""}]}], 
  ";"}]}], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["3.5 Change of exterior covariant derivative", "Subsubsection"],

Cell["\<\
We will use a convention that there should be a correspondence (TODO: check \
conventions)
  AChr1[CD1,CD2,VB][A,-B] \[Rule] AChristoffel[CD1,CD2][A,-\[Mu],-B] \
\[Theta][\[Mu]]
  FRiem2[CD,VB][A,-B] \[Rule] 1/2 FRiemann[CD][-\[Mu],-\[Nu],-B,A] \[Theta][\
\[Mu]]\[Wedge]\[Theta][\[Nu]]          (notice different ordering of A,B on \
two sides)
  Torsion2[CD][\[Alpha]] \[Rule] 1/2 Torsion[CD][\[Alpha],-\[Beta],-\[Gamma]] \
\[Theta][\[Beta]]\[Wedge]\[Theta][\[Gamma]]
We\[CloseCurlyQuote]ll want to be able to
  1) Change from diff[form,CD1] to diff[form,CD2], introducing \
AChr1[CD1,CD2,...] as needed
  2) Compute diff[diff[form,CD],CD], introducing FRiem2[CD,...] as needed
  3) Change from FRiem2[CD1,VB] to FRiem2[CD2,VB], introducing \
diff[AChr1[CD...]] and Wedge[AChr1,AChr1]\
\>", "Text"],

Cell[TextData[{
 "1. Change from diff[form,CD1] to diff[form,CD2]. The formula is:\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["d", "CD1"], 
     SuperscriptBox["v", "A"]}], "-", 
    RowBox[{
     SuperscriptBox["d", "CD2"], 
     SuperscriptBox["v", "A"]}]}], TraditionalForm]]],
 "  = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox[
     RowBox[{"A", "[", 
      RowBox[{"CD1", ",", "CD2", ",", "VB"}], "]"}], 
     RowBox[{"   ", "B"}], "A"], "\[Wedge]", 
    SuperscriptBox["v", "B"]}], TraditionalForm]]],
 "     (where VB is the VBundle of A; plus sign for +VB, minus sign for -VB)\n\
TODO: What about densities? Alfonso: I\[CloseCurlyQuote]m not sure whether \
the distinction \[OpenCurlyDoubleQuote]true tensor\[CloseCurlyDoubleQuote] / \
\[OpenCurlyDoubleQuote]tensor density\[CloseCurlyDoubleQuote] holds in this \
context."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ChangeExtD"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"ChangeExtD[expr,cd1,cd2] expresses the exterior covariant \
derivative taken with respect to the connection defined by the covariant \
derivative cd1 in terms of the exterior covariant derivative taken with \
respect to the connection defined by the covariant derivative cd2\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3599826463-4210687"]
}, Open  ]],

Cell["\<\
Alfonso: ConnectionForm with two covariant derivatives as arguments \
represents the difference between two connection forms which carry only a \
covariant derivative in the argument.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ConnectionForm", "[", 
     RowBox[{"cd1_", ",", "cd2_", ",", "vbundle_"}], "]"}], "[", "inds__", 
    "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"cd1", ",", "vbundle"}], "]"}], "[", "inds", "]"}], "-", 
    RowBox[{
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"cd2", ",", "vbundle"}], "]"}], "[", "inds", "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ChangeExtD", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{"cd_", "?", "CovDQ"}], ",", "cd_"}], "]"}], ":=", "expr"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ChangeExtD", "[", 
     RowBox[{"expr_", ",", 
      RowBox[{"cd1_", "?", "CovDQ"}], ",", 
      RowBox[{"cd2_:", "PD"}]}], "]"}], ":=", 
    RowBox[{"expr", "/.", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{"Diff", "[", 
        RowBox[{"expr1_", ",", "cd1"}], "]"}], "]"}], "\[RuleDelayed]", 
      "\[IndentingNewLine]", 
      RowBox[{"makeChangeExtD", "[", 
       RowBox[{
        RowBox[{"ChangeExtD", "[", 
         RowBox[{"expr1", ",", "cd1", ",", "cd2"}], "]"}], ",", "cd1", ",", 
        "cd2"}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeExtD", "[", 
    RowBox[{"expr_", ",", "list_List", ",", 
     RowBox[{"covd2_:", "PD"}]}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ChangeExtD", "[", 
       RowBox[{"#1", ",", "#2", ",", "covd2"}], "]"}], "&"}], ",", "expr", 
     ",", "list"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeExtD", "[", 
    RowBox[{"expr_", ",", "x_", ",", 
     RowBox[{"_", ":", "PD"}]}], "]"}], ":=", 
   RowBox[{"Throw", "@", 
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"ChangeExtD", "::", "unknown"}], ",", 
      "\"\<covariant derivative\>\"", ",", "x"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeExtD", "[", "expr_", "]"}], ":=", 
   RowBox[{"ChangeExtD", "[", 
    RowBox[{"expr", ",", "$CovDs"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"makeChangeExtD", "[", 
    RowBox[{"expr_", ",", "cd1_", ",", "cd2_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vbs", "=", 
       RowBox[{"Apply", "[", 
        RowBox[{"Union", ",", 
         RowBox[{"VBundlesOfCovD", "/@", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"cd1", ",", "cd2"}], "}"}], ",", "PD"}], "]"}]}]}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Diff", "[", 
        RowBox[{"expr", ",", "cd2"}], "]"}], "+", 
       RowBox[{"Plus", "@@", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{"addAChr1", "[", 
           RowBox[{"expr", ",", "cd1", ",", "cd2"}], "]"}], ",", 
          RowBox[{"xAct`xTensor`Private`selecton", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"FindFreeIndices", "@", "expr"}], ",", "AIndexQ"}], 
             "]"}], ",", "vbs"}], "]"}]}], "]"}]}]}], "//", "ReduceAChr1"}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"addAChr1", "[", 
    RowBox[{"expr_", ",", "cd1_", ",", "cd2_"}], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oldind_", "?", "xAct`xTensor`Private`upQ"}], ",", "dummy_"}], 
    "}"}], "]"}], ":=", 
  RowBox[{"Wedge", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ConnectionForm", "[", 
      RowBox[{"cd1", ",", "cd2", ",", 
       RowBox[{"VBundleOfIndex", "@", "oldind"}]}], "]"}], "[", 
     RowBox[{"oldind", ",", 
      RowBox[{"-", "dummy"}]}], "]"}], ",", 
    RowBox[{"ReplaceIndex", "[", 
     RowBox[{"expr", ",", 
      RowBox[{"oldind", "\[Rule]", "dummy"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addAChr1", "[", 
    RowBox[{"expr_", ",", "cd1_", ",", "cd2_"}], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oldind_", "?", "xAct`xTensor`Private`downQ"}], ",", "dummy_"}], 
    "}"}], "]"}], ":=", 
  RowBox[{"-", 
   RowBox[{"Wedge", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ConnectionForm", "[", 
       RowBox[{"cd1", ",", "cd2", ",", 
        RowBox[{"VBundleOfIndex", "@", "oldind"}]}], "]"}], "[", 
      RowBox[{"dummy", ",", "oldind"}], "]"}], ",", 
     RowBox[{"ReplaceIndex", "[", 
      RowBox[{"expr", ",", 
       RowBox[{"oldind", "\[Rule]", 
        RowBox[{"-", "dummy"}]}]}], "]"}]}], "]"}]}]}]}], "Input",
 InitializationCell->True],

Cell[TextData[{
 "Note that\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["d", "CD1"], 
     SuperscriptBox["v", "A"]}], "-", 
    RowBox[{
     SuperscriptBox["d", "CD2"], 
     SuperscriptBox["v", "A"]}]}], TraditionalForm]]],
 "  = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["d", "CD1"], 
      SuperscriptBox["v", "A"]}], "-", 
     RowBox[{"d", " ", 
      SuperscriptBox["v", "A"]}], "+", 
     RowBox[{"d", " ", 
      SuperscriptBox["v", "A"]}], "-", " ", 
     RowBox[{
      SuperscriptBox["d", "CD2"], 
      SuperscriptBox["v", "A"]}]}], "=", 
    RowBox[{
     FormBox[
      RowBox[{
       SubsuperscriptBox[
        RowBox[{"A", "[", 
         RowBox[{"CD1", ",", "PD", ",", "VB"}], "]"}], 
        RowBox[{"   ", "B"}], "A"], "\[Wedge]", 
       SuperscriptBox["v", "B"]}],
      TraditionalForm], "+", 
     FormBox[
      RowBox[{
       SubsuperscriptBox[
        RowBox[{"A", "[", 
         RowBox[{"PD", ",", "CD2", ",", "VB"}], "]"}], 
        RowBox[{"   ", "B"}], "A"], "\[Wedge]", 
       SuperscriptBox["v", "B"]}],
      TraditionalForm]}]}], TraditionalForm]]],
 "\nand so\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox[
     RowBox[{"A", "[", 
      RowBox[{"CD1", ",", "CD2", ",", "VB"}], "]"}], 
     RowBox[{"   ", "B"}], "A"], "=", 
    RowBox[{
     SubsuperscriptBox[
      RowBox[{"A", "[", 
       RowBox[{"CD1", ",", "PD", ",", "VB"}], "]"}], 
      RowBox[{"   ", "B"}], "A"], "+", 
     SubsuperscriptBox[
      RowBox[{"A", "[", 
       RowBox[{"PD", ",", "CD2", ",", "VB"}], "]"}], 
      RowBox[{"   ", "B"}], "A"]}]}], TraditionalForm]]],
 ".\nNow ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    RowBox[{"A", "[", 
     RowBox[{"CD", ",", "PD", ",", "VB"}], "]"}], 
    RowBox[{"   ", "B"}], "A"], TraditionalForm]]],
 "=0  iff FreeQ[VBundlesOfCovD[CD],VB]. This allows the simplification of \
A[CD1,CD2,VB] when only one of {CD1,CD2} has VB in VBundlesOfCovD."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReduceAChr1", "[", "expr_", "]"}], ":=", 
  RowBox[{"expr", "//.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ConnectionForm", "[", 
        RowBox[{"cd1_", ",", "cd2_", ",", "vb_"}], "]"}], "[", 
       RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
      RowBox[{
       RowBox[{
        RowBox[{"ConnectionForm", "[", 
         RowBox[{"cd1", ",", "PD", ",", "vb"}], "]"}], "[", 
        RowBox[{"a", ",", "b"}], "]"}], "/;", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cd2", "=!=", "PD"}], "&&", 
         RowBox[{"FreeQ", "[", 
          RowBox[{
           RowBox[{"VBundlesOfCovD", "@", "cd2"}], ",", "vb"}], "]"}]}], 
        ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"ConnectionForm", "[", 
        RowBox[{"cd1_", ",", "cd2_", ",", "vb_"}], "]"}], "[", 
       RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
      RowBox[{
       RowBox[{
        RowBox[{"ConnectionForm", "[", 
         RowBox[{"PD", ",", "cd2", ",", "vb"}], "]"}], "[", 
        RowBox[{"a", ",", "b"}], "]"}], "/;", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cd1", "=!=", "PD"}], "&&", 
         RowBox[{"FreeQ", "[", 
          RowBox[{
           RowBox[{"VBundlesOfCovD", "@", "cd1"}], ",", "vb"}], "]"}]}], 
        ")"}]}]}]}], "}"}]}]}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "2. Compute diff[diff[form,CD],CD], introducing FRiem2[CD,...] as needed. \
The formula:\n",
 "  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["d", "\[Del]"], 
     SuperscriptBox["d", "\[Del]"], 
     SuperscriptBox["v", "A"]}], " ", "=", " ", 
    RowBox[{
     SubsuperscriptBox[
      RowBox[{"F", "[", 
       RowBox[{"\[Del]", 
        RowBox[{",", "VB"}]}], "]"}], 
      RowBox[{"   ", "B"}], "A"], "\[Wedge]", 
     SuperscriptBox["v", "B"]}]}], TraditionalForm]]],
 "             (where VB is the VBundle of A; plus sign for +VB, minus sign \
for -VB)"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Diff", "[", 
   RowBox[{
    RowBox[{"Diff", "[", 
     RowBox[{"expr_", ",", "PD"}], "]"}], ",", "PD"}], "]"}], ":=", 
  "0"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "@", 
    RowBox[{"Diff", "[", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{"Diff", "[", 
        RowBox[{"expr_", ",", "cd_"}], "]"}], "]"}], ",", "cd_"}], "]"}]}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Plus", "@@", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"addFRiem2", "[", 
       RowBox[{"expr", ",", "cd"}], "]"}], ",", 
      RowBox[{"xAct`xTensor`Private`selecton", "[", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"FindFreeIndices", "@", "expr"}], ",", "AIndexQ"}], "]"}], 
        ",", 
        RowBox[{"VBundlesOfCovD", "@", "cd"}]}], "]"}]}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"addFRiem2", "[", 
      RowBox[{"expr_", ",", "cd_"}], "]"}], "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"oldind_", "?", "xAct`xTensor`Private`upQ"}], ",", "dummy_"}], 
      "}"}], "]"}], ":=", 
    RowBox[{"Wedge", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"CurvatureForm", "[", 
        RowBox[{"cd", ",", 
         RowBox[{"VBundleOfIndex", "[", "oldind", "]"}]}], "]"}], "[", 
       RowBox[{"oldind", ",", 
        RowBox[{"-", "dummy"}]}], "]"}], ",", 
      RowBox[{"ReplaceIndex", "[", 
       RowBox[{"expr", ",", 
        RowBox[{"oldind", "\[Rule]", "dummy"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addFRiem2", "[", 
    RowBox[{"expr_", ",", "cd_"}], "]"}], "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oldind_", "?", "xAct`xTensor`Private`downQ"}], ",", "dummy_"}], 
    "}"}], "]"}], ":=", 
  RowBox[{"-", 
   RowBox[{"Wedge", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CurvatureForm", "[", 
       RowBox[{"cd", ",", 
        RowBox[{"VBundleOfIndex", "[", "oldind", "]"}]}], "]"}], "[", 
      RowBox[{"dummy", ",", "oldind"}], "]"}], ",", 
     RowBox[{"ReplaceIndex", "[", 
      RowBox[{"expr", ",", 
       RowBox[{"oldind", "\[Rule]", 
        RowBox[{"-", "dummy"}]}]}], "]"}]}], "]"}]}]}]}], "Input",
 InitializationCell->True],

Cell["Just in case, add the following definitions:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CurvatureForm", "[", 
    RowBox[{"PD", ",", "_"}], "]"}], ":=", "Zero"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RiemannForm", "[", "PD", "]"}], ":=", "Zero"}], ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "3. Change from FRiem2[CD1,VB] to FRiem2[CD2,VB],  introducing \
diff[AChr1[CD...]] and Wedge[AChr1,AChr1]. The formula:\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox[
     RowBox[{"F", "[", 
      RowBox[{"CD2", ",", "VB"}], "]"}], 
     RowBox[{"   ", "B"}], "A"], "=", 
    RowBox[{
     SubsuperscriptBox[
      RowBox[{"F", "[", 
       RowBox[{"CD1", ",", "VB"}], "]"}], 
      RowBox[{"   ", "B"}], "A"], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["d", "CD1"], 
      SubsuperscriptBox[
       RowBox[{"A", "[", 
        RowBox[{"CD2", ",", "CD1", ",", "VB"}], "]"}], 
       RowBox[{"    ", "B"}], "A"]}], "+", 
     RowBox[{
      SubsuperscriptBox[
       RowBox[{"A", "[", 
        RowBox[{"CD2", ",", "CD1", ",", "VB"}], "]"}], 
       RowBox[{"    ", "C"}], "A"], "\[Wedge]", 
      SubsuperscriptBox[
       RowBox[{"A", "[", 
        RowBox[{"CD2", ",", "CD1", ",", "VB"}], "]"}], 
       RowBox[{"    ", "B"}], "C"]}]}]}], TraditionalForm]]]
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ChangeCurvatureForm", "[", 
    RowBox[{"expr_", ",", "cd_", ",", "cd_"}], "]"}], ":=", "expr"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeCurvatureForm", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{"cd1_", "?", "CurvatureQ"}], ",", 
     RowBox[{"cd2_:", "PD"}]}], "]"}], ":=", 
   RowBox[{"ReduceAChr1", "[", 
    RowBox[{"expr", "/.", 
     RowBox[{"changeCurvatureFormRules", "[", 
      RowBox[{"cd1", ",", "cd2"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeCurvatureForm", "[", 
    RowBox[{"expr_", ",", "list_List", ",", 
     RowBox[{"cd2_:", "PD"}]}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ChangeCurvatureForm", "[", 
       RowBox[{"#1", ",", "#2", ",", "cd2"}], "]"}], "&"}], ",", "expr", ",", 
     "list"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeCurvatureForm", "[", 
    RowBox[{"expr_", ",", "_", ",", 
     RowBox[{"_", ":", "PD"}]}], "]"}], ":=", "expr"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChangeCurvatureForm", "[", "expr_", "]"}], ":=", 
   RowBox[{"ChangeCurvatureForm", "[", 
    RowBox[{"expr", ",", "$CovDs"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"changeCurvatureFormRules", "[", 
    RowBox[{"cd2_", ",", "cd1_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"CurvatureForm", "[", 
        RowBox[{"cd2", ",", 
         RowBox[{"vb_", "?", "VBundleQ"}]}], "]"}], "[", 
       RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
      "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"DummyIn", "@", "vb"}]}], ",", 
          RowBox[{"A1", "=", 
           RowBox[{"ConnectionForm", "[", 
            RowBox[{"cd2", ",", "cd1", ",", "vb"}], "]"}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"CurvatureForm", "[", 
           RowBox[{"cd1", ",", "vb"}], "]"}], "[", 
          RowBox[{"a", ",", "b"}], "]"}], "+", 
         RowBox[{"Diff", "[", 
          RowBox[{
           RowBox[{"A1", "[", 
            RowBox[{"a", ",", "b"}], "]"}], ",", "cd1"}], "]"}], "+", 
         RowBox[{"Wedge", "[", 
          RowBox[{
           RowBox[{"A1", "[", 
            RowBox[{"a", ",", 
             RowBox[{"-", "c"}]}], "]"}], ",", 
           RowBox[{"A1", "[", 
            RowBox[{"c", ",", "b"}], "]"}]}], "]"}]}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"RiemannForm", "[", "cd2", "]"}], "[", 
       RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
      "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"DummyIn", "@", 
            RowBox[{"Tangent", "@", 
             RowBox[{"ManifoldOfCovD", "@", "cd2"}]}]}]}], ",", 
          RowBox[{"A1", "=", 
           RowBox[{"ChristoffelForm", "[", 
            RowBox[{"cd2", ",", "cd1"}], "]"}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"RiemannForm", "[", "cd1", "]"}], "[", 
          RowBox[{"a", ",", "b"}], "]"}], "+", 
         RowBox[{"Diff", "[", 
          RowBox[{
           RowBox[{"A1", "[", 
            RowBox[{"a", ",", "b"}], "]"}], ",", "cd1"}], "]"}], "+", 
         RowBox[{"Wedge", "[", 
          RowBox[{
           RowBox[{"A1", "[", 
            RowBox[{"a", ",", 
             RowBox[{"-", "c"}]}], "]"}], ",", 
           RowBox[{"A1", "[", 
            RowBox[{"c", ",", "b"}], "]"}]}], "]"}]}]}], "]"}]}]}], "}"}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "The exterior derivative does not depend on any covariant derivative. ",
 StyleBox["This disrupts FormVarD. Check",
  FontWeight->"Bold"],
 " "
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Diff", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{"cd_", "?", "CovDQ"}]}], "]"}], ":=", 
   RowBox[{"Diff", "[", "expr", "]"}]}], ";"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["3.6 UseCartan", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "UseCartan"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"UseCartan[expr,covd] expands all the instances of the Diff \
using the Cartan structure equations for the connection arising from covd. In \
this way it is possible to expand the exterior derivative of a co-frame, a \
torsion 2-form and the curvature 2-form. If covd is the Levi-Civita \
connection of a metric, then the exterior derivatives of that metric and its \
volume element are expanded too. UseCartan[expr,PD] expands all instances of \
the exterior derivative in terms of partial derivatives defined in the list \
of manifolds returned by ManifoldsOf[expr]. It is possible to specify a \
custom list of manifolds as a third argument in the form \
UseCartan[expr,PD,{M1,M2,..}]\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3599826464-4210687"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Thread", " ", "over", " ", "equations", " ", "and", " ", "lists"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"UseCartan", "[", 
      RowBox[{"expr_List", ",", "covd_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"UseCartan", "[", 
        RowBox[{"#", ",", "covd"}], "]"}], "&"}], "/@", "expr"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UseCartan", "[", 
      RowBox[{"expr_List", ",", "PD", ",", 
       RowBox[{"{", 
        RowBox[{"mani__", "?", "ManifoldQ"}], "}"}]}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"UseCartan", "[", 
        RowBox[{"#", ",", "PD", ",", 
         RowBox[{"{", "mani", "}"}]}], "]"}], "&"}], "/@", "expr"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UseCartan", "[", 
      RowBox[{"expr_Equal", ",", "covd_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"UseCartan", "[", 
        RowBox[{"#", ",", "covd"}], "]"}], "&"}], "/@", "expr"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UseCartan", "[", 
      RowBox[{"expr_Equal", ",", "PD", ",", 
       RowBox[{"{", 
        RowBox[{"mani__", "?", "ManifoldQ"}], "}"}]}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"UseCartan", "[", 
        RowBox[{"#", ",", "PD", ",", 
         RowBox[{"{", "mani", "}"}]}], "]"}], "&"}], "/@", "expr"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Exterior", " ", "derivative", " ", "when", " ", "covd", " ", "is", " ", 
    "PD"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"UseCartan", "[", 
      RowBox[{"expr_", ",", "PD", ",", 
       RowBox[{"{", 
        RowBox[{"mani__", "?", "ManifoldQ"}], "}"}]}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"expr", "/.", 
       RowBox[{
        RowBox[{"Diff", "@", "expr1_"}], ":>", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", "=", 
             RowBox[{"DummyIn", "/@", 
              RowBox[{"(", 
               RowBox[{"Tangent", "/@", 
                RowBox[{"{", "mani", "}"}]}], ")"}]}]}], "}"}], ",", 
           RowBox[{"Inner", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"dx", "[", "#1", "]"}], "[", "#2", "]"}], 
               RowBox[{
                RowBox[{"PD", "[", 
                 RowBox[{"-", "#2"}], "]"}], "@", "expr1"}]}], "&"}], ",", 
             RowBox[{"{", "mani", "}"}], ",", "a", ",", "Plus"}], "]"}]}], 
          "]"}], "/;", 
         RowBox[{
          RowBox[{"Deg", "@", "expr1"}], "===", "0"}]}]}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UseCartan", "[", 
      RowBox[{"expr_", ",", "PD"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"expr", "/.", 
       RowBox[{
        RowBox[{"Diff", "@", "expr1_"}], ":>", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", "=", 
             RowBox[{"DummyIn", "/@", 
              RowBox[{"(", 
               RowBox[{"Tangent", "/@", 
                RowBox[{"ManifoldsOf", "@", "expr"}]}], ")"}]}]}], "}"}], ",", 
           RowBox[{"Inner", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"dx", "[", "#1", "]"}], "[", "#2", "]"}], 
               RowBox[{
                RowBox[{"PD", "[", 
                 RowBox[{"-", "#2"}], "]"}], "@", "expr1"}]}], "&"}], ",", 
             RowBox[{"ManifoldsOf", "@", "expr"}], ",", "a", ",", "Plus"}], 
            "]"}]}], "]"}], "/;", 
         RowBox[{
          RowBox[{"Deg", "@", "expr1"}], "===", "0"}]}]}]}], ")"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ManifoldsOf"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"ManifoldsOf[expr] gives the list of manifolds on which expr \
lives.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3599826464-4210687"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inner", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"dx", "[", "#1", "]"}], "[", "#2", "]"}], 
     RowBox[{
      RowBox[{"PD", "[", 
       RowBox[{"-", "#2"}], "]"}], "@", "expr"}]}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"m1", ",", "m2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a1", ",", "a2"}], "}"}], ",", "Plus"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dx", "[", "m1", "]"}], "[", "a1", "]"}], " ", 
   InterpretationBox[
    StyleBox[
     RowBox[{
      SubscriptBox["\[PartialD]", "a1"], "expr"}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    xAct`xTensor`PD[-xAct`xTerior`Private`a1][xAct`xTerior`Private`expr],
    Editable->False]}], "+", 
  RowBox[{
   RowBox[{
    RowBox[{"dx", "[", "m2", "]"}], "[", "a2", "]"}], " ", 
   InterpretationBox[
    StyleBox[
     RowBox[{
      SubscriptBox["\[PartialD]", "a2"], "expr"}],
     ShowAutoStyles->False,
     AutoSpacing->False],
    xAct`xTensor`PD[-xAct`xTerior`Private`a2][xAct`xTerior`Private`expr],
    Editable->False]}]}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Inner"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Inner\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\
\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\
\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"g\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\) is a generalization of Dot in which \!\(\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\) plays the role of multiplication and \!\(\*StyleBox[\\\"g\\\", \
\\\"TI\\\"]\) of addition. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Inner"]}]], "Print", "PrintUsage",
 CellTags->"Info3599826465-4210687"]
}, Open  ]],

Cell["\<\
We encode the Cartan equations in a set of rules. We also encode the action \
of the exterior derivative on a function whose arguments are scalars of a \
coordinate chart.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"UseCartan", "[", 
    RowBox[{"expr_", ",", "covd_"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{"expr", "/.", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Exterior", " ", "derivative", " ", "of", " ", "the", " ", "coframe"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"HoldPattern", "[", 
         RowBox[{"Diff", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Coframe", "[", "mani_", "]"}], "[", "ind_", "]"}], ",", 
           "PD"}], "]"}], "]"}], "\[RuleDelayed]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", "=", 
            RowBox[{"DummyIn", "@", 
             RowBox[{"VBundleOfIndex", "@", "ind"}]}]}], "}"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"TorsionQ", "@", "covd"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                RowBox[{"ConnectionForm", "[", 
                 RowBox[{"covd", ",", 
                  RowBox[{"VBundleOfIndex", "@", "ind"}]}], "]"}], "[", 
                RowBox[{"ind", ",", 
                 RowBox[{"-", "a"}]}], "]"}]}], "\[Wedge]", 
              RowBox[{
               RowBox[{"Coframe", "[", "mani", "]"}], "[", "a", "]"}]}], "+", 
             
             RowBox[{
              RowBox[{"TorsionForm", "[", "covd", "]"}], "[", "ind", "]"}]}], 
            ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               RowBox[{"ConnectionForm", "[", 
                RowBox[{"covd", ",", 
                 RowBox[{"VBundleOfIndex", "@", "ind"}]}], "]"}], "[", 
               RowBox[{"ind", ",", 
                RowBox[{"-", "a"}]}], "]"}]}], "\[Wedge]", 
             RowBox[{
              RowBox[{"Coframe", "[", "mani", "]"}], "[", "a", "]"}]}]}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Exterior", " ", "derivative", " ", "of", " ", "the", " ", 
         "connection"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "[", 
         RowBox[{"Diff", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"connection", ":", 
               RowBox[{"(", 
                RowBox[{"ConnectionForm", "|", "ChristoffelForm"}], ")"}]}], 
              ")"}], "[", 
             RowBox[{"covd", ",", 
              RowBox[{"vbundle_:", 
               RowBox[{"Tangent", "@", 
                RowBox[{"ManifoldOfCovD", "@", "covd"}]}]}]}], "]"}], "[", 
            RowBox[{"a1_", ",", 
             RowBox[{"-", "a2_"}]}], "]"}], ",", "PD"}], "]"}], "]"}], 
        "\[RuleDelayed]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", "=", 
            RowBox[{"DummyIn", "@", 
             RowBox[{"VBundleOfIndex", "@", "a1"}]}]}], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"CurvatureForm", "[", 
             RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
            RowBox[{"a1", ",", 
             RowBox[{"-", "a2"}]}], "]"}], "-", 
           RowBox[{
            RowBox[{
             RowBox[{"connection", "[", 
              RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
             RowBox[{"a1", ",", 
              RowBox[{"-", "a"}]}], "]"}], "\[Wedge]", 
            RowBox[{
             RowBox[{"connection", "[", 
              RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
             RowBox[{"a", ",", 
              RowBox[{"-", "a2"}]}], "]"}]}]}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Exterior", " ", "derivative", " ", "of", " ", "the", " ", 
         "torsion"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "[", 
         RowBox[{"Diff", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"TorsionForm", "[", "covd", "]"}], "[", "ind_", "]"}], 
           ",", "PD"}], "]"}], "]"}], "\[RuleDelayed]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", "=", 
            RowBox[{"DummyIn", "@", 
             RowBox[{"VBundleOfIndex", "@", "ind"}]}]}], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Coframe", "[", 
              RowBox[{"ManifoldOfCovD", "@", "covd"}], "]"}], "[", "a", "]"}],
             "\[Wedge]", 
            RowBox[{
             RowBox[{"RiemannForm", "[", "covd", "]"}], "[", 
             RowBox[{"ind", ",", 
              RowBox[{"-", "a"}]}], "]"}]}], "-", 
           RowBox[{
            RowBox[{
             RowBox[{"ChristoffelForm", "[", "covd", "]"}], "[", 
             RowBox[{"ind", ",", 
              RowBox[{"-", "a"}]}], "]"}], "\[Wedge]", 
            RowBox[{
             RowBox[{"TorsionForm", "[", "covd", "]"}], "[", "a", "]"}]}]}]}],
          "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Exterior", " ", "derivative", " ", "of", " ", "the", " ", 
         "curvature"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "[", 
         RowBox[{"Diff", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"curvature", ":", 
               RowBox[{"(", 
                RowBox[{"CurvatureForm", "|", "RiemannForm"}], ")"}]}], ")"}],
              "[", 
             RowBox[{"covd", ",", 
              RowBox[{"vbundle_:", 
               RowBox[{"Tangent", "@", 
                RowBox[{"ManifoldOfCovD", "@", "covd"}]}]}]}], "]"}], "[", 
            RowBox[{"a1_", ",", 
             RowBox[{"-", "a2_"}]}], "]"}], ",", "PD"}], "]"}], "]"}], 
        "\[RuleDelayed]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", "=", 
            RowBox[{"DummyIn", "@", 
             RowBox[{"VBundleOfIndex", "@", "a1"}]}]}], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"ConnectionForm", "[", 
              RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
             RowBox[{"a", ",", 
              RowBox[{"-", "a2"}]}], "]"}], "\[Wedge]", 
            RowBox[{
             RowBox[{"curvature", "[", 
              RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
             RowBox[{"a1", ",", 
              RowBox[{"-", "a"}]}], "]"}]}], "-", 
           RowBox[{
            RowBox[{
             RowBox[{"curvature", "[", 
              RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
             RowBox[{"a", ",", 
              RowBox[{"-", "a2"}]}], "]"}], "\[Wedge]", 
            RowBox[{
             RowBox[{"ConnectionForm", "[", 
              RowBox[{"covd", ",", "vbundle"}], "]"}], "[", 
             RowBox[{"a1", ",", 
              RowBox[{"-", "a"}]}], "]"}]}]}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Exterior", " ", "derivative", " ", "of", " ", "the", " ", "metric", 
         " ", 
         RowBox[{"(", 
          RowBox[{"indices", " ", "downstairs"}], ")"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "[", 
         RowBox[{"Diff", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"metr_", "?", "MetricQ"}], "[", 
            RowBox[{
             RowBox[{"-", "a1_"}], ",", 
             RowBox[{"-", "a2_"}]}], "]"}], ",", "PD"}], "]"}], "]"}], 
        "\[RuleDelayed]", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", "=", 
             RowBox[{"DummyIn", "@", 
              RowBox[{"VBundleOfIndex", "@", "a1"}]}]}], "}"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"ChristoffelForm", "[", "covd", "]"}], "[", 
              RowBox[{"a", ",", 
               RowBox[{"-", "a1"}]}], "]"}], 
             RowBox[{
              RowBox[{"MetricOfCovD", "[", "covd", "]"}], "[", 
              RowBox[{
               RowBox[{"-", "a"}], ",", 
               RowBox[{"-", "a2"}]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{
              RowBox[{"ChristoffelForm", "[", "covd", "]"}], "[", 
              RowBox[{"a", ",", 
               RowBox[{"-", "a2"}]}], "]"}], 
             RowBox[{
              RowBox[{"MetricOfCovD", "[", "covd", "]"}], "[", 
              RowBox[{
               RowBox[{"-", "a"}], ",", 
               RowBox[{"-", "a1"}]}], "]"}]}]}]}], "]"}], "/;", 
         RowBox[{
          RowBox[{"MetricOfCovD", "[", "covd", "]"}], "===", "metr"}]}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Exterior", " ", "derivative", " ", "of", " ", "the", " ", "metric", 
         " ", 
         RowBox[{"(", 
          RowBox[{"indices", " ", "upstairs"}], ")"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "[", 
         RowBox[{"Diff", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"metr_", "?", "MetricQ"}], "[", 
            RowBox[{"a1_Symbol", ",", "a2_Symbol"}], "]"}], ",", "PD"}], 
          "]"}], "]"}], "\[RuleDelayed]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            RowBox[{"ChristoffelForm", "[", "covd", "]"}], "[", 
            RowBox[{"a1", ",", "a2"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"ChristoffelForm", "[", "covd", "]"}], "[", 
           RowBox[{"a2", ",", "a1"}], "]"}]}], "/;", 
         RowBox[{
          RowBox[{"MetricOfCovD", "[", "covd", "]"}], "===", "metr"}]}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "Exterior", " ", "derivative", " ", "of", " ", "the", " ", "tensor", 
          " ", "form", " ", "of", " ", "volume", " ", "element"}], ",", " ", 
         RowBox[{
          RowBox[{"regarded", " ", "as", " ", "a", " ", "zero"}], "-", 
          RowBox[{"form", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"indices", " ", "downstairs"}], ")"}], ".", " ", "I"}], 
           " ", "think", " ", "that", " ", "this", " ", "formula", " ", "is", 
           " ", "dimension", " ", "independent"}]}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MetricOfCovD", "[", "covd", "]"}], "=!=", "Null"}], ",", 
         RowBox[{
          RowBox[{"Diff", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"epsilon", "[", 
              RowBox[{"MetricOfCovD", "[", "covd", "]"}], "]"}], "[", 
             RowBox[{"inds__", "?", "DownIndexQ"}], "]"}], ",", "PD"}], "]"}],
           "\[RuleDelayed]", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", "=", 
              RowBox[{"DummyIn", "@", 
               RowBox[{"VBundleOfMetric", "@", 
                RowBox[{"MetricOfCovD", "[", "covd", "]"}]}]}]}], "}"}], ",", 
            
            RowBox[{
             RowBox[{
              RowBox[{"ChristoffelForm", "[", "covd", "]"}], "[", 
              RowBox[{"a", ",", 
               RowBox[{"-", "a"}]}], "]"}], 
             RowBox[{
              RowBox[{"epsilon", "[", 
               RowBox[{"MetricOfCovD", "[", "covd", "]"}], "]"}], "[", "inds",
               "]"}]}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"HoldPattern", "[", 
           RowBox[{"Diff", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"epsilon", "[", 
               RowBox[{"MetricOfCovD", "[", "covd", "]"}], "]"}], "[", 
              "inds__", "]"}], ",", "PD"}], "]"}], "]"}], "\[RuleDelayed]", 
          RowBox[{"Diff", "[", 
           RowBox[{
            RowBox[{"epsilon", "[", 
             RowBox[{"MetricOfCovD", "[", "covd", "]"}], "]"}], "[", "inds", 
            "]"}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Exterior", " ", "derivative", " ", "when", " ", "covd", " ", "is", 
         " ", "the", " ", "parallel", " ", "derivative", " ", "of", " ", "a", 
         " ", "coordinate", " ", "chart"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HoldPattern", "@", 
         RowBox[{"Diff", "[", 
          RowBox[{
           RowBox[{"expr1_", "?", "ScalarQ"}], ",", "PD"}], "]"}]}], 
        "\[RuleDelayed]", 
        RowBox[{
         RowBox[{"Inner", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"covd", "[", 
               RowBox[{"{", 
                RowBox[{"#1", ",", 
                 RowBox[{"-", 
                  RowBox[{"BasisOfCovD", "@", "covd"}]}]}], "}"}], "]"}], "@",
               "expr1"}], " ", 
             RowBox[{"Diff", "@", "#2"}]}], "&"}], ",", 
           RowBox[{"CNumbersOf", "[", 
            RowBox[{
             RowBox[{"BasisOfCovD", "@", "covd"}], ",", 
             RowBox[{"VBundleOfBasis", "@", 
              RowBox[{"BasisOfCovD", "@", "covd"}]}]}], "]"}], ",", 
           RowBox[{"ScalarsOfChart", "@", 
            RowBox[{"BasisOfCovD", "@", "covd"}]}], ",", "Plus"}], "]"}], "/;", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Deg", "@", "expr1"}], "===", "0"}], "&&", 
           RowBox[{
            RowBox[{"BasisOfCovD", "@", "covd"}], "=!=", "Null"}]}], 
          ")"}]}]}]}], "}"}]}], ")"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["3.7 Interior product and Lie derivative", "Subsubsection"],

Cell["\<\
We define the interior product of form with a vector as a derivation of \
degree -1.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Int"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"Int[v][form] is the interior contraction of form with the \
vector (rank 1-tensor) v\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3599826465-4210687"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefGradedDerivation", "[", 
   RowBox[{
    RowBox[{"Int", "[", "v_", "]"}], ",", "Wedge", ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{"PrintAs", "\[Rule]", "\"\<\[Iota]\>\""}]}], "]"}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[StyleBox["Use this code",
 FontWeight->"Bold"]], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", "v_", "]"}], "[", 
    RowBox[{"f_", "?", "ZeroDegQ"}], "]"}], ":=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", "v_", "]"}], "[", 
    RowBox[{
     RowBox[{"f_", "?", "ZeroDegQ"}], " ", "form_"}], "]"}], ":=", 
   RowBox[{"f", " ", 
    RowBox[{
     RowBox[{"Int", "[", "v", "]"}], "[", "form", "]"}]}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", "v_", "]"}], "[", 
    RowBox[{"f_", " ", "form_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"f", " ", 
     RowBox[{
      RowBox[{"Int", "[", "v", "]"}], "[", "form", "]"}]}], "/;", 
    RowBox[{
     RowBox[{"Deg", "@", "f"}], "===", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", "v_", "]"}], "[", "f_", "]"}], ":=", 
   RowBox[{"0", "/;", 
    RowBox[{
     RowBox[{"Deg", "@", "f"}], "===", "0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{
      RowBox[{"f_", "?", "ScalarQ"}], " ", "v_"}], "]"}], "[", "form_", "]"}],
    ":=", 
   RowBox[{"f", " ", 
    RowBox[{
     RowBox[{"Int", "[", "v", "]"}], "[", "form", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{"v_", "[", "ind1_", "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"Coframe", "[", "mani_", "]"}], "[", "ind2_", "]"}], "]"}], ":=", 
   RowBox[{"v", "[", "ind2", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", 
     RowBox[{"v_", "[", "ind1_", "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"dx", "[", "mani_", "]"}], "[", "ind2_", "]"}], "]"}], ":=", 
   RowBox[{"v", "[", "ind2", "]"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell["Interior contraction of basis objects is zero.", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Int", "[", "v_", "]"}], "[", "_Basis", "]"}], ":=", "0"}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell["\<\
The Lie derivative is defined in a very similar form: Alfonso: is it possible \
to use Lie as in xTensor ? Answer: No.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CartanD"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"CartanD[v][form] is the Cartan derivative of form with respect \
to the vector (rank 1-tensor) v. CartanD[v][form,covd] is the Cartan \
derivative with respect to the covariant derivative covd.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3599826465-4210687"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefGradedDerivation", "[", 
   RowBox[{
    RowBox[{"CartanD", "[", "v_", "]"}], ",", "Wedge", ",", "0", ",", 
    RowBox[{"PrintAs", "\[Rule]", "\"\<L\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell["Lie acting on basis objects is zero.", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CartanD", "[", "v_", "]"}], "[", "_Basis", "]"}], ":=", "0"}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CartanD", "[", "v_", "]"}], "[", 
    RowBox[{"_Basis", ",", "_"}], "]"}], ":=", "0"}], ";"}]], "Input",
 InitializationCell->True],

Cell["\<\
Superscript formatting for Lie derivatives arising from the exterior \
derivatives\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CartanD", "/:", 
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CartanD", "[", "v_", "]"}], "[", 
      RowBox[{"form_", ",", 
       RowBox[{"PD", "?", "CovDQ"}]}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
   RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CartanD", "[", "v", "]"}], "[", 
      RowBox[{"form", ",", "PD"}], "]"}], ",", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SubscriptBox", "[", 
         RowBox[{"\"\<L\>\"", ",", 
          RowBox[{"MakeBoxes", "[", 
           RowBox[{"v", ",", "StandardForm"}], "]"}]}], "]"}], ",", 
        "\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}], ",", "\"\<]\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CartanD", "/:", 
   RowBox[{"MakeBoxes", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CartanD", "[", "v_", "]"}], "[", 
      RowBox[{"form_", ",", 
       RowBox[{"cd_", "?", "CovDQ"}]}], "]"}], ",", "StandardForm"}], "]"}], ":=", 
   RowBox[{"xAct`xTensor`Private`interpretbox", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CartanD", "[", "v", "]"}], "[", 
      RowBox[{"form", ",", "cd"}], "]"}], ",", 
     RowBox[{"RowBox", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SubsuperscriptBox", "[", 
         RowBox[{"\"\<L\>\"", ",", 
          RowBox[{"MakeBoxes", "[", 
           RowBox[{"v", ",", "StandardForm"}], "]"}], ",", 
          RowBox[{"Last", "@", 
           RowBox[{"SymbolOfCovD", "[", "cd", "]"}]}]}], "]"}], ",", 
        "\"\<[\>\"", ",", 
        RowBox[{"MakeBoxes", "[", 
         RowBox[{"form", ",", "StandardForm"}], "]"}], ",", "\"\<]\>\""}], 
       "}"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CartanD", "[", 
     RowBox[{
      RowBox[{"f_", "?", "ScalarQ"}], " ", "v_"}], "]"}], "[", "form_", "]"}],
    ":=", 
   RowBox[{
    RowBox[{"f", " ", 
     RowBox[{
      RowBox[{"CartanD", "[", "v", "]"}], "@", "form"}]}], "+", 
    RowBox[{"Wedge", "[", 
     RowBox[{
      RowBox[{"Diff", "@", "f"}], ",", 
      RowBox[{
       RowBox[{"Int", "[", "v", "]"}], "@", "form"}]}], "]"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell["We still need definition when acting on Times", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "produces", " ", "expanded", " ", "expressions", " ", "and", 
    " ", "is", " ", "much", " ", "faster", " ", "when", " ", "there", " ", 
    "are", " ", "many", " ", "scalars"}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"CartanD", "[", "v_", "]"}], "[", 
      RowBox[{"expr_Times", ",", "rest___"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"grades", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Grade", "[", 
             RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
           RowBox[{"List", "@@", "expr"}]}]}], ",", "pos", ",", "scalar", ",",
          "form"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pos", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"grades", ",", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "=!=", "0"}], "&"}], ")"}]}], ",", "1", ",", 
           RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Which", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], ">", "1"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"Throw", "[", 
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"Diff", "::", "error1"}], ",", 
             "\"\<Found Times product of nonscalar forms: \>\"", ",", 
             "expr"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], "===", "1"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"pos", "=", 
            RowBox[{"pos", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"scalar", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"expr", ",", 
              RowBox[{"{", "pos", "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"form", "=", 
            RowBox[{"expr", "[", 
             RowBox[{"[", "pos", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\t", 
           RowBox[{
            RowBox[{"scalar", " ", 
             RowBox[{
              RowBox[{"CartanD", "[", "v", "]"}], "[", 
              RowBox[{"form", ",", "rest"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"lie0", "[", "v", "]"}], "[", 
             RowBox[{"scalar", ",", "form"}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], "===", "0"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"lie0", "[", "v", "]"}], "[", "expr", "]"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"lie0", "[", "v_", "]"}], "[", "expr_Times", "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"MapAt", "[", 
        RowBox[{
         RowBox[{"CartanD", "[", "v", "]"}], ",", "expr", ",", "i"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "expr", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"lie0", "[", "v_", "]"}], "[", 
      RowBox[{"expr_Times", ",", "form_"}], "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"MapAt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"CartanD", "[", "v", "]"}], "[", 
           RowBox[{"#", ",", "form"}], "]"}], "&"}], ",", "expr", ",", "i"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "expr", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"lie0", "[", "v_", "]"}], "[", 
      RowBox[{"expr_", ",", "form_"}], "]"}], ":=", 
     RowBox[{"Wedge", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"CartanD", "[", "v", "]"}], "[", "expr", "]"}], ",", "form"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"lie0", "[", "v_", "]"}], "[", "expr_", "]"}], ":=", 
     RowBox[{
      RowBox[{"CartanD", "[", "v", "]"}], "[", "expr", "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True],

Cell["\<\
Leibinitz rule for xTensor LieD when acting on wedge product expressions:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "@", "LieD"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LieD", "[", "v_", "]"}], "@", "expr_Wedge"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"CartanD", "[", "v", "]"}], "@", "expr"}], "/.", 
     RowBox[{"CartanD", "\[Rule]", "LieD"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "@", "LieD"}], ";"}]}], "Input",
 InitializationCell->True],

Cell["\<\
Lie and diff commute (probably not true for covariant exterior derivatives). \
We need to pick a canonical order. Should this be done by a SortDs type \
function?\
\>", "Text"],

Cell["Cartan identity:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CartanDToDiff", "[", "expr_", "]"}], ":=", 
   RowBox[{"expr", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"CartanD", "[", "v_", "]"}], "[", "form_", "]"}], 
       "\[RuleDelayed]", 
       RowBox[{
        RowBox[{"Diff", "@", 
         RowBox[{
          RowBox[{"Int", "[", "v", "]"}], "@", "form"}]}], "+", 
        RowBox[{
         RowBox[{"Int", "[", "v", "]"}], "@", 
         RowBox[{"Diff", "@", "form"}]}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"CartanD", "[", "v_", "]"}], "[", 
        RowBox[{"form_", ",", 
         RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], "\[RuleDelayed]", 
       RowBox[{
        RowBox[{"Diff", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Int", "[", "v", "]"}], "@", "form"}], ",", "covd"}], 
         "]"}], "+", 
        RowBox[{
         RowBox[{"Int", "[", "v", "]"}], "@", 
         RowBox[{"Diff", "[", 
          RowBox[{"form", ",", "covd"}], "]"}]}]}]}]}], "}"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell["\<\
Lie derivative of a tensor valued differential form. We overload the xTensor \
command LieDToCovD. Note: xTensor LieD doesn\[CloseCurlyQuote]t know how to \
work with wedge products.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "LieDToCovD"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"LieDToCovD[expr, covd] transforms LieD[v][expr1] into LieD[v, \
covd][expr1] so that the Lie derivative of expr1 along v is computed in terms \
of the covariant derivative covd.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3599826466-4210687"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LieDForm", "[", 
     RowBox[{
      RowBox[{"v_", "[", "ind_", "]"}], ",", 
      RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], "@", "ten_"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", "=", 
       RowBox[{"DummyIn", "@", 
        RowBox[{"VBundleOfIndex", "@", "ind"}]}]}], "}"}], ",", 
     RowBox[{"ToCanonical", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"LieD", "[", 
          RowBox[{
           RowBox[{"v", "[", "ind", "]"}], ",", "covd"}], "]"}], "@", "ten"}],
         "+", 
        RowBox[{
         RowBox[{"CartanD", "[", 
          RowBox[{"v", "[", "ind", "]"}], "]"}], "[", 
         RowBox[{"ten", ",", "covd"}], "]"}], "-", 
        RowBox[{
         RowBox[{"v", "[", "a", "]"}], 
         RowBox[{
          RowBox[{"covd", "[", 
           RowBox[{"-", "a"}], "]"}], "@", "ten"}]}]}], ",", 
       RowBox[{"UseMetricOnVBundle", "\[Rule]", "None"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LieDFormToCovD", "[", 
    RowBox[{"expr_", ",", "covd_"}], "]"}], ":=", 
   RowBox[{"expr", "//.", 
    RowBox[{
     RowBox[{"LieD", "[", "vector_", "]"}], "\[RuleDelayed]", 
     RowBox[{"LieDForm", "[", 
      RowBox[{"vector", ",", "covd"}], "]"}]}]}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "@", "LieDToCovD"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LieDToCovD", "[", 
   RowBox[{"expr_", ",", 
    RowBox[{"arg_:", "PD"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"LieDFormToCovD", "[", 
    RowBox[{"expr", ",", "arg"}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Deg", "@", "expr"}], "\[GreaterEqual]", 
    "1"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "@", "LieDToCovD"}], ";"}]}], "Input",
 InitializationCell->True],

Cell[TextData[{
 "Either there\[CloseCurlyQuote]s a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " bug here or there\[CloseCurlyQuote]s something which I don\
\[CloseCurlyQuote]t understand."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Options", "@", "F"}], ":=", 
  RowBox[{"{", 
   RowBox[{"FirstOption", "\[Rule]", "OptionA"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"expr_", ",", 
     RowBox[{"covd_:", "PD"}], ",", 
     RowBox[{"options", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "dfq", "}"}], ",", 
     RowBox[{
      RowBox[{"dfq", "=", 
       RowBox[{"OptionValue", "[", 
        RowBox[{"F", ",", 
         RowBox[{"{", "options", "}"}], ",", 
         RowBox[{"{", "FirstOption", "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"expr", ",", "covd", ",", "dfq"}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input"],

Cell["\<\
As far as I understand it, the second element in the list should be PD rather \
than the option rule.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"F", "[", 
  RowBox[{"1", ",", 
   RowBox[{"FirstOption", "\[Rule]", "OptionA"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"FirstOption", "\[Rule]", "OptionA"}], ",", 
   RowBox[{"{", "OptionA", "}"}]}], "}"}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3.8 Commuting and sorting of the derivations ", "Subsubsection"],

Cell["Jose: this is brilliant!", "Text"],

Cell[TextData[{
 "There are 6 equations in all for the (super-)commutators of the three \
derivations (also the negations of these three equations). It is easy to \
write them down. The LHS\[CloseCurlyQuote]s are just super-commutators of two \
derivations, in whatever order you want. The sign is + just for [odd,odd] so \
that\[CloseCurlyQuote]s for [d,d], [\[Iota],\[Iota]], and [\[Iota],d]. Then \
the RHS is itself a single derivation, with the degree being the sum of \
degrees from the LHS. If there is only one vector argument, it\
\[CloseCurlyQuote]s clear what the RHS should be. When there are two vector \
arguments, then the vector on the RHS is the Lie bracket of the two from the \
LHS, in the order that they came on the LHS.\n \nThe equations are:\n1. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["d", "2"], "=", "0"}], TraditionalForm]]],
 "\n2. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[Iota]", "v"], 
      SubscriptBox["\[Iota]", "w"]}], "+", 
     RowBox[{
      SubscriptBox["\[Iota]", "w"], 
      SubscriptBox["\[Iota]", "v"]}]}], "=", "0"}], TraditionalForm]]],
 "\n3. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[ScriptCapitalL]", "v"], 
      SubscriptBox["\[ScriptCapitalL]", "w"]}], "-", 
     RowBox[{
      SubscriptBox["\[ScriptCapitalL]", "w"], 
      SubscriptBox["\[ScriptCapitalL]", "v"]}]}], "=", 
    SubscriptBox["\[ScriptCapitalL]", 
     RowBox[{"[", 
      RowBox[{"v", ",", "w"}], "]"}]]}], TraditionalForm]]],
 "\n4. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Iota]", "v"], 
     SubscriptBox["\[ScriptCapitalL]", "w"]}], "-", 
    RowBox[{
     SubscriptBox["\[ScriptCapitalL]", "w"], 
     SubscriptBox["\[Iota]", "v"]}]}], TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Iota]", 
    RowBox[{"[", 
     RowBox[{"v", ",", "w"}], "]"}]], TraditionalForm]]],
 "\n5. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[Iota]", "v"], "d"}], "+", 
     RowBox[{"d", " ", 
      SubscriptBox["\[Iota]", "v"]}]}], "=", " ", 
    SubscriptBox["\[ScriptCapitalL]", "v"]}], TraditionalForm]]],
 "\n6. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[ScriptCapitalL]", "v"], "d"}], "-", 
     RowBox[{"d", " ", 
      SubscriptBox["\[ScriptCapitalL]", "v"]}]}], "=", "0"}], 
   TraditionalForm]]],
 " (\[OpenCurlyDoubleQuote]Cartan\[CloseCurlyQuote]s magic formula\
\[CloseCurlyDoubleQuote])"
}], "Text"],

Cell["\<\
1. requires no action (it will just be automatically killed).
2, 3. Maybe have this sorted automatically? Any canonical order for v,w \
imposes a canonical order on the derivations.
4, 5, 6\[LongDash]write rules to go in either direction.\
\>", "Text"],

Cell["\<\
[Jose: It is better to have this type of rule with a check !OrderedQ[...] \
because if the two vectors are equal then you may run into infinite \
recursion. Change it.]\
\>", "Text"],

Cell["\<\
TODO: Deal with diff[expr,CD] where CD is not just PD. Alfonso: are there \
commutation rules for the exterior covariant derivatives ? Alfonso: yes there \
are, they are the same as those without PD.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"Diff", ",", "Diff"}], "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"Int", ",", "Int"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{
       RowBox[{"Int", "[", "v_", "]"}], "@", 
       RowBox[{
        RowBox[{"Int", "[", "w_", "]"}], "@", "form_"}]}], "]"}], 
     "\[RuleDelayed]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Int", "[", "w", "]"}], "@", 
        RowBox[{
         RowBox[{"Int", "[", "v", "]"}], "@", "form"}]}]}], "/;", 
      RowBox[{"!", 
       RowBox[{"OrderedQ", "[", 
        RowBox[{"{", 
         RowBox[{"v", ",", "w"}], "}"}], "]"}]}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"CartanD", ",", "CartanD"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"CartanD", "[", "v_", "]"}], "@", 
        RowBox[{
         RowBox[{"CartanD", "[", "w_", "]"}], "@", "form_"}]}], "]"}], 
      "\[RuleDelayed]", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", "=", 
           RowBox[{"First", "@", 
            RowBox[{"FindFreeIndices", "[", "v", "]"}]}]}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"CartanD", "[", "w", "]"}], "@", 
           RowBox[{
            RowBox[{"CartanD", "[", "v", "]"}], "@", "form"}]}], "+", 
          RowBox[{
           RowBox[{"CartanD", "[", 
            RowBox[{
             RowBox[{"Bracket", "[", 
              RowBox[{"v", ",", "w"}], "]"}], "[", "a", "]"}], "]"}], "@", 
           "form"}]}]}], "]"}], "/;", 
       RowBox[{"!", 
        RowBox[{"OrderedQ", "[", 
         RowBox[{"{", 
          RowBox[{"v", ",", "w"}], "}"}], "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"CartanD", "[", "v_", "]"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"CartanD", "[", "w_", "]"}], "[", 
          RowBox[{"form_", ",", 
           RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], ",", 
         RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], "]"}], "\[RuleDelayed]", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", "=", 
           RowBox[{"First", "@", 
            RowBox[{"FindFreeIndices", "[", "v", "]"}]}]}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"CartanD", "[", "w", "]"}], "[", 
           RowBox[{
            RowBox[{
             RowBox[{"CartanD", "[", "v", "]"}], "[", 
             RowBox[{"form", ",", "covd"}], "]"}], ",", "covd"}], "]"}], "+", 
          
          RowBox[{
           RowBox[{"CartanD", "[", 
            RowBox[{
             RowBox[{"Bracket", "[", 
              RowBox[{"v", ",", "w"}], "]"}], "[", "a", "]"}], "]"}], "[", 
           RowBox[{"form", ",", "covd"}], "]"}]}]}], "]"}], "/;", 
       RowBox[{"!", 
        RowBox[{"OrderedQ", "[", 
         RowBox[{"{", 
          RowBox[{"v", ",", "w"}], "}"}], "]"}]}]}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell["\<\
Below, SortDerivationsRule[d1,d2][expr] changes instances of d2\[CenterDot]d1 \
into d1\[CenterDot]d2. There is no need to check orderings.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"Int", ",", "CartanD"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"CartanD", "[", "w_", "]"}], "@", 
        RowBox[{
         RowBox[{"Int", "[", "v_", "]"}], "@", "form_"}]}], "]"}], 
      "\[RuleDelayed]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", "=", 
          RowBox[{"First", "@", 
           RowBox[{"FindFreeIndices", "[", "w", "]"}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Int", "[", "v", "]"}], "@", 
          RowBox[{
           RowBox[{"CartanD", "[", "w", "]"}], "@", "form"}]}], "+", 
         RowBox[{
          RowBox[{"Int", "[", 
           RowBox[{
            RowBox[{"Bracket", "[", 
             RowBox[{"w", ",", "v"}], "]"}], "[", "a", "]"}], "]"}], "@", 
          "form"}]}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"CartanD", "[", "w_", "]"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Int", "[", "v_", "]"}], "@", "form_"}], ",", 
         RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], "]"}], "\[RuleDelayed]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", "=", 
          RowBox[{"First", "@", 
           RowBox[{"FindFreeIndices", "[", "w", "]"}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Int", "[", "v", "]"}], "@", 
          RowBox[{
           RowBox[{"CartanD", "[", "w", "]"}], "[", 
           RowBox[{"form", ",", "covd"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Int", "[", 
           RowBox[{
            RowBox[{"Bracket", "[", 
             RowBox[{"w", ",", "v"}], "]"}], "[", "a", "]"}], "]"}], "@", 
          "form"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"CartanD", ",", "Int"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"Int", "[", "v_", "]"}], "@", 
        RowBox[{
         RowBox[{"CartanD", "[", "w_", "]"}], "@", "form_"}]}], "]"}], 
      "\[RuleDelayed]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", "=", 
          RowBox[{"First", "@", 
           RowBox[{"FindFreeIndices", "[", "w", "]"}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"CartanD", "[", "w", "]"}], "@", 
          RowBox[{
           RowBox[{"Int", "[", "v", "]"}], "@", "form"}]}], "+", 
         RowBox[{
          RowBox[{"Int", "[", 
           RowBox[{
            RowBox[{"Bracket", "[", 
             RowBox[{"v", ",", "w"}], "]"}], "[", "a", "]"}], "]"}], "@", 
          "form"}]}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"Int", "[", "v_", "]"}], "@", 
        RowBox[{
         RowBox[{"CartanD", "[", "w_", "]"}], "[", 
         RowBox[{"form_", ",", 
          RowBox[{"covd_", "?", "CovDQ"}]}], "]"}]}], "]"}], "\[RuleDelayed]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", "=", 
          RowBox[{"First", "@", 
           RowBox[{"FindFreeIndices", "[", "w", "]"}]}]}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"CartanD", "[", "w", "]"}], "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Int", "[", "v", "]"}], "@", "form"}], ",", "covd"}], 
          "]"}], "+", 
         RowBox[{
          RowBox[{"Int", "[", 
           RowBox[{
            RowBox[{"Bracket", "[", 
             RowBox[{"v", ",", "w"}], "]"}], "[", "a", "]"}], "]"}], "@", 
          "form"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"Int", ",", "Diff"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{"Diff", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Int", "[", "v_", "]"}], "@", "form_"}], ",", 
        RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], "]"}], "\[RuleDelayed]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Int", "[", "v", "]"}], "@", 
        RowBox[{"Diff", "[", 
         RowBox[{"form", ",", "covd"}], "]"}]}]}], "+", 
      RowBox[{
       RowBox[{"CartanD", "[", "v", "]"}], "[", 
       RowBox[{"form", ",", "covd"}], "]"}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"Diff", ",", "Int"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{
       RowBox[{"Int", "[", "v_", "]"}], "@", 
       RowBox[{"Diff", "[", 
        RowBox[{"form_", ",", 
         RowBox[{"covd_", "?", "CovDQ"}]}], "]"}]}], "]"}], "\[RuleDelayed]", 
     
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Diff", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Int", "[", "v", "]"}], "@", "form"}], ",", "covd"}], 
        "]"}]}], "+", 
      RowBox[{
       RowBox[{"CartanD", "[", "v", "]"}], "[", 
       RowBox[{"form", ",", "covd"}], "]"}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"CartanD", ",", "Diff"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{"Diff", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"CartanD", "[", "v_", "]"}], "@", "form_"}], ",", "PD"}], 
        "]"}], "]"}], "\[RuleDelayed]", 
      RowBox[{
       RowBox[{"CartanD", "[", "v", "]"}], "@", 
       RowBox[{"Diff", "@", "form"}]}]}], ",", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{"Diff", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"CartanD", "[", "v_", "]"}], "[", 
          RowBox[{"form_", ",", 
           RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], ",", 
         RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], "]"}], "\[RuleDelayed]", 
      RowBox[{
       RowBox[{"CartanD", "[", "v", "]"}], "[", 
       RowBox[{
        RowBox[{"Diff", "[", 
         RowBox[{"form", ",", "covd"}], "]"}], ",", "covd"}], "]"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivationsRule", "[", 
    RowBox[{"Diff", ",", "CartanD"}], "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"CartanD", "[", "v_", "]"}], "@", 
        RowBox[{"Diff", "[", 
         RowBox[{"form_", ",", "PD"}], "]"}]}], "]"}], "\[RuleDelayed]", 
      RowBox[{"Diff", "@", 
       RowBox[{
        RowBox[{"CartanD", "[", "v", "]"}], "@", "form"}]}]}], ",", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{
        RowBox[{"CartanD", "[", "v_", "]"}], "[", 
        RowBox[{
         RowBox[{"Diff", "[", 
          RowBox[{"form_", ",", 
           RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], ",", 
         RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], "]"}], "\[RuleDelayed]", 
      RowBox[{"Diff", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"CartanD", "[", "v", "]"}], "[", 
         RowBox[{"form", ",", "covd"}], "]"}], ",", "covd"}], "]"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell["\<\
Now we choose a default left-to-right order that we want derivations to have. \
I don\[CloseCurlyQuote]t know if there is a best order (i.e. what encourages \
the largest number of terms to vanish).\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "$DerivationSortOrder"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"$DerivationSortOrder is a global variable which encodes the \
default ordering of the three derivatives Int, LieD and Diff. The default is \
{LieD,Int,Diff}\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3599826466-4210687"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Derivations", "=", 
   RowBox[{"{", 
    RowBox[{"CartanD", ",", "Int", ",", "Diff"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$DerivationSortOrder", "=", "$Derivations"}], ";"}]}], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SortDerivations"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"SortDerivations[expr] brings expr into a new expression where \
all the derivations (exterior derivative, Lie derivative and interior \
contraction) are written in a canonical order. The default left-to-right \
order is defined by the variable $DerivationSortOrder\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3599826466-4210687"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SortDerivations", "[", "expr_", "]"}], ":=", 
  RowBox[{"SortDerivations", "[", 
   RowBox[{"expr", ",", "$DerivationSortOrder"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SortDerivations", "[", 
    RowBox[{"expr_", ",", "order_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Make", " ", "sure", " ", "that", " ", "order", " ", "is", " ", "some", 
       " ", "permutation", " ", "of", " ", "$Derivations"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sort", "@", "order"}], "=!=", 
         RowBox[{"Sort", "@", "$Derivations"}]}], ",", 
        RowBox[{
         RowBox[{"Throw", "@", 
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"SortDerivations", "::", "invalid"}], ",", 
            "\"\<order\>\"", ",", "order"}], "]"}]}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"expr", "//.", 
        RowBox[{"Join", "@@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Join", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"SortDerivationsRule", "[", 
                RowBox[{
                 RowBox[{"order", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
              RowBox[{"Drop", "[", 
               RowBox[{"order", ",", "i"}], "]"}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              RowBox[{"Length", "@", "order"}], "-", "1"}]}], "}"}]}], 
          "]"}]}]}], "//.", 
       RowBox[{"Join", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"SortDerivationsRule", "[", 
            RowBox[{"#", ",", "#"}], "]"}], "&"}], "/@", "order"}], 
         ")"}]}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4. Variational derivatives of top rank forms", "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell["4.1 FormVarD", "Subsubsection"],

Cell["Check that a form has top rank", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TopRankQ", "[", "form_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"manifolds", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"DependenciesOf", "@", "form"}], ",", "ManifoldQ"}], "]"}]}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "manifolds"}], " ", "\[NotEqual]", " ", "1"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Throw", "@", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"TopRankQ", "::", "error1"}], ",", 
          "\"\<Forms must have exactly 1 manifold in dependencies.\>\""}], 
         "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"TopRankQ", "[", 
        RowBox[{"form", ",", 
         RowBox[{"First", "@", "manifolds"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TopRankQ", "[", 
    RowBox[{"form_", ",", 
     RowBox[{"mani_", "?", "ManifoldQ"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Grade", "[", 
     RowBox[{"form", ",", "Wedge"}], "]"}], "===", 
    RowBox[{"DimOfManifold", "@", "mani"}]}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[TextData[{
 "FormVarD is supposed to be like VarD, but for top-rank forms. A derivative \
is not specified, because the exterior derivative is natural. However, the \
adjoint to the exterior derivative, the codifferential, requires a Hodge \
dual, which we define via a (non-degenerate!) metric. Therefore FormVarD has \
the notation FormVarD[form, metric][expr, rest]. The convention is that expr \
and rest are combined as \[Delta](expr)\[Wedge]rest (here I write the \
variational derivative as \[Delta], and always subscript the codifferential \
as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", "g"], TraditionalForm]]],
 "). This means that when writing the Leibniz rule for the Wedge product, we \
must re-order the factors, i.e.\n  \[Delta](a\[Wedge]b\[Wedge]c) = \[Delta]a\
\[Wedge]b\[Wedge]c + a\[Wedge]\[Delta]b\[Wedge]c + \
a\[Wedge]b\[Wedge]\[Delta]c=\[Delta]a\[Wedge]b\[Wedge]c + ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"|", 
     RowBox[{"a", "||", "b"}], "|"}]], TraditionalForm]]],
 "\[Delta]b\[Wedge]a\[Wedge]c + ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"|", "a", "|", 
       RowBox[{"+", 
        RowBox[{"|", "b", "|"}]}]}], ")"}], "|", "c", "|"}]], 
   TraditionalForm]]],
 "\[Delta]c\[Wedge]a\[Wedge]b       etc.\nThe other identities we need \
follow. For a Hodge star,\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "\[Wedge]", 
    RowBox[{"(", 
     SubscriptBox["\[Star]", "g"]}]}], TraditionalForm]]],
 "b) = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"a", ",", "b"}], "\[RightAngleBracket]"}], "g"], 
   TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["dVol", "g"], TraditionalForm]]],
 "     \[LineSeparator]where |a|+|*b|=n, and where\n  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"a", ",", "b"}], "\[RightAngleBracket]"}], "g"], 
   TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["g", 
      RowBox[{
       SubscriptBox["i", "1"], 
       SubscriptBox["j", "1"]}]], "..."}], " ", 
    SuperscriptBox["g", 
     RowBox[{
      SubscriptBox["i", "k"], 
      SubscriptBox["j", "k"]}]], 
    SubscriptBox["a", 
     RowBox[{
      RowBox[{
       SubscriptBox["i", "1"], "..."}], 
      SubscriptBox["i", "k"]}]], 
    SubscriptBox["b", 
     RowBox[{
      RowBox[{
       SubscriptBox["j", "1"], "..."}], 
      SubscriptBox["j", "k"]}]]}], TraditionalForm]]],
 "\nis the inner product on k-forms given by the metric g, and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["dVol", "g"], TraditionalForm]]],
 "=\[Star]1 is the metric volume element, given in a coordinate basis by\n  \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["dVol", "g"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SqrtBox[
        RowBox[{"|", 
         RowBox[{"det", " ", "g"}], "|"}]], 
       RowBox[{
        SuperscriptBox["dx", "1"], "\[Wedge]"}]}], "..."}], "\[Wedge]", 
     SuperscriptBox["dx", "n"]}]}], TraditionalForm]]],
 ".\nWith a real metric and real-valued forms, it is clear that \
\[LeftAngleBracket]a,b\[RightAngleBracket] = \[LeftAngleBracket]b,a\
\[RightAngleBracket] and so\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "\[Wedge]", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Star]", "g"], "b"}], ")"}]}], " ", "=", " ", 
    RowBox[{"b", "\[Wedge]", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Star]", "g"], "a"}], ")"}]}]}], TraditionalForm]]],
 "        (for |a|+|*b|=n) \nor in the way we\[CloseCurlyQuote]ll use it,\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Star]", "g"], "a"}], ")"}], TraditionalForm]]],
 "\[Wedge]b = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"|", "a", "|", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"n", "-"}], "|", "a", "|"}], ")"}]}]], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "\[Wedge]", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Star]", "g"], "b"}]}]}], TraditionalForm]]],
 ")      (for |a|+|*b|=n) \nQUESTION: What about \
\[DoubleStruckCapitalC]-valued forms?\nWe also have that diff and codiff (of \
any CovD) are adjoints of each other, in the sense that\n  \[Integral]  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"da", "\[Wedge]"}], 
    SubscriptBox["\[Star]", "g"]}], TraditionalForm]]],
 "b = \[Integral]  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"b", "\[Wedge]"}], 
    SubscriptBox["\[Star]", "g"], "da"}], TraditionalForm]]],
 " = \[Integral]  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "\[Wedge]"}], 
    SubscriptBox["\[Star]", "g"], 
    RowBox[{
     SubscriptBox["\[Delta]", "g"], "b"}]}], TraditionalForm]]],
 " = \[Integral]  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", "g"], 
     RowBox[{"b", "\[Wedge]"}]}], 
    SubscriptBox["\[Star]", "g"], "a"}], TraditionalForm]]],
 "\nThe above rule is convenient with the inverse of Hodge, i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Star]", "g", 
      RowBox[{"-", "1"}]], 
     SubscriptBox["\[Star]", "g"]}], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Star]", "g"], 
      SubsuperscriptBox["\[Star]", "g", 
       RowBox[{"-", "1"}]]}], "=", "id"}]}], TraditionalForm]]],
 ". This inverse is\n  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Star]", "g", 
      RowBox[{"-", "1"}]], "a"}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"|", "a", "|", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"n", "-"}], "|", "a", "|"}], ")"}]}]], "s"}], " ", 
     SubscriptBox["\[Star]", "g"], "a"}]}], TraditionalForm]]],
 "\nwhere s=SignDetOfMetric[g]\nTODO:\n  1. Act on ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Star]", "g2"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", "g2"], TraditionalForm]]],
 " where g2 is a second metric on the same manifold, and is also \
non-degenerate. ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Star]", "g2"], TraditionalForm]]],
 " can be converted to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Star]", "g"], TraditionalForm]]],
 " by including a ratio of volume elements (the ratio is coordinate-free).\n  \
2. What to do with Lie, Int?\n  3. What about coframe, connection, torsion, \
curvature, etc.?"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InvHodge", "[", "metric_", "]"}], "[", "expr_", "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"Grade", "[", 
         RowBox[{"expr", ",", "Wedge"}], "]"}]}], ",", 
       RowBox[{"n", "=", 
        RowBox[{"DimOfMetric", "@", "metric"}]}], ",", 
       RowBox[{"s", "=", 
        RowBox[{"SignDetOfMetric", "@", "metric"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"k", 
         RowBox[{"(", 
          RowBox[{"n", "-", "k"}], ")"}]}], ")"}]}], "s", " ", 
      RowBox[{
       RowBox[{"Hodge", "[", "metric", "]"}], "@", "expr"}]}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "We will use it as follows:\n  \[Integral] da \[Wedge] c = \[Integral] a \
\[Wedge] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Star]", "g"], 
    SubscriptBox["\[Delta]", "g"], 
    SubsuperscriptBox["\[Star]", "g", 
     RowBox[{"-", "1"}]], "c"}], TraditionalForm]]],
 "\nand\n  \[Integral] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Delta]", "g"], 
     RowBox[{"b", " ", "\[Wedge]", " ", "c"}]}], " ", "=", " ", 
    RowBox[{"\[Integral]", " ", 
     RowBox[{
      RowBox[{"b", " ", "\[Wedge]"}], " ", 
      SubscriptBox["\[Star]", "g"], "d", 
      SubsuperscriptBox["\[Star]", "g", 
       RowBox[{"-", "1"}]], "c"}]}]}], TraditionalForm]]]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"TODO", ":", 
     RowBox[{
     "More", " ", "checks", " ", "that", " ", "form", " ", "is", " ", 
      "actually", " ", "on", " ", "same", " ", "manifold", " ", "as", " ", 
      "metric"}]}], ",", " ", 
    RowBox[{"etc", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Generate", " ", 
    RowBox[{"rest", ".", " ", "Replace"}], " ", "dummies", " ", "in", " ", 
    RowBox[{"expr", ".", " ", "This"}], " ", "does", " ", "not", " ", "act", 
    " ", "on", " ", "scalar", " ", "arguments", " ", "of", " ", "functions"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", "expr_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"TopRankQ", "[", "expr", "]"}], "&&", 
        RowBox[{"ScalarQ", "[", "expr", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"FormVarD", "[", 
         RowBox[{"form", ",", "met"}], "]"}], "[", 
        RowBox[{
         RowBox[{"ReplaceDummies", "@", "expr"}], ",", "1"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Throw", "@", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"General", "::", "error1"}], ",", 
          "\"\<Can only take variational derivative of top-rank form.\>\""}], 
         "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Thread", " ", "over", " ", "Plus"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{"expr_Plus", ",", "rest_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"FormVarD", "[", 
         RowBox[{"form", ",", "met"}], "]"}], "[", 
        RowBox[{"#", ",", "rest"}], "]"}], "&"}], "/@", "expr"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{"expr_SeriesData", ",", "rest_"}], "]"}], ":=", 
     RowBox[{"xAct`xTensor`Private`SeriesDataMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"FormVarD", "[", 
          RowBox[{"form", ",", "met"}], "]"}], "[", 
         RowBox[{"#", ",", "rest"}], "]"}], "&"}], ",", "expr"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"FormVarD", " ", "on", " ", 
     RowBox[{"products", ":", " ", 
      RowBox[{"sum", " ", "of", " ", 
       RowBox[{"VarDtake", "'"}], "s", " ", "of", " ", "elements"}]}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{"expr_Times", ",", "rest_"}], "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"grades", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Grade", "[", 
            RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
          RowBox[{"List", "@@", "expr"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"Position", "[", 
             RowBox[{"grades", ",", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "=!=", "0"}], "&"}], ")"}]}], ",", "1", ",", 
              RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]}], ">", "1"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Throw", "[", 
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"FormVarD", "::", "error1"}], ",", 
             "\"\<Found Times product of nonscalar forms: \>\"", ",", 
             "expr"}], "]"}], "]"}]}], "]"}], ";", "\t", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"FormVarDtake", "[", 
           RowBox[{"form", ",", "met", ",", "rest", ",", 
            RowBox[{"List", "@@", "expr"}], ",", "count"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"count", ",", 
            RowBox[{"Length", "@", "expr"}]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"FormVarD", " ", "on", " ", 
      RowBox[{"wedges", ":", " ", 
       RowBox[{"sum", " ", "of", " ", 
        RowBox[{"FormVarDtake", "'"}], "s", " ", "of", " ", 
        RowBox[{"elements", ".", "\[IndentingNewLine]", "Note"}], " ", "the", 
        " ", "use", " ", "of", " ", "sumgrades", " ", "for", " ", 
        "reordering", " ", "the", " ", "Wedge"}]}]}], ",", " ", 
     RowBox[{"as", " ", "described", " ", 
      RowBox[{"above", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{"expr_Wedge", ",", "rest_"}], "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"grades", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Grade", "[", 
            RowBox[{"#", ",", "Wedge"}], "]"}], "&"}], "/@", 
          RowBox[{"List", "@@", "expr"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sumgrades", "=", 
           RowBox[{"FoldList", "[", 
            RowBox[{"Plus", ",", "0", ",", "grades"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"grades", "[", 
                RowBox[{"[", "count", "]"}], "]"}], "*", " ", 
               RowBox[{"sumgrades", "[", 
                RowBox[{"[", "count", "]"}], "]"}]}], ")"}]}], 
            RowBox[{"FormVarDtake", "[", 
             RowBox[{"form", ",", "met", ",", "rest", ",", 
              RowBox[{"List", "@@", "expr"}], ",", "count"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"count", ",", 
             RowBox[{"Length", "@", "expr"}]}], "}"}]}], "]"}]}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "FormVarD", " ", "element", " ", "n", " ", "of", " ", "a", " ", "list", 
     " ", "of", " ", "Wedge", " ", "factors", " ", 
     RowBox[{"(", 
      RowBox[{"no", " ", 
       RowBox[{"sign", "--"}], "it", " ", "was", " ", "included", " ", 
       "above"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FormVarDtake", "[", 
      RowBox[{
      "form_", ",", "met_", ",", "rest_", ",", "list_List", ",", 
       "n_Integer"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form", ",", "met"}], "]"}], "[", 
      RowBox[{
       RowBox[{"list", "[", 
        RowBox[{"[", "n", "]"}], "]"}], ",", 
       RowBox[{"Wedge", "[", 
        RowBox[{
         RowBox[{"Wedge", "@@", 
          RowBox[{"Drop", "[", 
           RowBox[{"list", ",", 
            RowBox[{"{", "n", "}"}]}], "]"}]}], ",", "rest"}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Scalar", " ", 
      RowBox[{"functions", ".", " ", "Multiargument"}], " ", "generalization",
       " ", "contributed", " ", "by", " ", 
      RowBox[{"Leo", ".", " ", "multiD"}], " ", "is", " ", "not", " ", 
      "enough", " ", 
      RowBox[{"here", ".", "\[IndentingNewLine]", " ", "Since"}], " ", 
      "operating", " ", "on", " ", "a", " ", "scalar", " ", "function"}], ",",
      " ", 
     RowBox[{
      RowBox[{"don", "'"}], "t", " ", "need", " ", "extra", " ", 
      RowBox[{"Wedge", "'"}], "s"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"func_", "?", "ScalarFunctionQ"}], "[", "args__", "]"}], ",", 
       "rest_"}], "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"repargs", "=", 
         RowBox[{"ReplaceDummies", "/@", 
          RowBox[{"{", "args", "}"}]}]}], "}"}], ",", 
       RowBox[{"Plus", "@@", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"FormVarD", "[", 
             RowBox[{"form", ",", "met"}], "]"}], "[", 
            RowBox[{"#1", ",", 
             RowBox[{"rest", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Derivative", "@@", "#2"}], ")"}], "@", "func"}], "@@",
                "repargs"}]}]}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"repargs", ",", 
            RowBox[{"IdentityMatrix", "@", 
             RowBox[{"Length", "@", "repargs"}]}]}], "}"}]}], "]"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Remove", " ", "Scalar", " ", "head", " ", "because", " ", "in", " ", 
     "general", " ", "the", " ", "result", " ", "is", " ", "not", " ", "a", 
     " ", "scalar"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{"Scalar", "[", "expr_", "]"}], ",", "rest_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form", ",", "met"}], "]"}], "[", 
      RowBox[{
       RowBox[{"ReplaceDummies", "[", "expr", "]"}], ",", "rest"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "Constants", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"_", ",", "_"}], "]"}], "[", 
      RowBox[{
       RowBox[{"x_", "?", "ConstantQ"}], ",", "_"}], "]"}], ":=", "0"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Same", " ", 
      RowBox[{"tensor", ":", " ", 
       RowBox[{
        RowBox[{"metric", ".", " ", "Do"}], " ", "not", " ", "use", " ", 
        "ContractMetric"}]}]}], ",", " ", 
     RowBox[{"which", " ", "hides", " ", "the", " ", 
      RowBox[{"metric", ".", "\[IndentingNewLine]", 
       RowBox[{"Note", ":", " ", 
        RowBox[{
        "This", " ", "part", " ", "is", " ", "identical", " ", "to", " ", 
         "the", " ", "code", " ", "in", " ", "VarD"}]}]}]}], ",", " ", 
     RowBox[{"since", " ", 
      RowBox[{"it", "'"}], "s", " ", "only", " ", "metric", " ", "being", " ",
       "Wedged", " ", "with", " ", 
      RowBox[{"rest", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{
        RowBox[{"metric_", "[", 
         RowBox[{"a_", ",", "b_"}], "]"}], ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"metric_Symbol", "?", "MetricQ"}], "[", 
        RowBox[{"c_", ",", "d_"}], "]"}], ",", "rest_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"xAct`xTensor`Private`metricsign", "[", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}], 
      RowBox[{"ToCanonical", "[", 
       RowBox[{
        RowBox[{"rest", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"metric", "[", 
              RowBox[{
               RowBox[{"ChangeIndex", "@", "a"}], ",", "c"}], "]"}], 
             RowBox[{"metric", "[", 
              RowBox[{
               RowBox[{"ChangeIndex", "@", "b"}], ",", "d"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"metric", "[", 
              RowBox[{
               RowBox[{"ChangeIndex", "@", "a"}], ",", "d"}], "]"}], 
             RowBox[{"metric", "[", 
              RowBox[{
               RowBox[{"ChangeIndex", "@", "b"}], ",", "c"}], "]"}]}]}], 
           ")"}], "/", "2"}]}], ",", 
        RowBox[{"UseMetricOnVBundle", "\[Rule]", "None"}]}], "]"}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Same", " ", 
      RowBox[{"tensor", ".", " ", "Place"}], " ", "indices", " ", "in", " ", 
      "proper", " ", "delta", " ", 
      RowBox[{"positions", ".", " ", 
       RowBox[{"QUESTION", ":", " ", 
        RowBox[{
        "could", " ", "this", " ", "be", " ", "problematic", " ", "for", " ", 
         
         RowBox[{"spinors", "?", "\[IndentingNewLine]", "Note"}]}], ":", " ", 
        
        RowBox[{
        "This", " ", "part", " ", "is", " ", "identical", " ", "to", " ", 
         "the", " ", "code", " ", "in", " ", "VarD"}]}]}]}], ",", " ", 
     RowBox[{"since", " ", 
      RowBox[{"it", "'"}], "s", " ", "only", " ", "deltas", " ", "being", " ",
       "Wedged", " ", "with", " ", 
      RowBox[{"rest", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{
        RowBox[{"form_", "[", "inds1___", "]"}], ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"form_", "?", "xTensorQ"}], "[", "inds2___", "]"}], ",", 
       "rest_"}], "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"clist", "=", 
         RowBox[{"ChangeIndex", "/@", 
          RowBox[{"IndexList", "[", "inds1", "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ToCanonical", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ImposeSymmetry", "[", 
           RowBox[{
            RowBox[{"Inner", "[", 
             RowBox[{"xAct`xTensor`Private`varddelta", ",", "clist", ",", 
              RowBox[{"IndexList", "[", "inds2", "]"}], ",", "Times"}], "]"}],
             ",", "clist", ",", 
            RowBox[{"SymmetryGroupOfTensor", "[", 
             RowBox[{"form", "[", "inds1", "]"}], "]"}]}], "]"}], "rest"}], 
         ",", 
         RowBox[{"UseMetricOnVBundle", "\[Rule]", "None"}]}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"A", " ", "different", " ", "tensor"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{
        RowBox[{"form1_", "[", "inds1___", "]"}], ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"form2_", "?", "xTensorQ"}], "[", "inds2___", "]"}], ",", 
       "rest_"}], "]"}], ":=", 
     RowBox[{"0", "/;", 
      RowBox[{"!", 
       RowBox[{"ImplicitTensorDepQ", "[", 
        RowBox[{"form2", ",", "form1"}], "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Hodge", " ", "identity"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Hodge", "[", "met_", "]"}], "[", "expr_", "]"}], ",", 
       "rest_"}], "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"k", "=", 
          RowBox[{"Grade", "[", 
           RowBox[{"expr", ",", "Wedge"}], "]"}]}], ",", 
         RowBox[{"n", "=", 
          RowBox[{"DimOfMetric", "@", "met"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"k", 
           RowBox[{"(", 
            RowBox[{"n", "-", "k"}], ")"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"FormVarD", "[", 
          RowBox[{"form", ",", "met"}], "]"}], "[", 
         RowBox[{"expr", ",", 
          RowBox[{
           RowBox[{"Hodge", "[", "met", "]"}], "@", "rest"}]}], "]"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"diff", " ", "\[Rule]", " ", 
     RowBox[{
     "Replaced", " ", "by", " ", "Diff", " ", "to", " ", "adjust", " ", "to", 
      " ", "the", " ", "new", " ", 
      RowBox[{"notation", ".", " ", "Dropped"}], " ", 
      RowBox[{"cd", ".", " ", "Added"}], " ", "back", " ", "PD"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{"Diff", "[", 
        RowBox[{"expr_", ",", "PD"}], "]"}], ",", "rest_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form", ",", "met"}], "]"}], "[", 
      RowBox[{"expr", ",", 
       RowBox[{
        RowBox[{"Hodge", "[", "met", "]"}], "@", 
        RowBox[{
         RowBox[{"Codiff", "[", "met", "]"}], "[", 
         RowBox[{
          RowBox[{"InvHodge", "[", "met", "]"}], "@", "rest"}], "]"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"codiff", " ", "\[Rule]", " ", 
     RowBox[{
     "Replaced", " ", "by", " ", "Codiff", " ", "to", " ", "adjust", " ", 
      "to", " ", "the", " ", "new", " ", 
      RowBox[{"notation", ".", " ", "Dropped"}], " ", "cd", " ", "and", " ", 
      "replaced", " ", "ExtCovDiff", " ", "by", " ", 
      RowBox[{"Diff", " ", ".", " ", "Added"}], " ", "back", " ", "covd"}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form_", ",", "met_"}], "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Codiff", "[", "met_", "]"}], "[", 
        RowBox[{"expr_", ",", 
         RowBox[{"covd_", "?", "CovDQ"}]}], "]"}], ",", "rest_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"FormVarD", "[", 
       RowBox[{"form", ",", "met"}], "]"}], "[", 
      RowBox[{"expr", ",", 
       RowBox[{
        RowBox[{"Hodge", "[", "met", "]"}], "@", 
        RowBox[{"Diff", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"InvHodge", "[", "met", "]"}], "@", "rest"}], ",", 
          "covd"}], "]"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$IterationLimit", "::", "itlim"}], "MessageName"], ":", 
  " ", "\<\"Iteration limit of \[NoBreak]\\!\\(4096\\)\[NoBreak] exceeded. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/$IterationLimit/itlim\\\
\", ButtonNote -> \\\"$IterationLimit::itlim\\\"]\\)\"\>"}]], "Message", "MSG"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Diff"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"Diff[form] computes the exterior derivative of form. \
Diff[form,covd] computes the exterior covariant derivative of form with \
respect to the covariant derivative covd.\"\>", "MSG"]], "Print", "PrintUsage",
 CellTags->"Info3599826467-4210687"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5. End private and package", "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1276, 613},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
ShowSelection->True,
TrackCellChangeTimes->False,
Magnification->1.5,
FrontEndVersion->"9.0 for Linux x86 (64-bit) (November 20, 2012)",
StyleDefinitions->"Default.nb"
]

